<!-- build time:Sun Dec 26 2021 20:27:57 GMT+0800 (中国标准时间) --><!DOCTYPE html><html lang="zh-CN,en,default"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#FFF"><link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png"><link rel="icon" type="image/ico" sizes="32x32" href="/images/favicon.ico"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" type="application/rss+xml" href="https://baiyezi.vip/rss.xml"><link rel="alternate" type="application/atom+xml" href="https://baiyezi.vip/atom.xml"><link rel="alternate" type="application/json" href="https://baiyezi.vip/feed.json"><link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/css/app.css?v=0.2.5"><meta name="keywords" content="Java,配置中心,注册中心,Zookeeper,分布式"><link rel="canonical" href="https://baiyezi.vip/zookeeper%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"><title>zookeeper搭建及基本概念 - Java |</title><meta name="generator" content="Hexo 5.4.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">zookeeper搭建及基本概念</h1><div class="meta"><span class="item" title="创建时间：2021-01-18 18:15:46"><span class="icon"><i class="ic i-calendar"></i> </span><span class="text">发表于</span> <time itemprop="dateCreated datePublished" datetime="2021-01-18T18:15:46+08:00">2021-01-18</time> </span><span class="item" title="本文字数"><span class="icon"><i class="ic i-pen"></i> </span><span class="text">本文字数</span> <span>15k</span> <span class="text">字</span> </span><span class="item" title="阅读时长"><span class="icon"><i class="ic i-clock"></i> </span><span class="text">阅读时长</span> <span>14 分钟</span> </span><span id="/zookeeper搭建及基本概念" class="item leancloud_visitors" data-flag-title="" title="阅读次数"><span class="icon"><i class="ic i-eye"></i> </span><span class="text">阅读次数</span> <span class="leancloud-visitors-count"></span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切换导航栏"><span class="line"></span> <span class="line"></span> <span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/" rel="start"></a></li></ul><ul class="right"><li class="item theme"><i class="ic i-sun"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div id="imgs" class="pjax"><ul><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105422.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105418.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105421.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105008.png"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105423.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225104957.png"></li></ul></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"/></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"/><use xlink:href="#gentle-wave" x="48" y="3"/><use xlink:href="#gentle-wave" x="48" y="5"/><use xlink:href="#gentle-wave" x="48" y="7"/></g></svg></div><main><div class="inner"><div id="main" class="pjax"><div class="article wrap"><div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i> <span><a href="/">首页</a></span><i class="ic i-angle-right"></i> <span class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/java/" itemprop="item" rel="index" title="分类于 Java"><span itemprop="name">Java</span></a><meta itemprop="position" content="1"></span></div><article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://baiyezi.vip/zookeeper%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="/images/avatar.png"><meta itemprop="name" content="fanfanfan"><meta itemprop="description" content=", 花有重开日，人无再少年"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content=""></span><div class="body md" itemprop="articleBody"><h2 id="zookeeper安装"><a class="anchor" href="#zookeeper安装">#</a> ZooKeeper 安装</h2><p>此时，ZooKeeper 的最新版本为 3.6.2</p><p><span class="exturl" data-url="aHR0cHM6Ly9ab29LZWVwZXIuYXBhY2hlLm9yZy8=">ZooKeeper 官网</span></p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9keW4vY2xvc2VyLmx1YS9ab29LZWVwZXIvWm9vS2VlcGVyLTMuNi4yL2FwYWNoZS1ab29LZWVwZXItMy42LjItYmluLnRhci5neg==">下载地址</span></p><p>也可以直接使用 wget 命令来下载（下载源码自行编译或者下载编译好的二进制文件，不建议下载源码（目前没找到编译方式），因为我个人下载的源码在启动时就报了错：错误：找不到或无法加载主类 org.apache.zookeeper.server.quorum.QuorumPeerMain）</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># wget https://mirrors.bfsu.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</span></pre></td></tr><tr><td data-num="2"></td><td><pre>--2021-01-08 00:51:33--  https://mirrors.bfsu.edu.cn/apache/zookeeper/zookeeper-3.6.2/apache-zookeeper-3.6.2-bin.tar.gz</pre></td></tr><tr><td data-num="3"></td><td><pre>正在解析主机 mirrors.bfsu.edu.cn <span class="token punctuation">(</span>mirrors.bfsu.edu.cn<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">39.155</span>.141.16, <span class="token number">2001</span>:da8:20f:4435:4adf:37ff:fe55:2840</pre></td></tr><tr><td data-num="4"></td><td><pre>正在连接 mirrors.bfsu.edu.cn <span class="token punctuation">(</span>mirrors.bfsu.edu.cn<span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">39.155</span>.141.16<span class="token operator">|</span>:443<span class="token punctuation">..</span>. 已连接。</pre></td></tr><tr><td data-num="5"></td><td><pre>已发出 HTTP 请求，正在等待回应<span class="token punctuation">..</span>. <span class="token number">200</span> OK</pre></td></tr><tr><td data-num="6"></td><td><pre>长度：12515974 <span class="token punctuation">(</span>12M<span class="token punctuation">)</span> <span class="token punctuation">[</span>application/octet-stream<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre>正在保存至: “apache-zookeeper-3.6.2-bin.tar.gz.1”</pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>apache-zookeeper-3.6 <span class="token number">100</span>%<span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">]</span>  <span class="token number">11</span>.94M  <span class="token number">1</span>.40MB/s  用时 16s     </pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">2021</span>-01-08 00:51:57 <span class="token punctuation">(</span><span class="token number">777</span> KB/s<span class="token punctuation">)</span> - 已保存 “apache-zookeeper-3.6.2-bin.tar.gz.1” <span class="token punctuation">[</span><span class="token number">12515974</span>/12515974<span class="token punctuation">]</span><span class="token punctuation">)</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># tar xf apache-zookeeper-3.6.2-bin.tar.gz </span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir /opt/fan</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mv apache-zookeeper-3.6.2-bin  /opt/fan/</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/fan/apache-zookeeper-3.6.2-bin/</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">[</span>root@localhost apache-zookeeper-3.6.2-bin<span class="token punctuation">]</span><span class="token comment"># ll</span></pre></td></tr><tr><td data-num="6"></td><td><pre>总用量 <span class="token number">36</span></pre></td></tr><tr><td data-num="7"></td><td><pre>drwxr-xr-x. <span class="token number">2</span> fan  fan   <span class="token number">4096</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 bin</pre></td></tr><tr><td data-num="8"></td><td><pre>drwxr-xr-x. <span class="token number">2</span> fan  fan     <span class="token number">77</span> <span class="token number">1</span>月   <span class="token number">7</span> <span class="token number">22</span>:50 conf</pre></td></tr><tr><td data-num="9"></td><td><pre>drwxr-xr-x. <span class="token number">5</span> fan  fan   <span class="token number">4096</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:44 docs</pre></td></tr><tr><td data-num="10"></td><td><pre>drwxr-xr-x. <span class="token number">2</span> root root  <span class="token number">4096</span> <span class="token number">1</span>月   <span class="token number">7</span> 00:09 lib</pre></td></tr><tr><td data-num="11"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan  fan  <span class="token number">11358</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 LICENSE.txt</pre></td></tr><tr><td data-num="12"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan  fan    <span class="token number">432</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 NOTICE.txt</pre></td></tr><tr><td data-num="13"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan  fan   <span class="token number">1963</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 README.md</pre></td></tr><tr><td data-num="14"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan  fan   <span class="token number">3166</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 README_packaging.md</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">[</span>root@localhost apache-zookeeper-3.6.2-bin<span class="token punctuation">]</span><span class="token comment"># cd conf/</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># ll</span></pre></td></tr><tr><td data-num="17"></td><td><pre>总用量 <span class="token number">12</span></pre></td></tr><tr><td data-num="18"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan fan  <span class="token number">535</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 configuration.xsl</pre></td></tr><tr><td data-num="19"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan fan <span class="token number">3435</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 log4j.properties</pre></td></tr><tr><td data-num="20"></td><td><pre>-rw-r--r--. <span class="token number">1</span> fan fan <span class="token number">1148</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 zoo_sample.cfg</pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token comment">#注意：zookeeper 读取的是 zoo.cfg 配置，而新版本的 zookeeper 给出的是 zoo_sample.cfg，此时需要复制一份并改名为 zoo.cfg 即可</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># cp zoo_sample.cfg zoo.cfg</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># ll</span></pre></td></tr><tr><td data-num="24"></td><td><pre>总用量 <span class="token number">16</span></pre></td></tr><tr><td data-num="25"></td><td><pre>-rw-rw-r--. <span class="token number">1</span> fan  fan   <span class="token number">535</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 configuration.xsl</pre></td></tr><tr><td data-num="26"></td><td><pre>-rw-rw-r--. <span class="token number">1</span> fan  fan  <span class="token number">3435</span> <span class="token number">9</span>月   <span class="token number">4</span> <span class="token number">20</span>:43 log4j.properties</pre></td></tr><tr><td data-num="27"></td><td><pre>-rw-r--r--. <span class="token number">1</span> root root <span class="token number">1600</span> <span class="token number">1</span>月   <span class="token number">8</span> 00:10 zoo.cfg</pre></td></tr><tr><td data-num="28"></td><td><pre>-rw-rw-r--. <span class="token number">1</span> fan  fan  <span class="token number">1600</span> <span class="token number">1</span>月   <span class="token number">7</span> <span class="token number">22</span>:37 zoo_sample.cfg</pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># vim zoo.cfg </span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token comment"># The number of milliseconds of each tick</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token assign-left variable">tickTime</span><span class="token operator">=</span><span class="token number">2000</span>  <span class="token comment">#主从机之间的心跳间隔时间</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token comment"># The number of ticks that the initial </span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token comment"># synchronization phase can take</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token assign-left variable">initLimit</span><span class="token operator">=</span><span class="token number">10</span>  <span class="token comment">#主从之间同步的延迟时间 10*2000ms，超过该时间就放弃从节点</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token comment"># The number of ticks that can pass between </span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token comment"># sending a request and getting an acknowledgement</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token assign-left variable">syncLimit</span><span class="token operator">=</span><span class="token number">5</span>  <span class="token comment">#回复时间不能超过 5s</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token comment"># the directory where the snapshot is stored.</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token comment"># do not use /tmp for storage, /tmp here is just </span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token comment"># example sakes.</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token comment">#dataDir=/tmp/zookeeper #一般不使用该目录作为数据的存储目录</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token assign-left variable">dataDir</span><span class="token operator">=</span>/var/fan/zookeeper </pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token comment"># the port at which the clients will connect</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token assign-left variable">clientPort</span><span class="token operator">=</span><span class="token number">2181</span> <span class="token comment">#客户端连接 zookeeper 进程时使用的端口号</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token assign-left variable">quorumListenOnAllIPs</span><span class="token operator">=</span>true  <span class="token comment">#监听所有 ip，这个参数很重要，保证能监听到其他节点的 ip</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment"># the maximum number of client connections.</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token comment"># increase this if you need to handle more clients</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token comment">#maxClientCnxns=60  #允许客户端最大连接数</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token comment">#</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token comment"># Be sure to read the maintenance section of the </span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token comment"># administrator guide before turning on autopurge.</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token comment">#</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment">#</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token comment"># The number of snapshots to retain in dataDir</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token comment">#autopurge.snapRetainCount=3</span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token comment"># Purge task interval in hours</span></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token comment"># Set to "0" to disable auto purge feature</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token comment">#autopurge.purgeInterval=1</span></pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token comment">## Metrics Providers</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token comment">#</span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token comment"># https://prometheus.io Metrics Exporter</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token comment">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token comment">#metricsProvider.httpPort=7000</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token comment">#metricsProvider.exportJvmInfo=true</span></pre></td></tr><tr><td data-num="69"></td><td><pre></pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token comment">#需自行配置节点，这里准备了四台虚拟机作为四个节点</span></pre></td></tr><tr><td data-num="72"></td><td><pre>server.1<span class="token operator">=</span><span class="token number">192.168</span>.137.128:2888:3888 <span class="token comment">#如果启动没有 leader 或者 leader 挂掉后，其它节点使用 3888 端口工作来投票选出新的 leader，新的 leader 以及其他节点继续工作在 2888 端口。只要有 n/2+1 个节点参与选举同一个节点作为 leader 就可以选举出新的 leader</span></pre></td></tr><tr><td data-num="73"></td><td><pre>server.2<span class="token operator">=</span><span class="token number">192.168</span>.137.129:2888:3888</pre></td></tr><tr><td data-num="74"></td><td><pre>server.3<span class="token operator">=</span><span class="token number">192.168</span>.137.130:2888:3888</pre></td></tr><tr><td data-num="75"></td><td><pre>server.4<span class="token operator">=</span><span class="token number">192.168</span>.137.131:2888:3888</pre></td></tr><tr><td data-num="76"></td><td><pre></pre></td></tr><tr><td data-num="77"></td><td><pre></pre></td></tr><tr><td data-num="78"></td><td><pre></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token comment">#创建存放数据的目录 dataDir</span></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir /var/fan</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir /var/fan/zookeeper</span></pre></td></tr><tr><td data-num="82"></td><td><pre></pre></td></tr><tr><td data-num="83"></td><td><pre><span class="token comment"># 创建一个文件 myid，写入一个 1 ，代表存放 server.1 节点。这里将准备四台虚拟机作为四个节点，每台虚拟机都需要建立一下目录，但 myid 文件中的数字依次为 1、2、3、4</span></pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token comment">#137.128 节点</span></pre></td></tr><tr><td data-num="85"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /var/fan/zookeeper/</span></pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token punctuation">[</span>root@localhost zookeeper<span class="token punctuation">]</span><span class="token comment"># vim myid</span></pre></td></tr><tr><td data-num="87"></td><td><pre></pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token number">1</span></pre></td></tr><tr><td data-num="89"></td><td><pre>~                  </pre></td></tr><tr><td data-num="90"></td><td><pre></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token comment">#137.129 节点</span></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir -p /var/fan/zookeeper</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo 2 > /var/fan/zookeeper/myid</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /var/fan/zookeeper/myid </span></pre></td></tr><tr><td data-num="95"></td><td><pre><span class="token number">2</span></pre></td></tr><tr><td data-num="96"></td><td><pre></pre></td></tr><tr><td data-num="97"></td><td><pre><span class="token comment">#137.130 节点</span></pre></td></tr><tr><td data-num="98"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir -p /var/fan/zookeeper</span></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo 3 > /var/fan/zookeeper/myid</span></pre></td></tr><tr><td data-num="100"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /var/fan/zookeeper/myid </span></pre></td></tr><tr><td data-num="101"></td><td><pre><span class="token number">3</span></pre></td></tr><tr><td data-num="102"></td><td><pre></pre></td></tr><tr><td data-num="103"></td><td><pre><span class="token comment">#137.131 节点</span></pre></td></tr><tr><td data-num="104"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir -p /var/fan/zookeeper</span></pre></td></tr><tr><td data-num="105"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># echo 4 > /var/fan/zookeeper/myid</span></pre></td></tr><tr><td data-num="106"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cat /var/fan/zookeeper/myid </span></pre></td></tr><tr><td data-num="107"></td><td><pre><span class="token number">4</span></pre></td></tr><tr><td data-num="108"></td><td><pre></pre></td></tr><tr><td data-num="109"></td><td><pre></pre></td></tr><tr><td data-num="110"></td><td><pre><span class="token comment">#将 137.130 节点中的 zookeeper 拷贝至其他节点各一份</span></pre></td></tr><tr><td data-num="111"></td><td><pre><span class="token punctuation">[</span>root@localhost zookeeper<span class="token punctuation">]</span><span class="token comment"># cd</span></pre></td></tr><tr><td data-num="112"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /opt/</span></pre></td></tr><tr><td data-num="113"></td><td><pre><span class="token comment">#将之间解压并配置好的 zookeeper 拷贝到其他三台虚拟机中</span></pre></td></tr><tr><td data-num="114"></td><td><pre><span class="token punctuation">[</span>root@localhost opt<span class="token punctuation">]</span><span class="token comment"># scp -r ./fan/  192.168.137.128:`pwd`</span></pre></td></tr><tr><td data-num="115"></td><td><pre>root@192.168.137.128's password: </pre></td></tr><tr><td data-num="116"></td><td><pre><span class="token punctuation">[</span>root@localhost opt<span class="token punctuation">]</span><span class="token comment"># scp -r ./fan/  192.168.137.129:`pwd`</span></pre></td></tr><tr><td data-num="117"></td><td><pre><span class="token punctuation">[</span>root@localhost opt<span class="token punctuation">]</span><span class="token comment"># scp -r ./fan/  192.168.137.131:`pwd`</span></pre></td></tr><tr><td data-num="118"></td><td><pre></pre></td></tr><tr><td data-num="119"></td><td><pre></pre></td></tr><tr><td data-num="120"></td><td><pre><span class="token comment">#将 zookeeper 添加到环境变量，注意 zookeeper 依赖 jdk，需要在每台虚拟机配置好 jdk 环境</span></pre></td></tr><tr><td data-num="121"></td><td><pre><span class="token punctuation">[</span>root@localhost opt<span class="token punctuation">]</span><span class="token comment"># vim /etc/profile</span></pre></td></tr><tr><td data-num="122"></td><td><pre><span class="token punctuation">..</span>.</pre></td></tr><tr><td data-num="123"></td><td><pre><span class="token builtin class-name">export</span> <span class="token assign-left variable">REDIS_HOME</span><span class="token operator">=</span>/opt/fan/redis6</pre></td></tr><tr><td data-num="124"></td><td><pre><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/local/jdk1.8export <span class="token assign-left variable">ZOOKEEPER_HOME</span><span class="token operator">=</span>/opt/fan/apache-zookeeper-3.6.2-bin</pre></td></tr><tr><td data-num="125"></td><td><pre><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$REDIS_HOME</span>/bin:<span class="token variable">$JAVA_HOME</span>/bin:<span class="token variable">$ZOOKEEPER_HOME</span>/bin</pre></td></tr><tr><td data-num="126"></td><td><pre></pre></td></tr><tr><td data-num="127"></td><td><pre><span class="token punctuation">..</span>.</pre></td></tr><tr><td data-num="128"></td><td><pre><span class="token punctuation">[</span>root@localhost opt<span class="token punctuation">]</span><span class="token comment"># source /etc/profile</span></pre></td></tr><tr><td data-num="129"></td><td><pre></pre></td></tr><tr><td data-num="130"></td><td><pre><span class="token comment">#同时覆盖其他节点中的 profile，然后记得在每台虚拟机下执行   source /etc/profile</span></pre></td></tr><tr><td data-num="131"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># scp /etc/profile  192.168.137.128:/etc</span></pre></td></tr><tr><td data-num="132"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># scp /etc/profile  192.168.137.129:/etc</span></pre></td></tr><tr><td data-num="133"></td><td><pre><span class="token punctuation">[</span>root@localhost conf<span class="token punctuation">]</span><span class="token comment"># scp /etc/profile  192.168.137.131:/etc</span></pre></td></tr></table></figure><p>这里将准备四台虚拟机来演示 ZooKeeper 的分布式协调，需要在每台虚拟机上装好 ZooKeeper</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210107111404546.png" alt="image-20210107111404546"></p><p>分别启动每台虚拟机上的 ZooKeeper（注意：需要在防火墙放行 2888 以及 3888 端口，或者直接关闭防火墙：systemctl stop firewalld.service ）</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># zkServer.sh start-foreground  # start-foreground 代表在前台运行</span></pre></td></tr></table></figure><p>从日志中可以看到，四个节点选出来的 leader（主机）是节点 4（myid 为 4 的虚拟机）。其实，在启动其中的三台时就可以选出 leader 了，以为选举 leader 的规则是 n/2 + 1 , 即有多一半选举某个节点为 leader 时，那么就代表选举成功。</p><p>137.128 节点：</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108133152801.png" alt="image-20210108133152801"></p><p>137.129 节点：</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108133337828.png" alt="image-20210108133227427"></p><p>137.130 节点：</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108133337828.png" alt="image-20210108133257223"></p><p>137.131 节点：1、2、3 都是 4 的 follower</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108135127585.png" alt="image-20210108135127585"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108135423584.png" alt="image-20210108135423584"></p><p>此外，<span class="exturl" data-url="aHR0cDovL3huLS16a1NlcnZlci0wcTN5eXguc2g=">通过 zkServer.sh</span> status 也可以查看 ZooKeeper 的状态以及角色</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108140024963.png" alt="image-20210108140024963"></p><p>此时，可以看到 zookeeper 客户端口也是在监听中的</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost zookeeper<span class="token punctuation">]</span><span class="token comment"># netstat -nalp | grep java</span></pre></td></tr><tr><td data-num="2"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::44377                :::*                    LISTEN      <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="3"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::2181                 :::*                    LISTEN      <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="4"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::2888                 :::*                    LISTEN      <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="5"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::3888                 :::*                    LISTEN      <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="6"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::8080                 :::*                    LISTEN      <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="7"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:3888    <span class="token number">192.168</span>.137.129:39748   CLOSE_WAIT  <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="8"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:2888    <span class="token number">192.168</span>.137.131:37766   ESTABLISHED <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="9"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:33732   <span class="token number">192.168</span>.137.130:3888    ESTABLISHED <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="10"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:50362   <span class="token number">192.168</span>.137.131:3888    ESTABLISHED <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="11"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:3888    <span class="token number">192.168</span>.137.129:39750   CLOSE_WAIT  <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="12"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:2888    <span class="token number">192.168</span>.137.130:43644   ESTABLISHED <span class="token number">2160</span>/java           </pre></td></tr><tr><td data-num="13"></td><td><pre>unix  <span class="token number">2</span>      <span class="token punctuation">[</span> <span class="token punctuation">]</span>         STREAM     CONNECTED     <span class="token number">47066</span>    <span class="token number">2160</span>/java            </pre></td></tr><tr><td data-num="14"></td><td><pre>unix  <span class="token number">2</span>      <span class="token punctuation">[</span> <span class="token punctuation">]</span>         STREAM     CONNECTED     <span class="token number">47083</span>    <span class="token number">2160</span>/java            </pre></td></tr><tr><td data-num="15"></td><td><pre>unix  <span class="token number">2</span>      <span class="token punctuation">[</span> <span class="token punctuation">]</span>         STREAM     CONNECTED     <span class="token number">47075</span>    <span class="token number">2160</span>/java            </pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">[</span>root@localhost zookeeper<span class="token punctuation">]</span><span class="token comment">#</span></pre></td></tr></table></figure><h3 id="zookeeper客户端启动"><a class="anchor" href="#zookeeper客户端启动">#</a> ZooKeeper 客户端启动</h3><p>当以上 ZooKeeper 服务端启动后，接着就可以启动 ZooKeeper 客户端了</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># zkCli.sh</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">..</span>.</pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token builtin class-name">help</span></pre></td></tr><tr><td data-num="5"></td><td><pre>ZooKeeper -server host:port -client-configuration properties-file cmd args</pre></td></tr><tr><td data-num="6"></td><td><pre>	addWatch <span class="token punctuation">[</span>-m mode<span class="token punctuation">]</span> path <span class="token comment"># optional mode is one of [PERSISTENT, PERSISTENT_RECURSIVE] - default is PERSISTENT_RECURSIVE</span></pre></td></tr><tr><td data-num="7"></td><td><pre>	addauth scheme auth</pre></td></tr><tr><td data-num="8"></td><td><pre>	close </pre></td></tr><tr><td data-num="9"></td><td><pre>	config <span class="token punctuation">[</span>-c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="10"></td><td><pre>	connect host:port</pre></td></tr><tr><td data-num="11"></td><td><pre>	create <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e<span class="token punctuation">]</span> <span class="token punctuation">[</span>-c<span class="token punctuation">]</span> <span class="token punctuation">[</span>-t ttl<span class="token punctuation">]</span> path <span class="token punctuation">[</span>data<span class="token punctuation">]</span> <span class="token punctuation">[</span>acl<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>	delete <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> path</pre></td></tr><tr><td data-num="13"></td><td><pre>	deleteall path <span class="token punctuation">[</span>-b batch size<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="14"></td><td><pre>	delquota <span class="token punctuation">[</span>-n<span class="token operator">|</span>-b<span class="token punctuation">]</span> path</pre></td></tr><tr><td data-num="15"></td><td><pre>	get <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> path</pre></td></tr><tr><td data-num="16"></td><td><pre>	getAcl <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> path</pre></td></tr><tr><td data-num="17"></td><td><pre>	getAllChildrenNumber path</pre></td></tr><tr><td data-num="18"></td><td><pre>	getEphemerals path</pre></td></tr><tr><td data-num="19"></td><td><pre>	<span class="token function">history</span> </pre></td></tr><tr><td data-num="20"></td><td><pre>	listquota path</pre></td></tr><tr><td data-num="21"></td><td><pre>	<span class="token function">ls</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> path</pre></td></tr><tr><td data-num="22"></td><td><pre>	printwatches on<span class="token operator">|</span>off</pre></td></tr><tr><td data-num="23"></td><td><pre>	quit </pre></td></tr><tr><td data-num="24"></td><td><pre>	reconfig <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>-file path<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">[</span>-members <span class="token assign-left variable">serverID</span><span class="token operator">=</span>host:port1:port2<span class="token punctuation">;</span>port3<span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>*<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">[</span>-add <span class="token assign-left variable">serverId</span><span class="token operator">=</span>host:port1:port2<span class="token punctuation">;</span>port3<span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">]</span>* <span class="token punctuation">[</span>-remove serverId<span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>*<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="25"></td><td><pre>	redo cmdno</pre></td></tr><tr><td data-num="26"></td><td><pre>	removewatches path <span class="token punctuation">[</span>-c<span class="token operator">|</span>-d<span class="token operator">|</span>-a<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="27"></td><td><pre>	<span class="token builtin class-name">set</span> <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> path data</pre></td></tr><tr><td data-num="28"></td><td><pre>	setAcl <span class="token punctuation">[</span>-s<span class="token punctuation">]</span> <span class="token punctuation">[</span>-v version<span class="token punctuation">]</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> path acl</pre></td></tr><tr><td data-num="29"></td><td><pre>	setquota -n<span class="token operator">|</span>-b val path</pre></td></tr><tr><td data-num="30"></td><td><pre>	<span class="token function">stat</span> <span class="token punctuation">[</span>-w<span class="token punctuation">]</span> path</pre></td></tr><tr><td data-num="31"></td><td><pre>	<span class="token function">sync</span> path</pre></td></tr><tr><td data-num="32"></td><td><pre>	version </pre></td></tr><tr><td data-num="33"></td><td><pre>Command not found: Command not found <span class="token builtin class-name">help</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token function">ls</span> /  <span class="token comment">#查看根目录下节点</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">[</span>zookeeper<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">3</span><span class="token punctuation">]</span> create /zk <span class="token string">""</span>  <span class="token comment">#根目录了下创建一个空节点</span></pre></td></tr><tr><td data-num="4"></td><td><pre>Created /zk</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token function">ls</span> /</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">[</span>zk, zookeeper<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">5</span><span class="token punctuation">]</span> create /zk/zk1 <span class="token string">""</span></pre></td></tr><tr><td data-num="8"></td><td><pre>Created /zk/zk1</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">6</span><span class="token punctuation">]</span> get /zk  <span class="token comment">#获取节点中的值</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">7</span><span class="token punctuation">]</span> <span class="token builtin class-name">set</span> /zk <span class="token string">"hello"</span>  <span class="token comment">#给节点设置值</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">8</span><span class="token punctuation">]</span> get /zk</pre></td></tr><tr><td data-num="13"></td><td><pre>hello</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">9</span><span class="token punctuation">]</span> create -e /zk2 <span class="token string">"aaaaa"</span>  <span class="token comment"># 创建临时节点，-e 代表临时节点</span></pre></td></tr><tr><td data-num="16"></td><td><pre>Created /zk2</pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">13</span><span class="token punctuation">]</span> create /aaa</pre></td></tr><tr><td data-num="18"></td><td><pre>Created /aaa</pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">14</span><span class="token punctuation">]</span> delete /aaa  <span class="token comment">#删除空节点</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">15</span><span class="token punctuation">]</span> get /aaa</pre></td></tr><tr><td data-num="21"></td><td><pre>org.apache.zookeeper.KeeperException<span class="token variable">$NoNodeException</span><span class="token builtin class-name">:</span> KeeperErrorCode <span class="token operator">=</span> NoNode <span class="token keyword">for</span> /aaa</pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">17</span><span class="token punctuation">]</span> deleteall /zk  <span class="token comment">#删除带有数据的节点</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">18</span><span class="token punctuation">]</span> quit <span class="token comment">#退出客户端，关闭 session</span></pre></td></tr></table></figure><p>ZooKeeper 是二进制安全的，即存放的是字节，不关心外界编码。</p><p>在 ZooKeeper 客户端进行命令操作时会有输出以下信息：</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">2</span><span class="token punctuation">]</span> get /zk</pre></td></tr><tr><td data-num="2"></td><td><pre>hello</pre></td></tr><tr><td data-num="3"></td><td><pre>cZxid <span class="token operator">=</span> 0x200000002 <span class="token comment">#共 8 字节，最前面的 2 之前省略了 7 个 0，代表 leader 的纪元数（即第几代 leader），后面的 00000002 共 4 个字节，代表创建当前节点的事务 id，如果 leader 更换，那么纪元数加 1，且事务 id 重新开始计算</span></pre></td></tr><tr><td data-num="4"></td><td><pre>ctime <span class="token comment">#代表创建节点的时间，即各个命令执行的时间</span></pre></td></tr><tr><td data-num="5"></td><td><pre>mZxid <span class="token operator">=</span> 0x200000004 <span class="token comment">#低 4 字节 00000004 代表修改当前节点（如给节点设置值）后的事务 id</span></pre></td></tr><tr><td data-num="6"></td><td><pre>mtime <span class="token comment">#代表修改节点的时间</span></pre></td></tr><tr><td data-num="7"></td><td><pre>pZxid <span class="token operator">=</span> 0x200000003 <span class="token comment">#代表当前节点下创建的最新的节点的事务 id</span></pre></td></tr><tr><td data-num="8"></td><td><pre>ephemeralOwner <span class="token operator">=</span> 0x46d3a3992750002  <span class="token comment">#代表该节点的临时持有者，如果是临时节点，那么该值就是启动 ZooKeeper 客户端时的 session 的 id</span></pre></td></tr></table></figure><p>每次启动 ZooKeeper 客户端都会创建一个 session，以及对应的 session 的 id（session 的创建也会记录在事务 id 中），在该 session 下创建的临时节点会随着 ZooKeeper 客户端的关闭而失效，因为 ZooKeeper 客户端的关闭意味着本次 session 的关闭，而临时节点的所有者是 session。ZooKeeper 的这个特性可以作为分布式锁来使用，即某个临时节点存在时就代表获得锁。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108151332859.png" alt="image-20210108151332859"></p><p>如过 ZooKeeper 客户端创建了一个<strong>临时节点</strong>，且该节点中的值已经缓存在了本地，此时如果该 ZooKeeper 客户端连接的 ZooKeeper 端挂掉了，那么该 ZooKeeper 客户端会去连接新的 ZooKeeper 服务端，但是此时该 ZooKeeper 客户端的临时节点将丢失。因为该 ZooKeeper 客户端在连接新的 ZooKeeper 服务端时重新建立 Socket 连接，重新创建 session。</p><p>客户端的创建以及关闭意味着 session 的创建和关闭，这些操作都会记录在事务 id 中，且会将事务 id 以及 session 的 id 同步到其他节点中，这就是 ZooKeeper 的<strong>视图同步</strong>。所以，理论上，只要客户端连接新的服务端的时间小于 session 超时的时间，那么客户端的临时节点就能在客户端连接新的服务端后去新的服务端同步原来的 session。</p><p>从各个节点的服务端可以看到，每个节点都同步了其他节点的 session 的 id：</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108165429704.png" alt="image-20210108165429704"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108165509619.png" alt="image-20210108165509619"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108165528633.png" alt="image-20210108165528633"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210108165559411.png" alt="image-20210108165559411"></p><h3 id="序列节点"><a class="anchor" href="#序列节点">#</a> 序列节点</h3><p>当有多个 ZooKeeper 客户端在同一个节点下创建同名节点时，此时要么先完成创建的节点被后完成创建的节点覆盖，要么后创建节点时无法完成创建，这时就可以创建序列节点，即为每一个节点后面加一个序列号来保证唯一性。</p><p>客户端一：</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">9</span><span class="token punctuation">]</span> create -s /abc <span class="token string">"hello"</span></pre></td></tr><tr><td data-num="2"></td><td><pre>Created /abc0000000002</pre></td></tr></table></figure><p>客户端二：</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>zk: localhost:2181<span class="token punctuation">(</span>CONNECTED<span class="token punctuation">)</span> <span class="token number">0</span><span class="token punctuation">]</span> create -s /abc <span class="token string">"world"</span></pre></td></tr><tr><td data-num="2"></td><td><pre>Created /abc0000000003</pre></td></tr></table></figure><p>可以看到几点后面的序列号在递增。</p><p>通过以上知识点可以总结出：</p><ul><li>ZooKeeper 的每个节点最大为 1MB，这样可以实现统一配置管理</li><li>ZooKeeper 的目录树结构可以实现分组管理</li><li>ZooKeeper 的 sequential（序列节点）可以实现统一命名</li><li>ZooKeeper 的临时节点可以实现分布式锁，可以将锁依托一个父节点，然后父节点下可以创建序列节点，代表父节点下可以有多把锁</li></ul><h3 id="节点间连接关系"><a class="anchor" href="#节点间连接关系">#</a> 节点间连接关系</h3><p>3888 端口作用：选 leader 投票</p><p>2888 端口作用：leader 接收 write 请求或者同步数据</p><p><em><strong>以下操作均在 ZooKeeper 服务启动的情况下进行</strong></em></p><p>137.128 窗口：可以看到 137.128 节点监听 3888 端口，且分别被 129、130、131 节点连接</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># netstat -natp | egrep '(2888|3888)'</span></pre></td></tr><tr><td data-num="2"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::3888                 :::*                    LISTEN      <span class="token number">1633</span>/java           </pre></td></tr><tr><td data-num="3"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.128:3888    <span class="token number">192.168</span>.137.130:52808   ESTABLISHED <span class="token number">1633</span>/java           </pre></td></tr><tr><td data-num="4"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.128:3888    <span class="token number">192.168</span>.137.129:41292   ESTABLISHED <span class="token number">1633</span>/java           </pre></td></tr><tr><td data-num="5"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.128:3888    <span class="token number">192.168</span>.137.131:40942   ESTABLISHED <span class="token number">1633</span>/java           </pre></td></tr><tr><td data-num="6"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.128:35554   <span class="token number">192.168</span>.137.131:2888    ESTABLISHED <span class="token number">1633</span>/java</pre></td></tr></table></figure><p>137.129 窗口：可以看到 137.129 节点监听端口 3888，且分别被 130、131 节点连接</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># netstat -natp | egrep '(2888|3888)'</span></pre></td></tr><tr><td data-num="2"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::3888                 :::*                    LISTEN      <span class="token number">1650</span>/java           </pre></td></tr><tr><td data-num="3"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:3888    <span class="token number">192.168</span>.137.130:53562   ESTABLISHED <span class="token number">1650</span>/java           </pre></td></tr><tr><td data-num="4"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:37894   <span class="token number">192.168</span>.137.131:2888    ESTABLISHED <span class="token number">1650</span>/java           </pre></td></tr><tr><td data-num="5"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:41292   <span class="token number">192.168</span>.137.128:3888    ESTABLISHED <span class="token number">1650</span>/java           </pre></td></tr><tr><td data-num="6"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.129:3888    <span class="token number">192.168</span>.137.131:35174   ESTABLISHED <span class="token number">1650</span>/java</pre></td></tr></table></figure><p>137.130 窗口：可以看到 137.130 节点监听端口 3888，且被 131 节点连接</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># netstat -natp | egrep '(2888|3888)'</span></pre></td></tr><tr><td data-num="2"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::3888                 :::*                    LISTEN      <span class="token number">2581</span>/java           </pre></td></tr><tr><td data-num="3"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.130:3888    <span class="token number">192.168</span>.137.131:56084   ESTABLISHED <span class="token number">2581</span>/java           </pre></td></tr><tr><td data-num="4"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.130:53562   <span class="token number">192.168</span>.137.129:3888    ESTABLISHED <span class="token number">2581</span>/java           </pre></td></tr><tr><td data-num="5"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.130:52606   <span class="token number">192.168</span>.137.131:2888    ESTABLISHED <span class="token number">2581</span>/java           </pre></td></tr><tr><td data-num="6"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.130:52808   <span class="token number">192.168</span>.137.128:3888    ESTABLISHED <span class="token number">2581</span>/java</pre></td></tr></table></figure><p>137.131 窗口：可以看到 137.131 节点监听端口 2888、3888，且 3888 端口无其他节点连接，2888 端口被其他三个节点连接</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># netstat -natp | egrep '(2888|3888)'</span></pre></td></tr><tr><td data-num="2"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::2888                 :::*                    LISTEN      <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="3"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> :::3888                 :::*                    LISTEN      <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="4"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.131:40942   <span class="token number">192.168</span>.137.128:3888    ESTABLISHED <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="5"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.131:2888    <span class="token number">192.168</span>.137.128:35554   ESTABLISHED <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="6"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.131:2888    <span class="token number">192.168</span>.137.130:52606   ESTABLISHED <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="7"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.131:56084   <span class="token number">192.168</span>.137.130:3888    ESTABLISHED <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="8"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.131:35174   <span class="token number">192.168</span>.137.129:3888    ESTABLISHED <span class="token number">2329</span>/java           </pre></td></tr><tr><td data-num="9"></td><td><pre>tcp6       <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">192.168</span>.137.131:2888    <span class="token number">192.168</span>.137.129:37894   ESTABLISHED <span class="token number">2329</span>/java</pre></td></tr></table></figure><p>根据以上连接情况可以看到，在 3888 端口下，节点之间间接互相连接，所以，其中任意一个节点的数据都能够同步到其他节点中去。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210111175138257.png" alt="image-20210111175138257"></p><h3 id="observer"><a class="anchor" href="#observer">#</a> Observer</h3><p>ZooKeeper 的 Follower 选举出 Leader（只有 Follower 才能选举），在 Follower 之下还有 Observer，Observer 用于放大查询能力</p><h2 id="zookeeper概念"><a class="anchor" href="#zookeeper概念">#</a> ZooKeeper 概念</h2><p>ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services. All of these kinds of services are used in some form or another by distributed applications. Each time they are implemented there is a lot of work that goes into fixing the bugs and race conditions that are inevitable. Because of the difficulty of implementing these kinds of services, applications initially usually skimp on them, which make them brittle in the presence of change and difficult to manage. Even when done correctly, different implementations of these services lead to management complexity when the applications are deployed.</p><p>译：ZooKeeper 是用于维护配置信息，命名，提供分布式同步和提供组服务的集中式服务。 所有这些类型的服务都以某种形式被分布式应用程序使用。 每次实施它们时，都会进行很多工作来修复不可避免的错误和竞争条件。 由于难以实现这类服务，因此应用程序最初通常会跳过它们，这会使它们在发生更改时变脆并且难以管理。 即使部署正确，这些服务的不同实现也会导致管理复杂。</p><p>ZooKeeper is a distributed, open-source coordination service for distributed applications. It exposes a simple set of primitives that distributed applications can build upon to implement higher level services for synchronization, configuration maintenance, and groups and naming. It is designed to be easy to program to, and uses a data model styled after the familiar directory tree structure of file systems. It runs in Java and has bindings for both Java and C.</p><p>Coordination services are notoriously hard to get right. They are especially prone to errors such as race conditions and deadlock. The motivation behind ZooKeeper is to relieve distributed applications the responsibility of implementing coordination services from scratch.</p><p>译：ZooKeeper 是一个针对分布式应用程序的分布式开源协调服务。 它公开了一组简单的原语（API），分布式应用程序可以基于这些原语来实现用于同步，配置维护以及组和命名的更高级别的服务。 它的设计易于编程，并使用了按照文件系统熟悉的目录树结构样式设置的数据模型。 它以 Java 运行，并且具有 Java 和 C 的绑定。</p><p>众所周知，协调服务很难做到。 它们特别容易出现诸如比赛条件和死锁之类的错误。 ZooKeeper 背后的动机是减轻分布式应用程序从头开始实施协调服务的责任。</p><h3 id="zookeeper的特点"><a class="anchor" href="#zookeeper的特点">#</a> ZooKeeper 的特点</h3><ul><li><p><strong>ZooKeeper 很简单</strong>。 ZooKeeper 允许分布式进程通过共享的分层名称空间相互协调，该名称空间的组织方式类似于标准文件系统。 名称空间由数据寄存器（在 ZooKeeper 看来，称为 znode）组成，它们类似于文件和目录。 与设计用于存储的典型文件系统不同，<strong>ZooKeeper 数据保留在内存中</strong>，这意味着 ZooKeeper 可以实现高吞吐量和低延迟数。ZooKeeper 实施对高性能，高可用性，严格有序访问加以重视。 ZooKeeper 的性能方面意味着它可以在大型的分布式系统中使用。 可靠性方面使它不会成为单点故障。 严格的排序意味着可以在客户端上实现复杂的同步原语。</p></li><li><p><strong>ZooKeeper 可复制</strong>。 像它协调的分布式进程一样，ZooKeeper 本身也可以在称为集合的一组主机上进行复制。集群有复制集群（主从复制集群，每个实例中的数据都是相同的全量的数据）和分片集群（完整的数据分布在不同的实例中），Zookeeper 是主从复制集群，即每个 server 中的数据是一样且全量的。从而有一个问题：如果 ZooKeeper 主机挂掉，那么其他从机也将不可用，导致服务不可用，所以为了提高 ZooKeeper 的高可用性，ZooKeeper 在主机挂掉后可以可以快速的（大约 200ms）选出一个从机作为新的主机继续提供服务，因此，ZooKeeper 是高可用的。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210106133240824.png" alt="image-20210106133240824"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210106143900498.png" alt="image-20210106143900498"></p><p>组成 ZooKeeper 服务的服务器都必须彼此了解。 它们维护内存中的状态图像，以及持久存储中的事务日志和快照。 只要大多数服务器可用，ZooKeeper 服务将可用。</p><p>客户端连接到单个 ZooKeeper 服务器。 客户端维护一个 TCP 连接，通过它发送请求，获取响应，获取监视事件并发送心跳。 如果与服务器的 TCP 连接断开，则客户端将连接到其他服务器。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210106154912152.png" alt="image-20210106154912152"></p></li><li><p><strong>ZooKeeper 是有序的</strong>。 ZooKeeper 用一个反映所有 ZooKeeper 事务顺序的数字标记每个更新。 后续操作可以使用该命令来实现更高级别的抽象，例如同步原语。</p></li><li><p><strong>ZooKeeper 速度快</strong>。 在 “读取为主” 的工作负载中，它特别快。 ZooKeeper 应用程序可在数千台计算机上运行，并且在读取比写入更为常见的情况下，其性能最佳，比率约为 10：1。</p></li></ul><h3 id="zookeeper的api"><a class="anchor" href="#zookeeper的api">#</a> ZooKeeper 的 API</h3><ul><li><em>create</em> : creates a node at a location in the tree</li><li><em>delete</em> : deletes a node</li><li><em>exists</em> : tests if a node exists at a location</li><li><em>get data</em> : reads the data from a node</li><li><em>set data</em> : writes data to a node</li><li><em>get children</em> : retrieves a list of children of a node</li><li><em>sync</em> : waits for data to be propagated</li></ul><h3 id="zookeeper的结构"><a class="anchor" href="#zookeeper的结构">#</a> ZooKeeper 的结构</h3><p>ZooKeeper 提供的名称空间与标准文件系统的名称空间非常相似。 名称是由斜杠（/）分隔的一系列路径元素。 ZooKeeper 命名空间中的每个节点都由路径标识。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210106111904775.png" alt="image-20210106111904775"></p><p>与标准文件系统不同，<strong>ZooKeeper 命名空间中的每个节点都可以具有与其关联的数据以及子节点</strong>。 就像拥有一个文件系统一样，该文件系统也允许文件成为目录。 （ZooKeeper 旨在存储协调数据：状态信息，配置，位置信息等，因此存储在每个节点上的数据通常很小，在字节到千字节范围内，所以 ZooKeeper 不能作为数据库。）我们使用术语 znode 来明确表示 在谈论 ZooKeeper 数据节点。Znodes 维护一 个统计信息结构，其中包括用于数据更改，ACL 更改和时间戳的版本号，以允许进行缓存验证和协调更新。 znode 的数据每次更改时，版本号都会增加。 例如，每当客户端检索数据时，它也会接收数据的版本。原子地读取和写入存储在命名空间中每个 znode 上的数据。 读取将获取与 znode 关联的所有数据字节，而写入将替换所有数据。 每个节点都有一个访问控制列表（ACL），用于限制谁可以执行操作。ZooKeeper 还具有短暂节点的概念。 只要创建 znode 的会话处于活动状态，这些 znode 就存在， 会话结束时，将删除 znode。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210106151355958.png" alt="image-20210106151355958"></p><h3 id="zookeeper提供的保证"><a class="anchor" href="#zookeeper提供的保证">#</a> ZooKeeper 提供的保证</h3><p>ZooKeeper 非常快速且非常简单。 但是，由于其目标是作为构建更复杂的服务（例如同步）的基础，因此它提供了一组保证：</p><ul><li><p>顺序一致性：来自客户端的更新将按照发送的顺序进行写。ZooKeeper 是主从复制型的，是单节点的，所有从机对主机的写都将在主机中按照发送的顺序排序好，挨个进行写操作，这也是单节点的好处。</p></li><li><p>原子性：主机对客户端创建的节点的行为通知给其他节点，如果其他节点都能接收到主机的通知，那么客户端创建节点成功，否则就失败。这种同步到其他节点是最终一致性。</p></li><li><p>单个系统映像：无论客户端连接到哪个服务器，客户端都将看到相同的服务视图。 即使客户端故障转移到具有相同会话的其他服务器，客户端也永远不会看到系统的较旧视图。</p></li><li><p>可靠性：应用更新后，此更新将一直持续到客户端覆盖更新为止。ZooKeeper 通过日志可以保证可靠性。</p></li><li><p>及时性：确保系统的客户视图在特定时间范围内是最新的。</p></li></ul><div class="tags"><a href="/tags/Java/" rel="tag"><i class="ic i-tag"></i> Java</a> <a href="/tags/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/" rel="tag"><i class="ic i-tag"></i> 配置中心</a> <a href="/tags/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/" rel="tag"><i class="ic i-tag"></i> 注册中心</a> <a href="/tags/Zookeeper/" rel="tag"><i class="ic i-tag"></i> Zookeeper</a> <a href="/tags/%E5%88%86%E5%B8%83%E5%BC%8F/" rel="tag"><i class="ic i-tag"></i> 分布式</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i> </span><span class="text">更新于</span> <time title="修改时间：2021-12-24 14:29:38" itemprop="dateModified" datetime="2021-12-24T14:29:38+08:00">2021-12-24</time></span></div><div class="reward"><button><i class="ic i-heartbeat"></i> 赞赏</button><p>请我喝[茶]~(￣▽￣)~*</p><div id="qr"><div><img data-src="/images/wechatpay.png" alt="fanfanfan 微信支付"><p>微信支付</p></div><div><img data-src="/images/alipay.png" alt="fanfanfan 支付宝"><p>支付宝</p></div><div><img data-src="/images/paypal.png" alt="fanfanfan PayPal"><p>PayPal</p></div></div></div><div id="copyright"><ul><li class="author"><strong>本文作者： </strong>fanfanfan <i class="ic i-at"><em>@</em></i></li><li class="link"><strong>本文链接：</strong> <a href="https://baiyezi.vip/zookeeper%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" title="zookeeper搭建及基本概念">https://baiyezi.vip/zookeeper搭建及基本概念</a></li><li class="license"><strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;bfanfanfan&#x2F;img&#x2F;raw&#x2F;master&#x2F;guzhuang&#x2F;20211225105418.jpg" title="SpringBoot自动装配原理"><span class="type">上一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>SpringBoot自动装配原理</h3></a></div><div class="item right"><a href="/zookeeper%E5%8E%9F%E7%90%86" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;bfanfanfan&#x2F;img&#x2F;raw&#x2F;master&#x2F;guzhuang&#x2F;20211225105008.png" title="zookeeper原理"><span class="type">下一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>zookeeper原理</h3></a></div></div><div class="wrap" id="comments"></div></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目录"><ol class="toc"><li class="toc-item toc-level-2"><a class="toc-link" href="#zookeeper%E5%AE%89%E8%A3%85"><span class="toc-number">1.</span> <span class="toc-text">ZooKeeper 安装</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#zookeeper%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%90%AF%E5%8A%A8"><span class="toc-number">1.1.</span> <span class="toc-text">ZooKeeper 客户端启动</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%BA%8F%E5%88%97%E8%8A%82%E7%82%B9"><span class="toc-number">1.2.</span> <span class="toc-text">序列节点</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E8%8A%82%E7%82%B9%E9%97%B4%E8%BF%9E%E6%8E%A5%E5%85%B3%E7%B3%BB"><span class="toc-number">1.3.</span> <span class="toc-text">节点间连接关系</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#observer"><span class="toc-number">1.4.</span> <span class="toc-text">Observer</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#zookeeper%E6%A6%82%E5%BF%B5"><span class="toc-number">2.</span> <span class="toc-text">ZooKeeper 概念</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#zookeeper%E7%9A%84%E7%89%B9%E7%82%B9"><span class="toc-number">2.1.</span> <span class="toc-text">ZooKeeper 的特点</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#zookeeper%E7%9A%84api"><span class="toc-number">2.2.</span> <span class="toc-text">ZooKeeper 的 API</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#zookeeper%E7%9A%84%E7%BB%93%E6%9E%84"><span class="toc-number">2.3.</span> <span class="toc-text">ZooKeeper 的结构</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#zookeeper%E6%8F%90%E4%BE%9B%E7%9A%84%E4%BF%9D%E8%AF%81"><span class="toc-number">2.4.</span> <span class="toc-text">ZooKeeper 提供的保证</span></a></li></ol></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li><a href="/Linux%E4%B8%8B%E5%AE%89%E8%A3%85MySQL" rel="bookmark" title="Linux下安装MySQL">Linux下安装MySQL</a></li><li><a href="/MySQL%E5%9F%BA%E7%A1%80" rel="bookmark" title="MySQL基础">MySQL基础</a></li><li><a href="/IOC%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="IOC配置方式（一）">IOC配置方式（一）</a></li><li><a href="/IOC%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="IOC配置方式（二）">IOC配置方式（二）</a></li><li><a href="/IOC%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F" rel="bookmark" title="IOC注解方式">IOC注解方式</a></li><li><a href="/AOP" rel="bookmark" title="AOP">AOP</a></li><li><a href="/SpringBoot%E5%85%A5%E9%97%A8" rel="bookmark" title="SpringBoot入门">SpringBoot入门</a></li><li><a href="/SpringBoot-Web%E5%BC%80%E5%8F%91" rel="bookmark" title="SpringBoot-Web开发">SpringBoot-Web开发</a></li><li><a href="/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86" rel="bookmark" title="SpringBoot自动装配原理">SpringBoot自动装配原理</a></li><li class="active"><a href="/zookeeper%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" rel="bookmark" title="zookeeper搭建及基本概念">zookeeper搭建及基本概念</a></li><li><a href="/zookeeper%E5%8E%9F%E7%90%86" rel="bookmark" title="zookeeper原理">zookeeper原理</a></li><li><a href="/zookeeper%E6%A1%88%E4%BE%8B" rel="bookmark" title="zookeeper案例">zookeeper案例</a></li><li><a href="/MySQL%E8%B0%83%E4%BC%98%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="MySQL调优（一）">MySQL调优（一）</a></li><li><a href="/redis%E5%AE%89%E8%A3%85%E5%8F%8ANIO%E5%8E%9F%E7%90%86" rel="bookmark" title="redis安装及NIO原理">redis安装及NIO原理</a></li><li><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="SpringMVC入门（一）">SpringMVC入门（一）</a></li><li><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="SpringMVC入门（二）">SpringMVC入门（二）</a></li><li><a href="/SpringMVC-REST%E9%A3%8E%E6%A0%BC" rel="bookmark" title="SpringMVC-REST风格">SpringMVC-REST风格</a></li><li><a href="/SpringMVC%E8%BF%9B%E9%98%B6" rel="bookmark" title="SpringMVC进阶">SpringMVC进阶</a></li><li><a href="/SpringMVC%E6%BA%90%E7%A0%81%E6%80%BB%E7%BB%93" rel="bookmark" title="SpringMVC源码总结">SpringMVC源码总结</a></li><li><a href="/shiro%E5%85%A5%E9%97%A8" rel="bookmark" title="shiro入门">shiro入门</a></li><li><a href="/shiro%E6%95%B4%E5%90%88SpringBoot" rel="bookmark" title="shiro整合SpringBoot">shiro整合SpringBoot</a></li><li><a href="/shiro%E7%9A%84session%E7%AE%A1%E7%90%86" rel="bookmark" title="shiro的session管理">shiro的session管理</a></li><li><a href="/shiro%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%99%BB%E5%BD%95" rel="bookmark" title="shiro的缓存机制与分布式登录">shiro的缓存机制与分布式登录</a></li><li><a href="/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95" rel="bookmark" title="单点登录">单点登录</a></li><li><a href="/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" rel="bookmark" title="线程基础知识">线程基础知识</a></li><li><a href="/%E5%AE%B9%E5%99%A8%E4%B8%8E%E7%BA%BF%E7%A8%8B%E6%B1%A0" rel="bookmark" title="容器与线程池">容器与线程池</a></li><li><a href="/Win10%E5%AE%89%E8%A3%85docker" rel="bookmark" title="Win10安装docker">Win10安装docker</a></li><li><a href="/Win10%E5%AE%89%E8%A3%85docker" rel="bookmark" title="Win10安装docker">Win10安装docker</a></li><li><a href="/JMH" rel="bookmark" title="JMH">JMH</a></li><li><a href="/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B" rel="bookmark" title="并发编程">并发编程</a></li><li><a href="/java-%E6%97%A5%E5%BF%97%E4%BD%93%E7%B3%BB" rel="bookmark" title="java-日志体系">java-日志体系</a></li><li><a href="/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="bookmark" title="redis的数据类型">redis的数据类型</a></li><li><a href="/redis%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8" rel="bookmark" title="redis进阶使用">redis进阶使用</a></li><li><a href="/redis%E7%9A%84%E9%9B%86%E7%BE%A4" rel="bookmark" title="redis的集群">redis的集群</a></li><li><a href="/redis%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8" rel="bookmark" title="redis在开发中的简单使用">redis在开发中的简单使用</a></li><li><a href="/ChainOfResponsibility%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F" rel="bookmark" title="ChainOfResponsibility责任链模式">ChainOfResponsibility责任链模式</a></li><li><a href="/Composite%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Composite组合模式">Composite组合模式</a></li><li><a href="/Decorator%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Decorator装饰器模式">Decorator装饰器模式</a></li><li><a href="/Facade%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Facade门面模式">Facade门面模式</a></li><li><a href="/Factory%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Factory工厂模式">Factory工厂模式</a></li><li><a href="/Iterator%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Iterator迭代器模式">Iterator迭代器模式</a></li><li><a href="/Flyweight%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Flyweight享元模式">Flyweight享元模式</a></li><li><a href="/Mediator%E8%B0%83%E5%81%9C%E8%80%85%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Mediator调停者模式">Mediator调停者模式</a></li><li><a href="/Observer%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Observer观察者模式">Observer观察者模式</a></li><li><a href="/Proxy%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Proxy代理模式">Proxy代理模式</a></li><li><a href="/Singleton%E5%8D%95%E4%BE%8B" rel="bookmark" title="Singleton单例">Singleton单例</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95" rel="bookmark" title="微服务以及架构发展">微服务以及架构发展</a></li><li><a href="/JVM-%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD" rel="bookmark" title="JVM-类的加载">JVM-类的加载</a></li><li><a href="/SpringCloud-Netflix%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Netflix体系">SpringCloud-Netflix体系</a></li><li><a href="/%E5%BA%8F%E5%88%97%E5%8C%96" rel="bookmark" title="序列化">序列化</a></li><li><a href="/JVM-JMM" rel="bookmark" title="JVM-JMM">JVM-JMM</a></li><li><a href="/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84" rel="bookmark" title="分布式系统与高并发系统架构">分布式系统与高并发系统架构</a></li><li><a href="/JVM-%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA" rel="bookmark" title="JVM-对象的创建">JVM-对象的创建</a></li><li><a href="/JVM-JVM%E8%B0%83%E4%BC%98" rel="bookmark" title="JVM-JVM调优">JVM-JVM调优</a></li><li><a href="/JVM-GC" rel="bookmark" title="JVM-GC">JVM-GC</a></li><li><a href="/SpringCloud-Alibaba%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Alibaba体系">SpringCloud-Alibaba体系</a></li><li><a href="/SpringCloud-SpringCloud%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-SpringCloud体系">SpringCloud-SpringCloud体系</a></li><li><a href="/Apollo" rel="bookmark" title="Apollo">Apollo</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="微服务中的会话管理（一）">微服务中的会话管理（一）</a></li><li><a href="/%E7%A3%81%E7%9B%98IO%E4%B8%8E%E7%BD%91%E7%BB%9CIO" rel="bookmark" title="磁盘IO与网络IO">磁盘IO与网络IO</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="微服务中的会话管理（二）">微服务中的会话管理（二）</a></li><li><a href="/HTTPS" rel="bookmark" title="HTTPS">HTTPS</a></li><li><a href="/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" rel="bookmark" title="RocketMQ-基础概念">RocketMQ-基础概念</a></li><li><a href="/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1" rel="bookmark" title="RocketMQ-消息、事务">RocketMQ-消息、事务</a></li><li><a href="/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84" rel="bookmark" title="Kafka-整体架构">Kafka-整体架构</a></li><li><a href="/%E7%BD%91%E7%BB%9CIO%E6%A8%A1%E5%9E%8B" rel="bookmark" title="网络IO模型">网络IO模型</a></li><li><a href="/Kafka-%E6%90%AD%E5%BB%BA" rel="bookmark" title="Kafka-搭建">Kafka-搭建</a></li><li><a href="/Netty" rel="bookmark" title="Netty">Netty</a></li><li><a href="/nginx%E5%AE%9E%E6%88%98" rel="bookmark" title="nginx实战">nginx实战</a></li><li><a href="/Java%E5%92%8C%E4%B8%B2%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%80%9A%E4%BF%A1" rel="bookmark" title="Java和串口进行通信">Java和串口进行通信</a></li></ul></div><div class="overview panel" data-title="站点概览"><div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="fanfanfan" data-src="/images/avatar.png"><p class="name" itemprop="name">fanfanfan</p><div class="description" itemprop="description">花有重开日，人无再少年</div></div><nav class="state"><div class="item posts"><a href="/archives/"><span class="count">73</span> <span class="name">文章</span></a></div><div class="item categories"><a href="/categories/"><span class="count">3</span> <span class="name">分类</span></a></div><div class="item tags"><a href="/tags/"><span class="count">77</span> <span class="name">标签</span></a></div></nav><div class="social"></div><ul class="menu"><li class="item"><a href="/" rel="section"><i class="ic i-home"></i>首页</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a></li><li class="item"><a href="/categories/" rel="section"><i class="ic i-th"></i>分类</a></li><li class="item"><a href="/tags/" rel="section"><i class="ic i-tags"></i>标签</a></li></ul></li><li class="item"><a href="/friends/" rel="section"><i class="ic i-magic"></i>友链</a></li><li class="item"><a href="/about/" rel="section"><i class="ic i-user"></i>关于</a></li></ul></div></div></div><ul id="quick"><li class="prev pjax"><a href="/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/zookeeper%E5%8E%9F%E7%90%86" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>随机文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E5%AE%B9%E5%99%A8%E4%B8%8E%E7%BA%BF%E7%A8%8B%E6%B1%A0" title="容器与线程池">容器与线程池</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" title="线程基础知识">线程基础知识</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a> <i class="ic i-angle-right"></i> <a href="/categories/java/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" title="分类于 微服务">微服务</a></div><span><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95" title="微服务以及架构发展">微服务以及架构发展</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/Factory%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F" title="Factory工厂模式">Factory工厂模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/JVM-%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA" title="JVM-对象的创建">JVM-对象的创建</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/AOP" title="AOP">AOP</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84" title="分布式系统与高并发系统架构">分布式系统与高并发系统架构</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/JVM-JVM%E8%B0%83%E4%BC%98" title="JVM-JVM调优">JVM-JVM调优</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringMVC-REST%E9%A3%8E%E6%A0%BC" title="SpringMVC-REST风格">SpringMVC-REST风格</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89" title="SpringMVC入门（一）">SpringMVC入门（一）</a></span></li></ul></div><div><h2>最新评论</h2><ul class="leancloud-recent-comment"></ul></div></div><div class="status"><div class="copyright">&copy; 2010 – <span itemprop="copyrightYear">2021</span> <span class="with-love"><i class="ic i-sakura rotate"></i> </span><span class="author" itemprop="copyrightHolder">fanfanfan @</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i> </span><span title="站点总字数">1.3m 字</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="ic i-coffee"></i> </span><span title="站点阅读时长">20:22</span></div><div class="powered-by">基于 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo</span> & Theme.<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==">Shoka</span></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL={path:"/zookeeper搭建及基本概念",favicon:{show:"书院十四先生",hide:"书院十四先生"},search:{placeholder:"文章搜索",empty:"关于 「 ${query} 」，什么也没搜到",stats:"${time} ms 内找到 ${hits} 条结果"},valine:!0,fancybox:!0,copyright:'复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',ignores:[function(e){return e.includes("#")},function(e){return new RegExp(LOCAL.path+"$").test(e)}]}</script><script src="https://cdn.polyfill.io/v2/polyfill.js"></script><script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script><script src="/js/app.js?v=0.2.5"></script></body></html><!-- rebuild by hrmmi -->