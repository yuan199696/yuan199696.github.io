<!-- build time:Sat Dec 25 2021 00:54:31 GMT+0800 (中国标准时间) --><!DOCTYPE html><html lang="zh-CN,en,default"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#FFF"><link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png"><link rel="icon" type="image/ico" sizes="32x32" href="/images/favicon.ico"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" type="application/rss+xml" title="书院十四先生" href="https://www.baiyezi.vip/rss.xml"><link rel="alternate" type="application/atom+xml" title="书院十四先生" href="https://www.baiyezi.vip/atom.xml"><link rel="alternate" type="application/json" title="书院十四先生" href="https://www.baiyezi.vip/feed.json"><link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/css/app.css?v=0.2.5"><meta name="keywords" content="Java,消息中间件,RocketMQ"><link rel="canonical" href="https://www.baiyezi.vip/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1"><title>RocketMQ-消息、事务 - Java | 书院十四先生</title><meta name="generator" content="Hexo 5.4.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">RocketMQ-消息、事务</h1><div class="meta"><span class="item" title="创建时间：2021-08-11 21:56:12"><span class="icon"><i class="ic i-calendar"></i> </span><span class="text">发表于</span> <time itemprop="dateCreated datePublished" datetime="2021-08-11T21:56:12+08:00">2021-08-11</time> </span><span class="item" title="本文字数"><span class="icon"><i class="ic i-pen"></i> </span><span class="text">本文字数</span> <span>21k</span> <span class="text">字</span> </span><span class="item" title="阅读时长"><span class="icon"><i class="ic i-clock"></i> </span><span class="text">阅读时长</span> <span>19 分钟</span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切换导航栏"><span class="line"></span> <span class="line"></span> <span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/" rel="start">书院十四先生</a></li></ul><ul class="right"><li class="item theme"><i class="ic i-sun"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div id="imgs" class="pjax"><ul><li class="item" data-background-image="https://tva2.sinaimg.cn/large/6833939bly1gicmnywqgpj20zk0m8dwx.jpg"></li><li class="item" data-background-image="https://tva2.sinaimg.cn/large/6833939bly1gipewkhf1zj20zk0m81kx.jpg"></li><li class="item" data-background-image="https://tva2.sinaimg.cn/large/6833939bly1gipeuibk9fj20zk0m8ay2.jpg"></li><li class="item" data-background-image="https://tva2.sinaimg.cn/large/6833939bly1giclh0m9pdj20zk0m8hdt.jpg"></li><li class="item" data-background-image="https://tva2.sinaimg.cn/large/6833939bly1gipetv6p75j20zk0m8x6p.jpg"></li><li class="item" data-background-image="https://tva2.sinaimg.cn/large/6833939bly1giclj9410cj20zk0m8h12.jpg"></li></ul></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"/></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"/><use xlink:href="#gentle-wave" x="48" y="3"/><use xlink:href="#gentle-wave" x="48" y="5"/><use xlink:href="#gentle-wave" x="48" y="7"/></g></svg></div><main><div class="inner"><div id="main" class="pjax"><div class="article wrap"><div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i> <span><a href="/">首页</a></span><i class="ic i-angle-right"></i> <span class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/java/" itemprop="item" rel="index" title="分类于 Java"><span itemprop="name">Java</span></a><meta itemprop="position" content="1"></span></div><article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://www.baiyezi.vip/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="/images/avatar.png"><meta itemprop="name" content="fanfanfan"><meta itemprop="description" content=", 花有重开日，人无再少年"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content="书院十四先生"></span><div class="body md" itemprop="articleBody"><h2 id="消息"><a class="anchor" href="#消息">#</a> 消息</h2><h3 id="消息消费模式"><a class="anchor" href="#消息消费模式">#</a> 消息消费模式</h3><p>消息消费模式由消费者来决定，可以由消费者设置 MessageModel 来决定消息模式。</p><p>消息模式默认为集群消费模式</p><pre><code> consumer.setMessageModel(MessageModel.BROADCASTING);
 consumer.setMessageModel(MessageModel.CLUSTERING);
</code></pre><h4 id="集群消息"><a class="anchor" href="#集群消息">#</a> 集群消息</h4><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/160707_kSpS_1469576.png" alt="img"></p><p>集群消息是指<strong>集群化部署消费者</strong>，当使用集群消费模式时，MQ 认为任意一条消息只需要被集群内的任意一个消费者处理即可。</p><p><strong>特点</strong></p><ul><li>每条消息只需要被处理一次，broker 只会把消息发送给消费集群中的一个消费者</li><li>在消息重投时，不能保证路由到同一台机器上</li><li>消费状态由 broker 维护</li></ul><h4 id="广播消息"><a class="anchor" href="#广播消息">#</a> 广播消息</h4><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/160902_4AOI_1469576.png" alt="img"></p><p>当使用广播消费模式时，MQ 会将每条消息推送给集群内所有注册过的客户端，保证消息至少被每台机器消费一次。</p><p><strong>特点</strong></p><ul><li>消费进度由 consumer 维护</li><li>保证每个消费者消费一次消息</li><li>消费失败的消息不会重投</li></ul><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyContext</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span></span><span class="token class-name">MessageModel</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="14"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num="15"></td><td><pre> *</pre></td></tr><tr><td data-num="16"></td><td><pre> *</pre></td></tr><tr><td data-num="17"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="18"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num="19"></td><td><pre> **/</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer2</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token comment">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token comment">// 过滤器: * 表示不过滤</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"myTopic001"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">></span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token comment">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token comment">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token comment">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span>CONSUME_SUCCESS<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token comment">// 广播消息，其他 consumer 也可以收到消息。默认是集群模式，只可以消费一次消息</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token comment">// 集群：一组 consumer，消息只能被其中一个 consumer 消费，即消息只能被消费一次</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token comment">// 广播：同一个 topic 内的 consumer 均可以消费，消息可以被每一个 consumer 消费</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">setMessageModel</span><span class="token punctuation">(</span><span class="token class-name">MessageModel</span><span class="token punctuation">.</span>BROADCASTING<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Consumer start..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="发送方式"><a class="anchor" href="#发送方式">#</a> 发送方式</h3><h4 id="同步消息"><a class="anchor" href="#同步消息">#</a> 同步消息</h4><p>消息发送中进入同步等待状态，可以保证消息投递一定到达</p><p>启动 mqnamesrv</p><pre><code class="language-cmd">C:\WINDOWS\System32&gt;mqnamesrv
Java HotSpot(TM) 64-Bit Server VM warning: Using the DefNew young collector with the CMS collector is deprecated and will likely be removed in a future release
Java HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.
The Name Server boot success. serializeType=JSON
</code></pre><p>启动 mqbroker</p><pre><code class="language-cmd">C:\WINDOWS\System32&gt;mqbroker -n localhost:9876 autoCreateTopicEnable=true
The broker[Fan, 172.20.10.3:10911] boot success. serializeType=JSON and name server is localhost:9876
</code></pre><p>启动 admin 管理界面</p><pre><code class="language-cmd">D:\RocketMQ&gt;java -jar rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr=127.0.0.1:9876
</code></pre><p>创建一个 maven 项目，引入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.rocketmq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>rocketmq-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.6.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>消息提供方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">SendResult</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="11"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="12"></td><td><pre> *</pre></td></tr><tr><td data-num="13"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="14"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="15"></td><td><pre> **/</pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">//new Message (topic,body)：topic 消息将要发送到的地址，如果没有就自动创建；body 具体数据</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token class-name">Message</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"myTopic001"</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token comment">// 发送消息后阻塞等待 broker 返回，即同步消息</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>消息消费方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyContext</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="13"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num="14"></td><td><pre> *</pre></td></tr><tr><td data-num="15"></td><td><pre> *</pre></td></tr><tr><td data-num="16"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="17"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num="18"></td><td><pre> **/</pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token comment">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token comment">// 过滤器: * 表示不过滤</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"myTopic001"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">></span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token comment">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token comment">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token comment">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span>CONSUME_SUCCESS<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Consumer start..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="异步消息"><a class="anchor" href="#异步消息">#</a> 异步消息</h4><p>想要快速发送消息，又不想丢失的时候可以使用异步消息</p><p>回调方式</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">SendCallback</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">SendResult</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="15"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="16"></td><td><pre> *</pre></td></tr><tr><td data-num="17"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="18"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="19"></td><td><pre> **/</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">//new Message (topic,body)：topic 消息将要发送到的地址，如果没有就自动创建；body 具体数据</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token comment">/*Message msg = new Message ("myTopic001", "hello".getBytes ());</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        Message msg2 = new Message ("myTopic001", "hello2".getBytes ());</pre></td></tr><tr><td data-num="30"></td><td><pre>        Message msg3 = new Message ("myTopic001", "hello3".getBytes ());</pre></td></tr><tr><td data-num="31"></td><td><pre>        List&lt;Message> msgList = new ArrayList&lt;>();</pre></td></tr><tr><td data-num="32"></td><td><pre>        msgList.add (msg);</pre></td></tr><tr><td data-num="33"></td><td><pre>        msgList.add (msg2);</pre></td></tr><tr><td data-num="34"></td><td><pre>        msgList.add (msg3);</pre></td></tr><tr><td data-num="35"></td><td><pre>        // 发送消息后阻塞等待 broker 返回</pre></td></tr><tr><td data-num="36"></td><td><pre>        SendResult sendResult = producer.send (msgList);</pre></td></tr><tr><td data-num="37"></td><td><pre>        System.out.println (sendResult);*/</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token comment">// 异步可靠消息，发送消息之后不会阻塞等待 broker 返回，而是采用事件监听的方式接收 broker 返回的确认</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"myTopic001"</span><span class="token punctuation">,</span> <span class="token string">"hello callback"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">SendCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span><span class="token class-name">SendResult</span> sendResult<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre></pre></td></tr><tr><td data-num="47"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="48"></td><td><pre>            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onException</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> throwable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"消息发送异常："</span> <span class="token operator">+</span> throwable<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token comment">//        producer.shutdown();</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h4 id="单向消息"><a class="anchor" href="#单向消息">#</a> 单向消息</h4><p>只发送消息，不等待服务器响应，只发送请求不等待应答。此方式发送消息的过程耗时非常短，一般在微秒级别。</p><pre><code> producer.sendOneway(message);
</code></pre><p>无需 broker 响应，发送速度最快</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="10"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="11"></td><td><pre> *</pre></td></tr><tr><td data-num="12"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="13"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="14"></td><td><pre> **/</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer2</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"myTopic001"</span><span class="token punctuation">,</span> <span class="token string">"hello"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">// 不需要 broker 响应</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">sendOneway</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="批量消息发送"><a class="anchor" href="#批量消息发送">#</a> 批量消息发送</h3><p>可以多条消息打包一起发送，减少网络传输次数提高效率。</p><p><code>producer.send(Collection c)</code> 方法可以接受一个集合 实现批量发送</p><pre><code> public SendResult send(
        Collection&lt;Message&gt; msgs) throws MQClientException, RemotingException, MQBrokerException, InterruptedException &#123;
        return this.defaultMQProducerImpl.send(batch(msgs));
    &#125;
</code></pre><ul><li>批量消息要求必要具有同一 topic、相同消息配置</li><li>不支持延时消息</li><li>建议一个批量消息最好不要超过 1MB 大小</li><li>如果不确定是否超过限制，可以手动计算大小分批发送</li></ul><p><span class="exturl" data-url="aHR0cHM6Ly9yb2NrZXRtcS5hcGFjaGUub3JnL2RvY3MvYmF0Y2gtZXhhbXBsZS8=">参考官网</span></p><h3 id="tag"><a class="anchor" href="#tag">#</a> TAG</h3><p>可以使用 tag 来过滤消费</p><p>在 Producer 中使用 Tag：</p><pre><code>Message msg = new Message(&quot;TopicTest&quot;,&quot;TagA&quot; ,(&quot;Hello RocketMQ &quot; ).getBytes(RemotingHelper.DEFAULT_CHARSET));
</code></pre><p>在 Consumer 中订阅 Tag：</p><pre><code>consumer.subscribe(&quot;TopicTest&quot;, &quot;TagA||TagB&quot;);// * 代表订阅Topic下的所有消息
</code></pre><p>消息提供方使用 tag 分类消息</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="10"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="11"></td><td><pre> *</pre></td></tr><tr><td data-num="12"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="13"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="14"></td><td><pre> **/</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer3</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token comment">//tag 用来过滤消息，消息分类</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"myTopic002"</span><span class="token punctuation">,</span> <span class="token string">"TAG-B"</span><span class="token punctuation">,</span><span class="token string">"KEY-xx"</span><span class="token punctuation">,</span><span class="token string">"hello-tag"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token comment">// 不需要 broker 响应</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">sendOneway</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>消息消费方进行消息过滤</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyContext</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>protocol<span class="token punctuation">.</span>heartbeat<span class="token punctuation">.</span></span><span class="token class-name">MessageModel</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="14"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num="15"></td><td><pre> *</pre></td></tr><tr><td data-num="16"></td><td><pre> *</pre></td></tr><tr><td data-num="17"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="18"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num="19"></td><td><pre> **/</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer3</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token comment">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token comment">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token comment">// 只接收 TAG-A 的消息，其他消息会被过滤掉</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"myTopic002"</span><span class="token punctuation">,</span> <span class="token string">"TAG-A"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">></span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token comment">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token comment">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                <span class="token comment">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span>CONSUME_SUCCESS<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre></pre></td></tr><tr><td data-num="46"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Consumer start..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210601172031824.png" alt="image-20210601172031824"></p><h3 id="sql表达式过滤"><a class="anchor" href="#sql表达式过滤">#</a> SQL 表达式过滤</h3><p>消费者将收到包含 TAGA 或 TAGB 或 TAGB 的消息。但限制是一条消息只能有一个标签，而这对于复杂的情况可能无效。 在这种情况下，您可以使用 SQL 表达式筛选出消息.</p><h4 id="配置"><a class="anchor" href="#配置">#</a> 配置</h4><p>在 <code>broker.conf</code> 中添加配置</p><pre><code>enablePropertyFilter=true
</code></pre><p>启动 broker 加载指定配置文件</p><pre><code>../bin/mqbroker -n 192.168.150.113:9876 -c broker.conf 
</code></pre><p>随后在集群配置中可以看到</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20200219174859476.png" alt="image-20200219174859476"></p><h4 id="实例"><a class="anchor" href="#实例">#</a> <strong>实例</strong></h4><pre><code>        MessageSelector selector = MessageSelector.bySql(&quot;order &gt; 5&quot;);
        consumer.subscribe(&quot;xxoo3&quot;, selector);
</code></pre><h4 id="语法"><a class="anchor" href="#语法">#</a> 语法</h4><p>RocketMQ 只定义了一些基本的语法来支持这个功能。 你也可以很容易地扩展它.</p><ol><li>数字比较，像 <code>&gt;</code> , <code>&gt;=</code> , <code>&lt;</code> , <code>&lt;=</code> , <code>BETWEEN</code> , <code>=</code> ;</li><li>字符比较，像 <code>=</code> , <code>&lt;&gt;</code> , <code>IN</code> ;</li><li><code>IS NULL</code> 或者 <code>IS NOT NULL</code> ;</li><li>逻辑运算 <code>AND</code> , <code>OR</code> , <code>NOT</code> ;</li></ol><p>常量类型是:</p><ol><li>数字，像 123, 3.1415;</li><li>字符串，像‘abc’, 必须使用单引号；</li><li><code>NULL</code> , 特殊常数；</li><li>布尔常量， <code>TRUE</code> 或 <code>FALSE</code> ;</li></ol><h4 id="demo"><a class="anchor" href="#demo">#</a> demo</h4><p>需要在 RocketMQ 安装目录下的 broker.conf 配置文件中加入 enablePropertyFilter=true</p><p>之后重启 broker</p><pre><code class="language-cmd">#启动时需要指定加载broker.conf
mqbroker -n localhost:9876 -c D:\rocketmq\conf\broker.conf autoCreateTopicEnable=true
</code></pre><p>消息提供方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="10"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="11"></td><td><pre> *</pre></td></tr><tr><td data-num="12"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="13"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="14"></td><td><pre> **/</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer3</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token comment">//tag 用来过滤消息，消息分类</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"myTopic002"</span><span class="token punctuation">,</span> <span class="token string">"TAG-B"</span><span class="token punctuation">,</span><span class="token string">"KEY-xx"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"hello-tag："</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            message<span class="token punctuation">.</span><span class="token function">putUserProperty</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>            producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">shutdown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>消息消费方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">MessageSelector</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyContext</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="14"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num="15"></td><td><pre> *</pre></td></tr><tr><td data-num="16"></td><td><pre> *</pre></td></tr><tr><td data-num="17"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="18"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num="19"></td><td><pre> **/</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer4</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">"xxooxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token class-name">MessageSelector</span> messageSelector <span class="token operator">=</span> <span class="token class-name">MessageSelector</span><span class="token punctuation">.</span><span class="token function">bySql</span><span class="token punctuation">(</span><span class="token string">"age >= 18 and age &lt;=28"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"myTopic002"</span><span class="token punctuation">,</span> messageSelector<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerConcurrently</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">ConsumeConcurrentlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">></span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token comment">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token comment">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                <span class="token comment">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">ConsumeConcurrentlyStatus</span><span class="token punctuation">.</span>CONSUME_SUCCESS<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Consumer start..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>输出</p><pre><code class="language-cmd">Consumer start...
hello-tag：19
hello-tag：18
hello-tag：20
hello-tag：21
hello-tag：22
hello-tag：23
hello-tag：24
hello-tag：25
hello-tag：26
hello-tag：27
hello-tag：28
</code></pre><h3 id="延迟消息"><a class="anchor" href="#延迟消息">#</a> 延迟消息</h3><p>RocketMQ 使用<strong> messageDelayLevel</strong> 可以设置延迟投递</p><p><strong>默认配置为</strong></p><pre><code>messageDelayLevel	1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h
</code></pre><h4 id="配置-2"><a class="anchor" href="#配置-2">#</a> 配置</h4><p>在 <code>broker.conf</code> 中添加配置</p><pre><code>messageDelayLevel=1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h
</code></pre><p>这个配置项配置了从 1 级开始，各级延时的时间，可以修改这个指定级别的延时时间；</p><p>时间单位支持：s、m、h、d，分别表示秒、分、时、天；</p><h4 id="使用"><a class="anchor" href="#使用">#</a> 使用</h4><p>发送消息时设置</p><pre><code>message.setDelayTimeLevel(1); 
</code></pre><h3 id="顺序消费"><a class="anchor" href="#顺序消费">#</a> 顺序消费</h3><p>队列先天支持 FIFO 模型，单一生产和消费者下只要保证使用 <code>MessageListenerOrderly</code> 监听器即可</p><p>顺序消费表示消息消费的顺序同生产者为每个消息队列发送的顺序一致，所以如果正在处理全局顺序是强制性的场景，需要确保使用的主题只有一个消息队列。</p><p>并行消费不再保证消息顺序，消费的最大并行数量受每个消费者客户端指定的线程池限制。</p><p>那么只要顺序的发送，再保证一个线程只去消费一个队列上的消息，那么他就是有序的。</p><p>跟普通消息相比，顺序消息的使用需要在 producer 的 send () 方法中添加 MessageQueueSelector 接口的实现类，并重写 select 选择使用的队列，因为顺序消息局部顺序，需要将所有消息指定发送到同一队列中。</p><p><strong>保证有序参与因素</strong></p><ul><li>FIFO</li><li>队列内保证有序</li><li>消费线程</li></ul><p>一个 topic 默认由四个 queue 组成，而发送消息时可能会被存进不同的 queue 中，这就导致了接收的消息与发送的消息顺序不一致。所以，要想保证有序，首先发送时需要有序发送（使用同一个线程发送消息），其次要设置消息存进同一个 topic 的同一个 queue 中，消费消息时需要一个线程消费一个 queue 里的消息。当有多个 queue 时，只能保证消费每个 queue 里的消息是有序的。</p><h4 id="demo-2"><a class="anchor" href="#demo-2">#</a> demo</h4><p>服务提供方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>transaction</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQProducer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">MessageQueueSelector</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token class-name">SendResult</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageQueue</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="15"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="16"></td><td><pre> *</pre></td></tr><tr><td data-num="17"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="18"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="19"></td><td><pre> **/</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer2</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token class-name">DefaultMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQProducer</span><span class="token punctuation">(</span><span class="token string">"pro02"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"xxoo06"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"hello:"</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                    <span class="token comment">// 指定向 topic 的哪个 queue 中写消息</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                    <span class="token keyword">new</span> <span class="token class-name">MessageQueueSelector</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                        <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                        <span class="token keyword">public</span> <span class="token class-name">MessageQueue</span> <span class="token function">select</span><span class="token punctuation">(</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                                <span class="token comment">// 当前 topic 中所有 queue</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageQueue</span><span class="token punctuation">></span></span> list<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="38"></td><td><pre>                                <span class="token comment">// 要写入 queue 的消息</span></pre></td></tr><tr><td data-num="39"></td><td><pre>                                <span class="token class-name">Message</span> message<span class="token punctuation">,</span></pre></td></tr><tr><td data-num="40"></td><td><pre>                                <span class="token comment">// 对应 send () 的第三个参数 arg，即要选择的第几个 queue</span></pre></td></tr><tr><td data-num="41"></td><td><pre>                                <span class="token class-name">Object</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>                            <span class="token comment">// 返回选择的 queue</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                            <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                    <span class="token comment">// 选择第几个 queue</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                    <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token comment">//        producer.shutdown();</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>服务消费方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>transaction</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span></span><span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>listener<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="11"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num="12"></td><td><pre> *</pre></td></tr><tr><td data-num="13"></td><td><pre> *</pre></td></tr><tr><td data-num="14"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="15"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num="16"></td><td><pre> **/</pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Consumer</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token class-name">DefaultMQPushConsumer</span> consumer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultMQPushConsumer</span><span class="token punctuation">(</span><span class="token string">"group02"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token comment">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token comment">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token comment">// 过滤器: * 表示不过滤</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">"xxoo06"</span><span class="token punctuation">,</span> <span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token comment">/**</span></pre></td></tr><tr><td data-num="30"></td><td><pre>         * MessageListenerConcurrently 开启多个线程并发消费消息。一个 queue 可能对应多个线程</pre></td></tr><tr><td data-num="31"></td><td><pre>         */</pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token comment">/*consumer.registerMessageListener (new MessageListenerConcurrently () &#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            @Override</pre></td></tr><tr><td data-num="34"></td><td><pre>            public ConsumeConcurrentlyStatus consumeMessage (List&lt;MessageExt> msgs, ConsumeConcurrentlyContext consumeConcurrentlyContext) &#123;</pre></td></tr><tr><td data-num="35"></td><td><pre>                for (MessageExt msg : msgs) &#123;</pre></td></tr><tr><td data-num="36"></td><td><pre>                    System.out.println (new String (msg.getBody ()));</pre></td></tr><tr><td data-num="37"></td><td><pre>                &#125;</pre></td></tr><tr><td data-num="38"></td><td><pre>                // 默认情况下，这条消息只会被一个 consumer 消费</pre></td></tr><tr><td data-num="39"></td><td><pre>                // 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</pre></td></tr><tr><td data-num="40"></td><td><pre>                // 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</pre></td></tr><tr><td data-num="41"></td><td><pre>                return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</pre></td></tr><tr><td data-num="42"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num="43"></td><td><pre>        &#125;);*/</pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token comment">// 最大开启消费线程数</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token comment">//        consumer.setConsumeThreadMax(5);</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token comment">// 最小消费线程数</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token comment">//        consumer.setConsumeThreadMin();</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token comment">/**</span></pre></td></tr><tr><td data-num="50"></td><td><pre>         * MessageListenerOrderly 一个 queue 对应一个线程</pre></td></tr><tr><td data-num="51"></td><td><pre>         */</pre></td></tr><tr><td data-num="52"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">registerMessageListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MessageListenerOrderly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="54"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">ConsumeOrderlyStatus</span> <span class="token function">consumeMessage</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MessageExt</span><span class="token punctuation">></span></span> msgs<span class="token punctuation">,</span> <span class="token class-name">ConsumeOrderlyContext</span> consumeOrderlyContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="55"></td><td><pre>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MessageExt</span> msg <span class="token operator">:</span> msgs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" Thread-"</span> <span class="token operator">+</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">ConsumeOrderlyStatus</span><span class="token punctuation">.</span>SUCCESS<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token comment">// 消费消息时可以阻塞的时间</span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token comment">//        consumer.setConsumeTimeout();</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        consumer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Consumer start..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="重试机制"><a class="anchor" href="#重试机制">#</a> 重试机制</h3><h4 id="producer"><a class="anchor" href="#producer">#</a> producer</h4><p><strong>默认超时时间</strong></p><pre><code>    /**
     * Timeout for sending messages.
     */
    private int sendMsgTimeout = 3000;
</code></pre><pre><code>	// 异步发送时 重试次数，默认 2
	producer.setRetryTimesWhenSendAsyncFailed(1);
	// 同步发送时 重试次数，默认 2
	producer.setRetryTimesWhenSendFailed(1);	
	
	// 是否向其他broker发送请求 默认false
	producer.setRetryAnotherBrokerWhenNotStoreOK(true);
</code></pre><h4 id="consumer"><a class="anchor" href="#consumer">#</a> Consumer</h4><p>消费超时，单位分钟</p><p><code>consumer.setConsumeTimeout()</code></p><p>发送 ack，消费失败</p><p><code>RECONSUME_LATER</code></p><h4 id="broker投递"><a class="anchor" href="#broker投递">#</a> broker 投递</h4><p>只有在消息模式为 MessageModel.CLUSTERING 集群模式时，Broker 才会自动进行重试，广播消息不重试</p><p>重投使用 <code>messageDelayLevel</code></p><p>默认值</p><pre><code>messageDelayLevel	1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h
</code></pre><h3 id="事务消息"><a class="anchor" href="#事务消息">#</a> 事务消息</h3><p>分布式系统中的事务可以使用 TCC（Try、Confirm、Cancel）、2pc 来解决分布式系统中的消息原子性</p><p>RocketMQ 4.3 + 提供分布事务功能，通过 RocketMQ 事务消息能达到分布式事务的最终一致</p><h4 id="rocketmq实现方式"><a class="anchor" href="#rocketmq实现方式">#</a> RocketMQ 实现方式</h4><p>**Half Message：** 预处理消息，当 broker 收到此类消息后，会存储到 RMQ_SYS_TRANS_HALF_TOPIC 的消息消费队列中</p><p>** 检查事务状态：**Broker 会开启一个定时任务，消费 RMQ_SYS_TRANS_HALF_TOPIC 队列中的消息，每次执行任务会向消息发送者确认事务执行状态（提交、回滚、未知），如果是未知，等待下一次回调。</p><p>** 超时：** 如果超过回查次数，默认回滚消息</p><h4 id="transactionlistener的两个方法"><a class="anchor" href="#transactionlistener的两个方法">#</a> TransactionListener 的两个方法</h4><h5 id="executelocaltransaction"><a class="anchor" href="#executelocaltransaction">#</a> executeLocalTransaction</h5><p>半消息发送成功触发此方法来执行本地事务</p><h5 id="checklocaltransaction"><a class="anchor" href="#checklocaltransaction">#</a> checkLocalTransaction</h5><p>broker 将发送检查消息来检查事务状态，并将调用此方法来获取本地事务状态</p><h5 id="本地事务执行状态"><a class="anchor" href="#本地事务执行状态">#</a> 本地事务执行状态</h5><p><strong>LocalTransactionState.COMMIT_MESSAGE</strong></p><p>执行事务成功，确认提交</p><p><strong>LocalTransactionState.ROLLBACK_MESSAGE</strong></p><p>回滚消息，broker 端会删除半消息</p><p><strong>LocalTransactionState.UNKNOW</strong></p><p>暂时为未知状态，等待 broker 回查</p><h4 id="demo-3"><a class="anchor" href="#demo-3">#</a> demo</h4><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>transaction</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQBrokerException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">MQClientException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>client<span class="token punctuation">.</span>producer<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">Message</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>common<span class="token punctuation">.</span>message<span class="token punctuation">.</span></span><span class="token class-name">MessageExt</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>rocketmq<span class="token punctuation">.</span>remoting<span class="token punctuation">.</span>exception<span class="token punctuation">.</span></span><span class="token class-name">RemotingException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="11"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num="12"></td><td><pre> *</pre></td></tr><tr><td data-num="13"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="14"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num="15"></td><td><pre> **/</pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Producer</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MQClientException</span><span class="token punctuation">,</span> <span class="token class-name">MQBrokerException</span><span class="token punctuation">,</span> <span class="token class-name">RemotingException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token class-name">TransactionMQProducer</span> producer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionMQProducer</span><span class="token punctuation">(</span><span class="token string">"xxoo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setNamesrvAddr</span><span class="token punctuation">(</span><span class="token string">"127.0.0.1:9876"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token comment">// 回调</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">setTransactionListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TransactionListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">executeLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">Message</span> msg<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token comment">// 执行本地事务</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"==========executeLocalTransaction"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"msg:"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"transactionId:"</span> <span class="token operator">+</span> msg<span class="token punctuation">.</span><span class="token function">getTransactionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>                <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                    e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>                    <span class="token comment">// 出错回滚</span></pre></td></tr><tr><td data-num="34"></td><td><pre>                    <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span>ROLLBACK_MESSAGE<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>                <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>                <span class="token comment">// 模拟未知，之后会进入 checkLocalTransaction ()</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span>UNKNOW<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">LocalTransactionState</span> <span class="token function">checkLocalTransaction</span><span class="token punctuation">(</span><span class="token class-name">MessageExt</span> messageExt<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                <span class="token comment">//broker 端回调，检查事务</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                <span class="token comment">// 如果没有被 consumer 消费，那么就会在该方法中重投消息</span></pre></td></tr><tr><td data-num="44"></td><td><pre></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"=============checkLocalTransaction"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"msg:"</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>messageExt<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"transactionId:"</span> <span class="token operator">+</span> messageExt<span class="token punctuation">.</span><span class="token function">getTransactionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>                <span class="token comment">// 代表事务执行成功</span></pre></td></tr><tr><td data-num="49"></td><td><pre>                <span class="token keyword">return</span> <span class="token class-name">LocalTransactionState</span><span class="token punctuation">.</span>COMMIT_MESSAGE<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre>        producer<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">"xxoo01"</span><span class="token punctuation">,</span> <span class="token string">"hello transactions"</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token class-name">SendResult</span> sendResult <span class="token operator">=</span> producer<span class="token punctuation">.</span><span class="token function">sendMessageInTransaction</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sendResult<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token comment">//        producer.shutdown();</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><div class="tags"><a href="/tags/Java/" rel="tag"><i class="ic i-tag"></i> Java</a> <a href="/tags/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/" rel="tag"><i class="ic i-tag"></i> 消息中间件</a> <a href="/tags/RocketMQ/" rel="tag"><i class="ic i-tag"></i> RocketMQ</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i> </span><span class="text">更新于</span> <time title="修改时间：2021-12-24 15:08:41" itemprop="dateModified" datetime="2021-12-24T15:08:41+08:00">2021-12-24</time> </span><span id="/RocketMQ-消息、事务" class="item leancloud_visitors" data-flag-title="RocketMQ-消息、事务" title="阅读次数"><span class="icon"><i class="ic i-eye"></i> </span><span class="text">阅读次数</span> <span class="leancloud-visitors-count"></span> <span class="text">次</span></span></div><div class="reward"><button><i class="ic i-heartbeat"></i> 赞赏</button><p>请我喝[茶]~(￣▽￣)~*</p><div id="qr"><div><img data-src="/images/wechatpay.png" alt="fanfanfan 微信支付"><p>微信支付</p></div><div><img data-src="/images/alipay.png" alt="fanfanfan 支付宝"><p>支付宝</p></div><div><img data-src="/images/paypal.png" alt="fanfanfan PayPal"><p>PayPal</p></div></div></div><div id="copyright"><ul><li class="author"><strong>本文作者： </strong>fanfanfan <i class="ic i-at"><em>@</em></i>书院十四先生</li><li class="link"><strong>本文链接：</strong> <a href="https://www.baiyezi.vip/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1" title="RocketMQ-消息、事务">https://www.baiyezi.vip/RocketMQ-消息、事务</a></li><li class="license"><strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;tva2.sinaimg.cn&#x2F;mw690&#x2F;6833939bly1gicljgocqbj20zk0m8e81.jpg" title="RocketMQ-基础概念"><span class="type">上一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>RocketMQ-基础概念</h3></a></div><div class="item right"><a href="/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;tva2.sinaimg.cn&#x2F;mw690&#x2F;6833939bly1gipesng5oej20zk0m87d4.jpg" title="Kafka-整体架构"><span class="type">下一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>Kafka-整体架构</h3></a></div></div><div class="wrap" id="comments"></div></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目录"><ol class="toc"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E6%B6%88%E6%81%AF"><span class="toc-number">1.</span> <span class="toc-text">消息</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9%E6%A8%A1%E5%BC%8F"><span class="toc-number">1.1.</span> <span class="toc-text">消息消费模式</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E9%9B%86%E7%BE%A4%E6%B6%88%E6%81%AF"><span class="toc-number">1.1.1.</span> <span class="toc-text">集群消息</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%B9%BF%E6%92%AD%E6%B6%88%E6%81%AF"><span class="toc-number">1.1.2.</span> <span class="toc-text">广播消息</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8F%91%E9%80%81%E6%96%B9%E5%BC%8F"><span class="toc-number">1.2.</span> <span class="toc-text">发送方式</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%90%8C%E6%AD%A5%E6%B6%88%E6%81%AF"><span class="toc-number">1.2.1.</span> <span class="toc-text">同步消息</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%BC%82%E6%AD%A5%E6%B6%88%E6%81%AF"><span class="toc-number">1.2.2.</span> <span class="toc-text">异步消息</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%8D%95%E5%90%91%E6%B6%88%E6%81%AF"><span class="toc-number">1.2.3.</span> <span class="toc-text">单向消息</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%89%B9%E9%87%8F%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81"><span class="toc-number">1.3.</span> <span class="toc-text">批量消息发送</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#tag"><span class="toc-number">1.4.</span> <span class="toc-text">TAG</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#sql%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BF%87%E6%BB%A4"><span class="toc-number">1.5.</span> <span class="toc-text">SQL 表达式过滤</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E9%85%8D%E7%BD%AE"><span class="toc-number">1.5.1.</span> <span class="toc-text">配置</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%AE%9E%E4%BE%8B"><span class="toc-number">1.5.2.</span> <span class="toc-text">实例</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%AF%AD%E6%B3%95"><span class="toc-number">1.5.3.</span> <span class="toc-text">语法</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#demo"><span class="toc-number">1.5.4.</span> <span class="toc-text">demo</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%BB%B6%E8%BF%9F%E6%B6%88%E6%81%AF"><span class="toc-number">1.6.</span> <span class="toc-text">延迟消息</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E9%85%8D%E7%BD%AE-2"><span class="toc-number">1.6.1.</span> <span class="toc-text">配置</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BD%BF%E7%94%A8"><span class="toc-number">1.6.2.</span> <span class="toc-text">使用</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%A1%BA%E5%BA%8F%E6%B6%88%E8%B4%B9"><span class="toc-number">1.7.</span> <span class="toc-text">顺序消费</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#demo-2"><span class="toc-number">1.7.1.</span> <span class="toc-text">demo</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6"><span class="toc-number">1.8.</span> <span class="toc-text">重试机制</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#producer"><span class="toc-number">1.8.1.</span> <span class="toc-text">producer</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#consumer"><span class="toc-number">1.8.2.</span> <span class="toc-text">Consumer</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#broker%E6%8A%95%E9%80%92"><span class="toc-number">1.8.3.</span> <span class="toc-text">broker 投递</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF"><span class="toc-number">1.9.</span> <span class="toc-text">事务消息</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#rocketmq%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F"><span class="toc-number">1.9.1.</span> <span class="toc-text">RocketMQ 实现方式</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#transactionlistener%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%96%B9%E6%B3%95"><span class="toc-number">1.9.2.</span> <span class="toc-text">TransactionListener 的两个方法</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#executelocaltransaction"><span class="toc-number">1.9.2.1.</span> <span class="toc-text">executeLocalTransaction</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#checklocaltransaction"><span class="toc-number">1.9.2.2.</span> <span class="toc-text">checkLocalTransaction</span></a></li><li class="toc-item toc-level-5"><a class="toc-link" href="#%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E6%89%A7%E8%A1%8C%E7%8A%B6%E6%80%81"><span class="toc-number">1.9.2.3.</span> <span class="toc-text">本地事务执行状态</span></a></li></ol></li><li class="toc-item toc-level-4"><a class="toc-link" href="#demo-3"><span class="toc-number">1.9.3.</span> <span class="toc-text">demo</span></a></li></ol></li></ol></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li><a href="/Linux%E4%B8%8B%E5%AE%89%E8%A3%85MySQL" rel="bookmark" title="Linux下安装MySQL">Linux下安装MySQL</a></li><li><a href="/MySQL%E5%9F%BA%E7%A1%80" rel="bookmark" title="MySQL基础">MySQL基础</a></li><li><a href="/IOC%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="IOC配置方式（一）">IOC配置方式（一）</a></li><li><a href="/IOC%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="IOC配置方式（二）">IOC配置方式（二）</a></li><li><a href="/IOC%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F" rel="bookmark" title="IOC注解方式">IOC注解方式</a></li><li><a href="/AOP" rel="bookmark" title="AOP">AOP</a></li><li><a href="/SpringBoot%E5%85%A5%E9%97%A8" rel="bookmark" title="SpringBoot入门">SpringBoot入门</a></li><li><a href="/SpringBoot-Web%E5%BC%80%E5%8F%91" rel="bookmark" title="SpringBoot-Web开发">SpringBoot-Web开发</a></li><li><a href="/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86" rel="bookmark" title="SpringBoot自动装配原理">SpringBoot自动装配原理</a></li><li><a href="/zookeeper%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" rel="bookmark" title="zookeeper搭建及基本概念">zookeeper搭建及基本概念</a></li><li><a href="/zookeeper%E5%8E%9F%E7%90%86" rel="bookmark" title="zookeeper原理">zookeeper原理</a></li><li><a href="/zookeeper%E6%A1%88%E4%BE%8B" rel="bookmark" title="zookeeper案例">zookeeper案例</a></li><li><a href="/MySQL%E8%B0%83%E4%BC%98%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="MySQL调优（一）">MySQL调优（一）</a></li><li><a href="/redis%E5%AE%89%E8%A3%85%E5%8F%8ANIO%E5%8E%9F%E7%90%86" rel="bookmark" title="redis安装及NIO原理">redis安装及NIO原理</a></li><li><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="SpringMVC入门（一）">SpringMVC入门（一）</a></li><li><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="SpringMVC入门（二）">SpringMVC入门（二）</a></li><li><a href="/SpringMVC-REST%E9%A3%8E%E6%A0%BC" rel="bookmark" title="SpringMVC-REST风格">SpringMVC-REST风格</a></li><li><a href="/SpringMVC%E8%BF%9B%E9%98%B6" rel="bookmark" title="SpringMVC进阶">SpringMVC进阶</a></li><li><a href="/SpringMVC%E6%BA%90%E7%A0%81%E6%80%BB%E7%BB%93" rel="bookmark" title="SpringMVC源码总结">SpringMVC源码总结</a></li><li><a href="/shiro%E5%85%A5%E9%97%A8" rel="bookmark" title="shiro入门">shiro入门</a></li><li><a href="/shiro%E6%95%B4%E5%90%88SpringBoot" rel="bookmark" title="shiro整合SpringBoot">shiro整合SpringBoot</a></li><li><a href="/shiro%E7%9A%84session%E7%AE%A1%E7%90%86" rel="bookmark" title="shiro的session管理">shiro的session管理</a></li><li><a href="/shiro%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%99%BB%E5%BD%95" rel="bookmark" title="shiro的缓存机制与分布式登录">shiro的缓存机制与分布式登录</a></li><li><a href="/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95" rel="bookmark" title="单点登录">单点登录</a></li><li><a href="/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" rel="bookmark" title="线程基础知识">线程基础知识</a></li><li><a href="/%E5%AE%B9%E5%99%A8%E4%B8%8E%E7%BA%BF%E7%A8%8B%E6%B1%A0" rel="bookmark" title="容器与线程池">容器与线程池</a></li><li><a href="/Win10%E5%AE%89%E8%A3%85docker" rel="bookmark" title="Win10安装docker">Win10安装docker</a></li><li><a href="/Win10%E5%AE%89%E8%A3%85docker" rel="bookmark" title="Win10安装docker">Win10安装docker</a></li><li><a href="/JMH" rel="bookmark" title="JMH">JMH</a></li><li><a href="/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B" rel="bookmark" title="并发编程">并发编程</a></li><li><a href="/java-%E6%97%A5%E5%BF%97%E4%BD%93%E7%B3%BB" rel="bookmark" title="java-日志体系">java-日志体系</a></li><li><a href="/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="bookmark" title="redis的数据类型">redis的数据类型</a></li><li><a href="/redis%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8" rel="bookmark" title="redis进阶使用">redis进阶使用</a></li><li><a href="/redis%E7%9A%84%E9%9B%86%E7%BE%A4" rel="bookmark" title="redis的集群">redis的集群</a></li><li><a href="/redis%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8" rel="bookmark" title="redis在开发中的简单使用">redis在开发中的简单使用</a></li><li><a href="/Composite%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Composite组合模式">Composite组合模式</a></li><li><a href="/ChainOfResponsibility%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F" rel="bookmark" title="ChainOfResponsibility责任链模式">ChainOfResponsibility责任链模式</a></li><li><a href="/Decorator%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Decorator装饰器模式">Decorator装饰器模式</a></li><li><a href="/Facade%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Facade门面模式">Facade门面模式</a></li><li><a href="/Flyweight%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Flyweight享元模式">Flyweight享元模式</a></li><li><a href="/Factory%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Factory工厂模式">Factory工厂模式</a></li><li><a href="/Iterator%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Iterator迭代器模式">Iterator迭代器模式</a></li><li><a href="/Mediator%E8%B0%83%E5%81%9C%E8%80%85%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Mediator调停者模式">Mediator调停者模式</a></li><li><a href="/Observer%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Observer观察者模式">Observer观察者模式</a></li><li><a href="/Singleton%E5%8D%95%E4%BE%8B" rel="bookmark" title="Singleton单例">Singleton单例</a></li><li><a href="/Proxy%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Proxy代理模式">Proxy代理模式</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95" rel="bookmark" title="微服务以及架构发展">微服务以及架构发展</a></li><li><a href="/JVM-%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD" rel="bookmark" title="JVM-类的加载">JVM-类的加载</a></li><li><a href="/SpringCloud-Netflix%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Netflix体系">SpringCloud-Netflix体系</a></li><li><a href="/%E5%BA%8F%E5%88%97%E5%8C%96" rel="bookmark" title="序列化">序列化</a></li><li><a href="/JVM-JMM" rel="bookmark" title="JVM-JMM">JVM-JMM</a></li><li><a href="/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84" rel="bookmark" title="分布式系统与高并发系统架构">分布式系统与高并发系统架构</a></li><li><a href="/JVM-%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA" rel="bookmark" title="JVM-对象的创建">JVM-对象的创建</a></li><li><a href="/JVM-JVM%E8%B0%83%E4%BC%98" rel="bookmark" title="JVM-JVM调优">JVM-JVM调优</a></li><li><a href="/JVM-GC" rel="bookmark" title="JVM-GC">JVM-GC</a></li><li><a href="/SpringCloud-Alibaba%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Alibaba体系">SpringCloud-Alibaba体系</a></li><li><a href="/SpringCloud-SpringCloud%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-SpringCloud体系">SpringCloud-SpringCloud体系</a></li><li><a href="/Apollo" rel="bookmark" title="Apollo">Apollo</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="微服务中的会话管理（一）">微服务中的会话管理（一）</a></li><li><a href="/%E7%A3%81%E7%9B%98IO%E4%B8%8E%E7%BD%91%E7%BB%9CIO" rel="bookmark" title="磁盘IO与网络IO">磁盘IO与网络IO</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="微服务中的会话管理（二）">微服务中的会话管理（二）</a></li><li><a href="/HTTPS" rel="bookmark" title="HTTPS">HTTPS</a></li><li><a href="/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" rel="bookmark" title="RocketMQ-基础概念">RocketMQ-基础概念</a></li><li class="active"><a href="/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1" rel="bookmark" title="RocketMQ-消息、事务">RocketMQ-消息、事务</a></li><li><a href="/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84" rel="bookmark" title="Kafka-整体架构">Kafka-整体架构</a></li><li><a href="/%E7%BD%91%E7%BB%9CIO%E6%A8%A1%E5%9E%8B" rel="bookmark" title="网络IO模型">网络IO模型</a></li><li><a href="/Kafka-%E6%90%AD%E5%BB%BA" rel="bookmark" title="Kafka-搭建">Kafka-搭建</a></li><li><a href="/Netty" rel="bookmark" title="Netty">Netty</a></li><li><a href="/nginx%E5%AE%9E%E6%88%98" rel="bookmark" title="nginx实战">nginx实战</a></li><li><a href="/Java%E5%92%8C%E4%B8%B2%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%80%9A%E4%BF%A1" rel="bookmark" title="Java和串口进行通信">Java和串口进行通信</a></li></ul></div><div class="overview panel" data-title="站点概览"><div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="fanfanfan" data-src="/images/avatar.png"><p class="name" itemprop="name">fanfanfan</p><div class="description" itemprop="description">花有重开日，人无再少年</div></div><nav class="state"><div class="item posts"><a href="/archives/"><span class="count">77</span> <span class="name">文章</span></a></div><div class="item categories"><a href="/categories/"><span class="count">5</span> <span class="name">分类</span></a></div><div class="item tags"><a href="/tags/"><span class="count">78</span> <span class="name">标签</span></a></div></nav><div class="social"></div><ul class="menu"><li class="item"><a href="/" rel="section"><i class="ic i-home"></i>首页</a></li><li class="item"><a href="/about/" rel="section"><i class="ic i-user"></i>关于</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a></li><li class="item"><a href="/categories/" rel="section"><i class="ic i-th"></i>分类</a></li><li class="item"><a href="/tags/" rel="section"><i class="ic i-tags"></i>标签</a></li></ul></li><li class="item"><a href="/friends/" rel="section"><i class="ic i-heart"></i>friends</a></li><li class="item"><a href="/links/" rel="section"><i class="ic i-magic"></i>links</a></li></ul></div></div></div><ul id="quick"><li class="prev pjax"><a href="/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>随机文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/Factory%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F" title="Factory工厂模式">Factory工厂模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" title="redis的数据类型">redis的数据类型</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/MySQL%E8%B0%83%E4%BC%98%EF%BC%88%E4%B8%80%EF%BC%89" title="MySQL调优（一）">MySQL调优（一）</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/front/" title="分类于 前端">前端</a></div><span><a href="/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95" title="前端测试">前端测试</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/Facade%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F" title="Facade门面模式">Facade门面模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/zookeeper%E5%8E%9F%E7%90%86" title="zookeeper原理">zookeeper原理</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringBoot%E5%85%A5%E9%97%A8" title="SpringBoot入门">SpringBoot入门</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a> <i class="ic i-angle-right"></i> <a href="/categories/java/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" title="分类于 微服务">微服务</a></div><span><a href="/Apollo" title="Apollo">Apollo</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95" title="单点登录">单点登录</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84" title="分布式系统与高并发系统架构">分布式系统与高并发系统架构</a></span></li></ul></div><div><h2>最新评论</h2><ul class="leancloud-recent-comment"></ul></div></div><div class="status"><div class="copyright">&copy; <span itemprop="copyrightYear">2021</span> <span class="with-love"><i class="ic i-sakura rotate"></i> </span><span class="author" itemprop="copyrightHolder">fanfanfan @ 书院十四先生</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i> </span><span title="站点总字数">1.3m 字</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="ic i-coffee"></i> </span><span title="站点阅读时长">20:23</span></div><div class="powered-by">基于 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo</span> & Theme.<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==">Shoka</span></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL={path:"/RocketMQ-消息、事务",favicon:{show:"书院十四先生",hide:"书院十四先生"},search:{placeholder:"文章搜索",empty:"关于 「 ${query} 」，什么也没搜到",stats:"${time} ms 内找到 ${hits} 条结果"},valine:!0,fancybox:!0,copyright:'复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',ignores:[function(e){return e.includes("#")},function(e){return new RegExp(LOCAL.path+"$").test(e)}]}</script><script src="https://cdn.polyfill.io/v2/polyfill.js"></script><script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script><script src="/js/app.js?v=0.2.5"></script></body></html><!-- rebuild by hrmmi -->