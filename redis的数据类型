<!-- build time:Sun Dec 26 2021 23:02:40 GMT+0800 (中国标准时间) --><!DOCTYPE html><html lang="zh-CN,en,default"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#FFF"><link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png"><link rel="icon" type="image/ico" sizes="32x32" href="/images/favicon.ico"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" type="application/rss+xml" href="https://baiyezi.vip/rss.xml"><link rel="alternate" type="application/atom+xml" href="https://baiyezi.vip/atom.xml"><link rel="alternate" type="application/json" href="https://baiyezi.vip/feed.json"><link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/css/app.css?v=0.2.5"><meta name="keywords" content="Java,数据库,IO,Redis,缓存"><link rel="canonical" href="https://baiyezi.vip/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"><title>redis的数据类型 - Java |</title><meta name="generator" content="Hexo 5.4.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">redis的数据类型</h1><div class="meta"><span class="item" title="创建时间：2021-04-02 22:12:16"><span class="icon"><i class="ic i-calendar"></i> </span><span class="text">发表于</span> <time itemprop="dateCreated datePublished" datetime="2021-04-02T22:12:16+08:00">2021-04-02</time> </span><span class="item" title="本文字数"><span class="icon"><i class="ic i-pen"></i> </span><span class="text">本文字数</span> <span>27k</span> <span class="text">字</span> </span><span class="item" title="阅读时长"><span class="icon"><i class="ic i-clock"></i> </span><span class="text">阅读时长</span> <span>25 分钟</span> </span><span id="/redis的数据类型" class="item leancloud_visitors" data-flag-title="" title="阅读次数"><span class="icon"><i class="ic i-eye"></i> </span><span class="text">阅读次数</span> <span class="leancloud-visitors-count"></span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切换导航栏"><span class="line"></span> <span class="line"></span> <span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/" rel="start"></a></li></ul><ul class="right"><li class="item theme"><i class="ic i-sun"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div id="imgs" class="pjax"><ul><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105421.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105419.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105008.png"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105420.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105422.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225104957.png"></li></ul></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"/></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"/><use xlink:href="#gentle-wave" x="48" y="3"/><use xlink:href="#gentle-wave" x="48" y="5"/><use xlink:href="#gentle-wave" x="48" y="7"/></g></svg></div><main><div class="inner"><div id="main" class="pjax"><div class="article wrap"><div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i> <span><a href="/">首页</a></span><i class="ic i-angle-right"></i> <span class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/java/" itemprop="item" rel="index" title="分类于 Java"><span itemprop="name">Java</span></a><meta itemprop="position" content="1"></span></div><article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://baiyezi.vip/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="/images/avatar.png"><meta itemprop="name" content="fanfanfan"><meta itemprop="description" content=", 花有重开日，人无再少年"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content=""></span><div class="body md" itemprop="articleBody"><h2 id="简单命令使用"><a class="anchor" href="#简单命令使用">#</a> 简单命令使用</h2><p>安装好之后就可以进一步使用命令行来操作 redis 了。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 查看 redis 命令行</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># redis-cli -h</span></pre></td></tr></table></figure><p>redis 内置 16 个库，0 号库、1 号库...，可以在这些库中存放数据</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment"># 连接指定端口的 redis 实例</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># redis-cli -p 6380</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment"># 给键 k380:1 设置值 hello</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">127.0</span>.0.1:638<span class="token operator"><span class="token file-descriptor important">0</span>></span> <span class="token builtin class-name">set</span> k380:1 hello</pre></td></tr><tr><td data-num="5"></td><td><pre>OK</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment"># 取到键对应的值</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:638<span class="token operator"><span class="token file-descriptor important">0</span>></span> get k380:1</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token string">"hello"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment"># 切换到 8 号库，默认在 0 号库</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">127.0</span>.0.1:638<span class="token operator"><span class="token file-descriptor important">0</span>></span> <span class="token keyword">select</span> <span class="token number">8</span></pre></td></tr><tr><td data-num="11"></td><td><pre>OK</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment"># 退出</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">127.0</span>.0.1:6380<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">></span> <span class="token builtin class-name">exit</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment"># 也可以在连接的时候直接指定要连接的库</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># redis-cli -p 6380 -n 8</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token number">127.0</span>.0.1:6380<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token operator">></span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># redis-cli</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> <span class="token comment">#输入 help 查看各种命令帮助</span></pre></td></tr><tr><td data-num="3"></td><td><pre>redis-cli <span class="token number">6.0</span>.6</pre></td></tr><tr><td data-num="4"></td><td><pre>To get <span class="token builtin class-name">help</span> about Redis commands type:</pre></td></tr><tr><td data-num="5"></td><td><pre>      <span class="token string">"help @&lt;group>"</span> to get a list of commands <span class="token keyword">in</span> <span class="token operator">&lt;</span>group<span class="token operator">></span> <span class="token comment">#help @组名，redis 各种命令是分组的。help @+tab 键可以有组名的提示补全</span></pre></td></tr><tr><td data-num="6"></td><td><pre>      <span class="token string">"help &lt;command>"</span> <span class="token keyword">for</span> <span class="token builtin class-name">help</span> on <span class="token operator">&lt;</span>command<span class="token operator">></span> <span class="token comment"># help +tab 键可以有命令的补全或提示</span></pre></td></tr><tr><td data-num="7"></td><td><pre>      <span class="token string">"help &lt;tab>"</span> to get a list of possible <span class="token builtin class-name">help</span> topics</pre></td></tr><tr><td data-num="8"></td><td><pre>      <span class="token string">"quit"</span> to <span class="token builtin class-name">exit</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>To <span class="token builtin class-name">set</span> redis-cli preferences:</pre></td></tr><tr><td data-num="11"></td><td><pre>      <span class="token string">":set hints"</span> <span class="token builtin class-name">enable</span> online hints</pre></td></tr><tr><td data-num="12"></td><td><pre>      <span class="token string">":set nohints"</span> disable online hints</pre></td></tr><tr><td data-num="13"></td><td><pre>Set your preferences <span class="token keyword">in</span> ~/.redisclirc</pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> @string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k1 <span class="token number">1</span> <span class="token comment"># 设置键 k1 的值为 1</span></pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k2 <span class="token number">1</span></pre></td></tr><tr><td data-num="4"></td><td><pre>OK</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> keys * <span class="token comment"># 查看当前库中所有键</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"k2"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"k1"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHDB <span class="token comment"># 清除当前库中所有键值</span></pre></td></tr><tr><td data-num="9"></td><td><pre>OK</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> keys *</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">(</span>empty array<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> </pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> FLUSHALL <span class="token comment"># 清除所有库中所有键值</span></pre></td></tr><tr><td data-num="14"></td><td><pre>  FLUSHALL <span class="token punctuation">[</span>ASYNC<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="15"></td><td><pre>  summary: Remove all keys from all databases</pre></td></tr><tr><td data-num="16"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="17"></td><td><pre>  group: server</pre></td></tr></table></figure><h2 id="redis数据类型"><a class="anchor" href="#redis数据类型">#</a> redis 数据类型</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHJvY2Vzc29uLmNvbS92aWV3L2xpbmsvNWZkMmNjZmU3ZDljMDgwNmY3MmIyYTI0">以下所有图片在线参考</span></p><p>redis 共有<span class="exturl" data-url="aHR0cHM6Ly93d3cucHJvY2Vzc29uLmNvbS92aWV3L2xpbmsvNWZjZjE5MGM3ZDljMDgzMGU4ZTIzMTE2">五种数据类型</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20201210101728093.png" alt="image-20201210101728093"></p><h3 id="string"><a class="anchor" href="#string">#</a> String</h3><h4 id="set-get"><a class="anchor" href="#set-get">#</a> <strong>set、get</strong></h4><p>set 和 get 分别用来设置 key、value 和获取 key 对应的 value</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> <span class="token builtin class-name">set</span> <span class="token comment"># EX seconds|PX milliseconds 代表 key 的过期时间；NX 代表只能新建 key，如果没有 key 则新建，否则 key 以及 value 不变；XX 代表只能更新，需要有 key 以及 value 存在才能更新</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SET key value <span class="token punctuation">[</span>EX seconds<span class="token operator">|</span>PX milliseconds<span class="token punctuation">]</span> <span class="token punctuation">[</span>NX<span class="token operator">|</span>XX<span class="token punctuation">]</span> <span class="token punctuation">[</span>KEEPTTL<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set the string value of a key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> get</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  GET key</pre></td></tr><tr><td data-num="11"></td><td><pre>  summary: Get the value of a key</pre></td></tr><tr><td data-num="12"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="13"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k1 <span class="token number">1</span></pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k1 <span class="token number">22</span> nx</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>nil<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"1"</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k2 hello xx</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>nil<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>nil<span class="token punctuation">)</span></pre></td></tr></table></figure><pre><code class="language-sh">127.0.0.1:6379&gt; set k1 666
OK
127.0.0.1:6379&gt; set k1 666777 ex 10 xx
OK
127.0.0.1:6379&gt; get k1
&quot;666777&quot;
</code></pre><h4 id="mset-mget"><a class="anchor" href="#mset-mget">#</a> <strong>mset、mget</strong></h4><p>mset 可以同时设置多个 key、value，mget 可以同时获取多个 key 对应的 value</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> mset</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  MSET key value <span class="token punctuation">[</span>key value <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set multiple keys to multiple values</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.1</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> mget</pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>  MGET key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="10"></td><td><pre>  summary: Get the values of all the given keys</pre></td></tr><tr><td data-num="11"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="12"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> mset k1 hello k2 world</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"hello"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"world"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> mget k1 k2</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"hello"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"world"</span></pre></td></tr></table></figure><h4 id="append"><a class="anchor" href="#append">#</a> <strong>append</strong></h4><p>append 可以追加一个值到指定 key 的 value 后面</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> APPEND</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  APPEND key value</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Append a value to a key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"hello"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> APPEND k1 <span class="token string">" world"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">11</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"hello world"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span></pre></td></tr></table></figure><h4 id="getrange"><a class="anchor" href="#getrange">#</a> <strong>getrange</strong></h4><p>getrange 可以取出 value 为 String 值中指定的子串</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> GETRANGE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  GETRANGE key start end <span class="token comment">#start 从下标 0 开始，也可以使用反向索引，从右向左下标从 - 1 开始</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get a substring of the string stored at a key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.4</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> GETRANGE k1 <span class="token number">6</span> <span class="token number">10</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"world"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> GETRANGE k1 <span class="token number">6</span> -1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"world"</span></pre></td></tr></table></figure><h4 id="setrange"><a class="anchor" href="#setrange">#</a> <strong>setrange</strong></h4><p>setrange 可以从 value 值为 String 值的指定下标开始替换掉原来的值</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SETRANGE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SETRANGE key offset value</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Overwrite part of a string at key starting at the specified offset</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SETRANGE k1 <span class="token number">6</span> fan</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">11</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"hello fanld"</span></pre></td></tr></table></figure><h4 id="strlen"><a class="anchor" href="#strlen">#</a> <strong>strlen</strong></h4><p>strlen 可以得到 key 对应 value 的长度</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> STRLEN</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  STRLEN key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get the length of the value stored <span class="token keyword">in</span> a key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> STRLEN k1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">11</span></pre></td></tr></table></figure><p><strong>type</strong></p><p>type 属于 generic 组的命令，可以查看 key 对应的 value 的类型。</p><p>!&gt; 命令属于哪个组，那么使用该命令设置的 key 对应的 value 就是组类型的，比如 set 命令是 string 组的，那么使用 set 命令设置的 key 对应的 value 就是 string 类型的。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> TYPE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  TYPE key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Determine the <span class="token builtin class-name">type</span> stored at key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: generic</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">type</span> k1</pre></td></tr><tr><td data-num="2"></td><td><pre>string</pre></td></tr></table></figure><h4 id="object"><a class="anchor" href="#object">#</a> <strong>object</strong></h4><p>object 命令后面可以跟一个子命令</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> OBJECT</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  OBJECT subcommand <span class="token punctuation">[</span>arguments <span class="token punctuation">[</span>arguments <span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Inspect the internals of Redis objects</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.2</span>.3</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: generic</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> OBJECT <span class="token builtin class-name">help</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> OBJECT <span class="token operator">&lt;</span>subcommand<span class="token operator">></span> arg arg <span class="token punctuation">..</span>. arg. Subcommands are:</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> ENCODING <span class="token operator">&lt;</span>key<span class="token operator">></span> -- Return the kind of internal representation used <span class="token keyword">in</span> order to store the value associated with a key.</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> FREQ <span class="token operator">&lt;</span>key<span class="token operator">></span> -- Return the access frequency index of the key. The returned integer is proportional to the logarithm of the recent access frequency of the key.</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> IDLETIME <span class="token operator">&lt;</span>key<span class="token operator">></span> -- Return the idle <span class="token function">time</span> of the key, that is the approximated number of seconds elapsed since the last access to the key.</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> REFCOUNT <span class="token operator">&lt;</span>key<span class="token operator">></span> -- Return the number of references of the value associated with the specified key.</pre></td></tr></table></figure><p>使用<strong> encoding</strong> 命令可以查看 key 对应值的编码</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> OBJECT encoding k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"embstr"</span></pre></td></tr></table></figure><h4 id="数值类型"><a class="anchor" href="#数值类型">#</a> <strong>数值类型</strong></h4><p>String 类型的值可以是数值类型，此时可以进行计算。实际应用：抢购、秒杀、详情页、点赞、评论等，规避高并发下对数据库的事务操作，完全由 redis 内存操作代替。</p><p><strong>incr</strong></p><p>incr 可以将 key 对应的数值类型的 value 值加一</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> incr</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  INCR key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Increment the integer value of a key by one</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k2 <span class="token number">15</span></pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"15"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> INCR k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">16</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token string">"16"</span></pre></td></tr></table></figure><p><strong>incrby</strong></p><p>incrby 可以将 key 对应的数值类型的 value 加一个指定数字</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> incrby</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  INCRBY key increment</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Increment the integer value of a key by the given amount</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"16"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> incrby k2 <span class="token number">100</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">116</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"116"</span></pre></td></tr></table></figure><p><strong>decr</strong></p><p>decr 可以将 key 对应的数值类型的 value 减一</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"116"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> decr k2</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">115</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"115"</span></pre></td></tr></table></figure><p><strong>decrby</strong></p><p>decrby 可以将 key 对应的数值类型的 value 减去一个指定的数字</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"115"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> decrby k2 <span class="token number">15</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">100</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"100"</span></pre></td></tr></table></figure><p><strong>incrbyfloat</strong></p><p>incrbyfloat 可以将 key 对应的数值类型的 value 加一个指定的小数</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"100"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> incrbyfloat k2 <span class="token number">0.5</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"100.5"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"100.5"</span></pre></td></tr></table></figure><h4 id="二进制安全"><a class="anchor" href="#二进制安全">#</a> <strong>二进制安全</strong></h4><p>客户端通过操作系统内核的 socket 连接 redis 后，取出的数据是字节流（一个字符占用一个字节，然后向字节流写），而不是字符流，因为不同的编程语言的数据类型大小可能不同，如果是字符流的话可能就会造成乱码，而字节流在客户端和 redis 双方都会有统一的编码和解码，这样就能保证在不同的编程语言环境下得到的数据是相同且正确的。</p><p>其次，在客户端不同的编码环境下，在 redis 中给一个 key 设置相同的 value，得到的结果也不相同。比如，汉字 “中” 在 UTF-8 编码下是三个字节（\xe4\xb8\xad），而在 GBK 编码下是两个字节（\xd6\xd0）。无论客户端的编码是什么，redis 底层存的都是数据的字节。</p><p>可以通过命令行 redis-cli --raw 在启动 redis 时，让 key 对应的 value 值以当前客户端编码的格式显示出来，可能会乱码。</p><h4 id="getset"><a class="anchor" href="#getset">#</a> <strong>getset</strong></h4><p>可以更新指定 key 的 value 值同时返回旧的 value 值。这个指令在通信上（socket）只进行一次 IO 便实现了 get 和 set 两个指令的功能，比起同时使用 get 和 set 来说减少了一次 IO，降低了通信成本。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> GETSET</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  GETSET key value</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set the string value of a key and <span class="token builtin class-name">return</span> its old value</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">set</span> k3 hello</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k3</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"hello"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> GETSET k3 fan</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"hello"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k3</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token string">"fan"</span></pre></td></tr></table></figure><h4 id="msetnx"><a class="anchor" href="#msetnx">#</a> <strong>msetnx</strong></h4><p>该指令在同时设置多个键值时可以保证原子性</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> MSETNX</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  MSETNX key value <span class="token punctuation">[</span>key value <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set multiple keys to multiple values, only <span class="token keyword">if</span> none of the keys exist</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.1</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> msetnx k1 a k2 b</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> mget k1 k2</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> msetnx k2 d k3 c <span class="token comment">#由于 k2 已经存在，所以导致 k3 也无法创建</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> mget k1 k2 k3</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>nil<span class="token punctuation">)</span></pre></td></tr></table></figure><h3 id="bitmap"><a class="anchor" href="#bitmap">#</a> bitmap</h3><h4 id="setbit"><a class="anchor" href="#setbit">#</a> <strong>setbit</strong></h4><p>改变或清除指定 key 对应的 value 的指定二进制位（offset）上的值。如果偏移量超过 7，则代表超过一个字节，将自动扩容至两个字节。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SETBIT</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SETBIT key offset value</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Sets or clears the bit at offset <span class="token keyword">in</span> the string value stored at key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k1 <span class="token number">1</span> <span class="token number">1</span> <span class="token comment">#将 key 为 k1 且 value 为 0 的 value 的二进制位中的第一位设置为 1，即 00000000 -> 01000000</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"@"</span> <span class="token comment">#01000000 的 Ascii 为符号 @</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k1 <span class="token number">7</span> <span class="token number">1</span> <span class="token comment">#01000000 -> 0100001</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token string">"A"</span> <span class="token comment">#01000001 的十进制为 65，对应的 ASCII 为字符 A</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k1 <span class="token number">9</span> <span class="token number">1</span> <span class="token comment">#01000001 -> 01000001 01000000</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token string">"A@"</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20201211101021413.png" alt="image-20201211101021413"></p><p>可以通过 man ascii 来查看 ascii 对应各个进制的值</p><h4 id="bitpos"><a class="anchor" href="#bitpos">#</a> <strong>bitpos</strong></h4><p>返回指定字节范围内的指定的第一次出现的二进制位（0 或 1）的下标</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> BITPOS</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  BITPOS key bit <span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token comment">#start 为其实字节的下标，end 为结束字节的下标</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Find first bit <span class="token builtin class-name">set</span> or <span class="token function">clear</span> <span class="token keyword">in</span> a string</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.8</span>.7</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"A@"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitpos k1 <span class="token number">1</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token comment">#返回开始下标和结束下标均为 0 的字节的二进制中第一次出现 1 的二进制位的下标。即 01000001 01000000 中的下标为 0 的字节（即第一个字节）01000001 中第一次出现 1 的二进制位的下标为 1</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span> </pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitpos k1 <span class="token number">0</span> <span class="token number">1</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitpos k1 <span class="token number">1</span> <span class="token number">0</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20201211103928463.png" alt="image-20201211103928463"></p><h4 id="bitcount"><a class="anchor" href="#bitcount">#</a> <strong>bitcount</strong></h4><p>统计给定字节范围内二进制 1 的数量</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> bitcount</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  BITCOUNT key <span class="token punctuation">[</span>start end<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Count <span class="token builtin class-name">set</span> bits <span class="token keyword">in</span> a string</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.6</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"A@"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitcount k1 <span class="token number">0</span> <span class="token number">1</span> <span class="token comment">#01000001 01000000 中二进制 1 的个数为 3</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitcount k1 <span class="token number">0</span> <span class="token number">0</span> <span class="token comment">#01000001 中二进制 1 的个数为 2</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitcount k1 <span class="token number">1</span> <span class="token number">1</span> <span class="token comment">#01000000 中二进制 1 的个数为 1</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr></table></figure><h4 id="bitop"><a class="anchor" href="#bitop">#</a> <strong>bitop</strong></h4><p>对 key 对应的 value 的二进制位进行操作</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> bitop</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  BITOP operation destkey key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token comment"># opereation 代表与或非异或的二进制运算符；destkey 代表存放操作结果的 key；key 代表参与运算的 key</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Perform bitwise operations between strings</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.6</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: string</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k1 <span class="token number">1</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k1 <span class="token number">7</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k1</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token string">"A"</span> <span class="token comment"># 01000001</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k2 <span class="token number">1</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit k2 <span class="token number">6</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get k2</pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token string">"B"</span> <span class="token comment"># 01000010</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitop and reskey k1 k2 <span class="token comment">#01000001 和 01000010 按位与得到 01000000</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get reskey</pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token string">"@"</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitop or reskey k1 k2 <span class="token comment">#按位或</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> get reskey</pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token string">"C"</span></pre></td></tr></table></figure><h4 id="应用场景"><a class="anchor" href="#应用场景">#</a> <strong>应用场景</strong></h4><p>关于 bitmap 的应用场景</p><p>1、统计用户的登录天数</p><p>例如，统计用户 tom 一年 365 天的登录天数。</p><p>实现：将用户作为 key，将一年 365 天用 0~364 个二进制位的下标表示，哪天登录就将哪天的二进制位下标对应的二进制位通过 setbit 设置为 1，之后用 bitcount 统计二进制位为 1 的个数即可。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit tom <span class="token number">1</span> <span class="token number">1</span> <span class="token comment">#第二天登录（二进制下标为 1）将相应的二进制位设置为 1</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit tom <span class="token number">10</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit tom <span class="token number">364</span> <span class="token number">1</span> <span class="token comment"># 第 365 天登录（二进制下标为 364）</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> STRLEN tom <span class="token comment"># 365 个二进制位所占字节数为 46 个字节</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">46</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> BITCOUNT tom -2 -1 <span class="token comment"># 统计一年最后两天中登录天数（利用反向索引）</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">(</span>i5nteger<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> BITCOUNT tom <span class="token number">0</span> -1 <span class="token comment"># 统计一年登录总天数（正向索引从 0 开始，反向索引从 - 1 开始）</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr></table></figure><p>这相比于 MySQL 等数据库在数据所占空间大小成本上有明显的优势。也就是说用 redis 统计的话，一个用户的数据在一年里只占用了 46 个字节，一千万的用户在一年里的数据大小为 46*10000000=460000000Byte=460M，同样的数据量所占用的空间大小绝对小于 MySQL 等数据库，并且按位运算的速度远比 MySQL 的运算速度快。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20201211153353688.png" alt="image-20201211153353688"></p><p>2、活跃用户统计</p><p>比如说统计某几天范围内登录用户数，且如果是同一用户登录的话要进行去重。例如：2020-12-11 这一天登录的用户有 tom、jack、marry（分别用二进制位下标 1、2、3 表示），2020-12-12 这一天登录的用户有 tom、marry、sean（对应二进制位下标 1、3、4），现在需要统计这两天的活跃用户，去重后结果应该是 4 个用户。</p><p>实现：将日期作为 key，将二进制位的下标映射到用户，用户登录就将用户对应的二进制位下标所对应的二进制位设置为 1。如果，同一用户连续多天登录，那么只要将这多天的用户对应的二进制下标对应的二进制位按位进行或运算就达到了去重的效果。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit <span class="token number">20201211</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token comment">#tom 登录</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit <span class="token number">20201211</span> <span class="token number">2</span> <span class="token number">1</span> <span class="token comment">#jack 登录</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit <span class="token number">20201211</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token comment">#marry 登录</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit <span class="token number">20201212</span> <span class="token number">1</span> <span class="token number">1</span> <span class="token comment">#tom 登录</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit <span class="token number">20201212</span> <span class="token number">3</span> <span class="token number">1</span> <span class="token comment">#marry 登录</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> setbit <span class="token number">20201212</span> <span class="token number">4</span> <span class="token number">1</span> <span class="token comment">#sean 登录</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">0</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitop or totaluser <span class="token number">20201211</span> <span class="token number">20201212</span> <span class="token comment">#将这两天的二进制位进行或运算，达到累加以及去重效果，之后赋值给 totaluser</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> bitcount totaluser  <span class="token number">0</span> -1<span class="token comment">#计算 totaluser 中二进制位为 1 的个数</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20201211155355168.png" alt="image-20201211155355168"></p><h3 id="list"><a class="anchor" href="#list">#</a> list</h3><p>list 维护了元素插入的顺序，而不是维护元素排序，且 list 中元素可以重复。redis 中的 list 是一个双向列表，head 头指针指向列表中第一个元素，tail 尾指针指向列表中最后一个元素。</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20201216231446.png" alt="image-20201216231444174"></p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> @list</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  BLPOP key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token function">timeout</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Remove and get the first element <span class="token keyword">in</span> a list, or block <span class="token keyword">until</span> one is available</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>  BRPOP key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token function">timeout</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  summary: Remove and get the last element <span class="token keyword">in</span> a list, or block <span class="token keyword">until</span> one is available</pre></td></tr><tr><td data-num="9"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>  BRPOPLPUSH <span class="token builtin class-name">source</span> destination <span class="token function">timeout</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  summary: Pop an element from a list, push it to another list and <span class="token builtin class-name">return</span> it<span class="token punctuation">;</span> or block <span class="token keyword">until</span> one is available</pre></td></tr><tr><td data-num="13"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>  LINDEX key index</pre></td></tr><tr><td data-num="16"></td><td><pre>  summary: Get an element from a list by its index</pre></td></tr><tr><td data-num="17"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>  LINSERT key BEFORE<span class="token operator">|</span>AFTER pivot element</pre></td></tr><tr><td data-num="20"></td><td><pre>  summary: Insert an element before or after another element <span class="token keyword">in</span> a list</pre></td></tr><tr><td data-num="21"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>  LLEN key</pre></td></tr><tr><td data-num="24"></td><td><pre>  summary: Get the length of a list</pre></td></tr><tr><td data-num="25"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>  LPOP key</pre></td></tr><tr><td data-num="28"></td><td><pre>  summary: Remove and get the first element <span class="token keyword">in</span> a list</pre></td></tr><tr><td data-num="29"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>  LPOS key element <span class="token punctuation">[</span>RANK rank<span class="token punctuation">]</span> <span class="token punctuation">[</span>COUNT num-matches<span class="token punctuation">]</span> <span class="token punctuation">[</span>MAXLEN len<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="32"></td><td><pre>  summary: Return the index of matching elements on a list</pre></td></tr><tr><td data-num="33"></td><td><pre>  since: <span class="token number">6.0</span>.6</pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>  LPUSH key element <span class="token punctuation">[</span>element <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="36"></td><td><pre>  summary: Prepend one or multiple elements to a list</pre></td></tr><tr><td data-num="37"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>  LPUSHX key element <span class="token punctuation">[</span>element <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>  summary: Prepend an element to a list, only <span class="token keyword">if</span> the list exists</pre></td></tr><tr><td data-num="41"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>  LRANGE key start stop</pre></td></tr><tr><td data-num="44"></td><td><pre>  summary: Get a range of elements from a list</pre></td></tr><tr><td data-num="45"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="46"></td><td><pre></pre></td></tr><tr><td data-num="47"></td><td><pre>  LREM key count element</pre></td></tr><tr><td data-num="48"></td><td><pre>  summary: Remove elements from a list</pre></td></tr><tr><td data-num="49"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>  LSET key index element</pre></td></tr><tr><td data-num="52"></td><td><pre>  summary: Set the value of an element <span class="token keyword">in</span> a list by its index</pre></td></tr><tr><td data-num="53"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>  LTRIM key start stop</pre></td></tr><tr><td data-num="56"></td><td><pre>  summary: Trim a list to the specified range</pre></td></tr><tr><td data-num="57"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>  RPOP key</pre></td></tr><tr><td data-num="60"></td><td><pre>  summary: Remove and get the last element <span class="token keyword">in</span> a list</pre></td></tr><tr><td data-num="61"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>  RPOPLPUSH <span class="token builtin class-name">source</span> destination</pre></td></tr><tr><td data-num="64"></td><td><pre>  summary: Remove the last element <span class="token keyword">in</span> a list, prepend it to another list and <span class="token builtin class-name">return</span> it</pre></td></tr><tr><td data-num="65"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre>  RPUSH key element <span class="token punctuation">[</span>element <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="68"></td><td><pre>  summary: Append one or multiple elements to a list</pre></td></tr><tr><td data-num="69"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre>  RPUSHX key element <span class="token punctuation">[</span>element <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="72"></td><td><pre>  summary: Append an element to a list, only <span class="token keyword">if</span> the list exists</pre></td></tr><tr><td data-num="73"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr></table></figure><h4 id="lpush-lpop"><a class="anchor" href="#lpush-lpop">#</a> <strong>lpush、lpop</strong></h4><p>lpush 在列表中元素的左边追加元素，lpop 从列表的左边开始弹出元素，也就是先进后出，这和数据结构中栈（stack）的性质是一样的。当然，也可以使用 rpop 对 lpush 后的列表进行弹出，这时是先进先出，与数据结构中的队列（queue）的性质是一样的。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> lpush</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LPUSH key element <span class="token punctuation">[</span>element <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Prepend one or multiple elements to a list</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20201217224850.png" alt="image-20201217224849533"></p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpush k1 a b c d e f</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k1</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token string">"f"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k1</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token string">"e"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k1</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token string">"d"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k1</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token string">"c"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k1</pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token string">"b"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k1</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token string">"a"</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpush k1 a b c d e f</pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k1</pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token string">"a"</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k1</pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token string">"b"</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k1</pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token string">"c"</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k1</pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token string">"d"</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k1</pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token string">"e"</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k1</pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token string">"f"</span></pre></td></tr></table></figure><h4 id="rpush-rpop"><a class="anchor" href="#rpush-rpop">#</a> <strong>rpush、rpop</strong></h4><p>rpush 在列表中元素的右边追加元素，rpop 从列表的右边开始弹出元素，也就是先进后出，这和数据结构中栈（stack）的性质是一样的。当然，也可以使用 lpop 对 rpush 后的列表进行弹出，这时是先进先出，与数据结构中的队列（queue）的性质是一样的。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> rpush</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  RPUSH key element <span class="token punctuation">[</span>element <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Append one or multiple elements to a list</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20201217224835.png" alt="image-20201217224833632"></p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpush k2 a b c d e f</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k2</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token string">"f"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k2</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token string">"e"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k2</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token string">"d"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k2</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token string">"c"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k2</pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token string">"b"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpop k2</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token string">"a"</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpush k2 a b c d e f</pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k2</pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token string">"a"</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k2</pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token string">"b"</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k2</pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token string">"c"</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k2</pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token string">"d"</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k2</pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token string">"e"</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpop k2</pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token string">"f"</span></pre></td></tr></table></figure><p>以上 lpush、lpop、rpush、rpop，如果是一对同向命令操作（如 lpush 与 lpop，rpush 与 rpop），那么就相当于栈的操作；如果是一对反向命令操作（如 lpush 与 rpop，rpush 与 lpop），那么就相当于队列的操作。</p><blockquote><p>[!tip]</p><p>以下的命令的均已 l 开头，l 代表 list，这些命令的特性和数组操作类似</p></blockquote><h4 id="lrange"><a class="anchor" href="#lrange">#</a> <strong>lrange</strong></h4><p>从 list 中获取指定范围的元素。</p><p>!&gt; 注意：redis 中的正向索引从 0 开始，逆向索引从 - 1 开始。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> LRANGE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LRANGE key start stop</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get a range of elements from a list</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpush k1 a b c</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> LRANGE k1 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr></table></figure><h4 id="lindex"><a class="anchor" href="#lindex">#</a> <strong>lindex</strong></h4><p>获取 list 中指定索引的元素</p><pre><code class="language-sh">127.0.0.1:6379&gt; help LINDEX

  LINDEX key index
  summary: Get an element from a list by its index
  since: 1.0.0
  group: list

</code></pre><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> LRANGE k1 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lindex k1 <span class="token number">2</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"a"</span></pre></td></tr></table></figure><h4 id="lset"><a class="anchor" href="#lset">#</a> <strong>lset</strong></h4><p>更新 list 中指定索引的元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> LSET</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LSET key index element</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set the value of an element <span class="token keyword">in</span> a list by its index</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> LRANGE k1 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lset k1 <span class="token number">1</span> bbbb</pre></td></tr><tr><td data-num="6"></td><td><pre>OK</pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrange k1 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"bbbb"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr></table></figure><h4 id="lrem"><a class="anchor" href="#lrem">#</a> <strong>lrem</strong></h4><p>移除 list 中指定个数（指定的数字为正代表从前往后计数，为负则相反）的元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> lrem</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LREM key count element</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Remove elements from a list</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpush k3 <span class="token number">1</span> a b <span class="token number">2</span> a <span class="token number">1</span> c d a</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrange k3 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"d"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">9</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrem k3 <span class="token number">2</span> a</pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrange k3 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"d"</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr></table></figure><h4 id="linsert"><a class="anchor" href="#linsert">#</a> <strong>linsert</strong></h4><p>在 list 中指定元素（如果有重复元素，则永远取第一个元素）的前一个位置或者后一个位置插入元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> linsert</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LINSERT key BEFORE<span class="token operator">|</span>AFTER pivot element</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Insert an element before or after another element <span class="token keyword">in</span> a list</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> linsert k3 before d a</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> linsert k3 after <span class="token number">1</span> a</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrange k3 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"d"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">9</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr></table></figure><h4 id="llen"><a class="anchor" href="#llen">#</a> <strong>llen</strong></h4><p>统计 list 的长度</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> llen</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LLEN key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get the length of a list</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><figure class="highlight bash"><figcaption data-lang="bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrange k3 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"d"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"c"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"b"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">9</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> llen k3</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">9</span></pre></td></tr></table></figure><h4 id="blpop-brpop"><a class="anchor" href="#blpop-brpop">#</a> <strong>blpop、brpop</strong></h4><p>blpop 移除并返回 list 中最左边的元素（brpop 代表移除并返回 list 中最右边的元素），如果没有该元素，则进入阻塞状态，直到有元素可以弹出；timeout 为阻塞的时间，为 0 则代表一直阻塞。</p><p>命令中的 b 代表阻塞 block，l、r 分别代表左右。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> blpop</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  BLPOP key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token function">timeout</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Remove and get the first element <span class="token keyword">in</span> a list, or block <span class="token keyword">until</span> one is available</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><p>例如：开启三个终端窗口，均连接到 redis 的同一进程的统一端口 6379</p><p>第一个终端窗口：</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> flushall</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> blpop k1 <span class="token number">0</span></pre></td></tr></table></figure><p>第二个终端窗口：</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> blpop k1 <span class="token number">0</span></pre></td></tr></table></figure><p>第三个终端窗口：</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpush k1 hello</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr></table></figure><p>此时，可以看到第一个窗口不再阻塞，且输出了 k1 的值。而第二个窗口仍然在阻塞。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> blpop k1 <span class="token number">0</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"k1"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"hello"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span><span class="token number">41</span>.38s<span class="token punctuation">)</span></pre></td></tr></table></figure><p>继续在第三个终端窗口向 k1 push 值</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> rpush k1 world</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">1</span></pre></td></tr></table></figure><p>此时，第二个窗口不再阻塞，且输出了 k1 最新 push 的值</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> blpop k1 <span class="token number">0</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"k1"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"world"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span><span class="token number">42</span>.34s<span class="token punctuation">)</span></pre></td></tr></table></figure><p>所以，利用 blpop 以及 brpop 可以实现阻塞单播队列。</p><h4 id="ltrim"><a class="anchor" href="#ltrim">#</a> ltrim</h4><p>删除 list 指定范围之外的元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> ltrim</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  LTRIM key start stop</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Trim a list to the specified range</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: list</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> keys *</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>empty array<span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lpush k3 a d f g <span class="token number">1</span> vb <span class="token number">5</span> h</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">8</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ltrim k3 <span class="token number">2</span> -1</pre></td></tr><tr><td data-num="8"></td><td><pre>OK</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> lrange k3 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"vb"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"g"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"f"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"d"</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"a"</span></pre></td></tr></table></figure><h3 id="hash"><a class="anchor" href="#hash">#</a> hash</h3><p>value 为键值对的形式</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> @hash</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  HDEL key field <span class="token punctuation">[</span>field <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Delete one or <span class="token function">more</span> <span class="token builtin class-name">hash</span> fields</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>  HEXISTS key field</pre></td></tr><tr><td data-num="8"></td><td><pre>  summary: Determine <span class="token keyword">if</span> a <span class="token builtin class-name">hash</span> field exists</pre></td></tr><tr><td data-num="9"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>  HGET key field</pre></td></tr><tr><td data-num="12"></td><td><pre>  summary: Get the value of a <span class="token builtin class-name">hash</span> field</pre></td></tr><tr><td data-num="13"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>  HGETALL key</pre></td></tr><tr><td data-num="16"></td><td><pre>  summary: Get all the fields and values <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>  HINCRBY key field increment</pre></td></tr><tr><td data-num="20"></td><td><pre>  summary: Increment the integer value of a <span class="token builtin class-name">hash</span> field by the given number</pre></td></tr><tr><td data-num="21"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>  HINCRBYFLOAT key field increment</pre></td></tr><tr><td data-num="24"></td><td><pre>  summary: Increment the float value of a <span class="token builtin class-name">hash</span> field by the given amount</pre></td></tr><tr><td data-num="25"></td><td><pre>  since: <span class="token number">2.6</span>.0</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>  HKEYS key</pre></td></tr><tr><td data-num="28"></td><td><pre>  summary: Get all the fields <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="29"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>  HLEN key</pre></td></tr><tr><td data-num="32"></td><td><pre>  summary: Get the number of fields <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="33"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>  HMGET key field <span class="token punctuation">[</span>field <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="36"></td><td><pre>  summary: Get the values of all the given <span class="token builtin class-name">hash</span> fields</pre></td></tr><tr><td data-num="37"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>  HMSET key field value <span class="token punctuation">[</span>field value <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>  summary: Set multiple <span class="token builtin class-name">hash</span> fields to multiple values</pre></td></tr><tr><td data-num="41"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>  HSCAN key cursor <span class="token punctuation">[</span>MATCH pattern<span class="token punctuation">]</span> <span class="token punctuation">[</span>COUNT count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="44"></td><td><pre>  summary: Incrementally iterate <span class="token builtin class-name">hash</span> fields and associated values</pre></td></tr><tr><td data-num="45"></td><td><pre>  since: <span class="token number">2.8</span>.0</pre></td></tr><tr><td data-num="46"></td><td><pre></pre></td></tr><tr><td data-num="47"></td><td><pre>  HSET key field value <span class="token punctuation">[</span>field value <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="48"></td><td><pre>  summary: Set the string value of a <span class="token builtin class-name">hash</span> field</pre></td></tr><tr><td data-num="49"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>  HSETNX key field value</pre></td></tr><tr><td data-num="52"></td><td><pre>  summary: Set the value of a <span class="token builtin class-name">hash</span> field, only <span class="token keyword">if</span> the field does not exist</pre></td></tr><tr><td data-num="53"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>  HSTRLEN key field</pre></td></tr><tr><td data-num="56"></td><td><pre>  summary: Get the length of the value of a <span class="token builtin class-name">hash</span> field</pre></td></tr><tr><td data-num="57"></td><td><pre>  since: <span class="token number">3.2</span>.0</pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>  HVALS key</pre></td></tr><tr><td data-num="60"></td><td><pre>  summary: Get all the values <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="61"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr></table></figure><h4 id="hset"><a class="anchor" href="#hset">#</a> <strong>hset</strong></h4><p>hset 给指定 hash 的 key 设置字段 field 以及字段对应的 string 类型的值 value。hget 取到 hash 的 key 对应的字段的 value 值。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hset</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  HSET key field value <span class="token punctuation">[</span>field value <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set the string value of a <span class="token builtin class-name">hash</span> field</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="7"></td><td><pre>  </pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hget</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  HGET key field</pre></td></tr><tr><td data-num="11"></td><td><pre>  summary: Get the value of a <span class="token builtin class-name">hash</span> field</pre></td></tr><tr><td data-num="12"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="13"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hset k1 name tom age <span class="token number">15</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hget k1 name</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"tom"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hget k1 age</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"15"</span></pre></td></tr></table></figure><p><strong>hmset、hmget</strong></p><p>hmset 给指定的 hash 的 key 设置多个字段以及字段对应的值。</p><p>hmget 取出指定的 hash 的 key 的多个字段对应的值。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hmset</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  HMSET key field value <span class="token punctuation">[</span>field value <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Set multiple <span class="token builtin class-name">hash</span> fields to multiple values</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hmget</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  HMGET key field <span class="token punctuation">[</span>field <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  summary: Get the values of all the given <span class="token builtin class-name">hash</span> fields</pre></td></tr><tr><td data-num="12"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="13"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hmset k2 name jack age <span class="token number">22</span> address shanghai</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hmget k2 name age address</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"22"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"shanghai"</span></pre></td></tr></table></figure><p><strong>#### hkeys、hvals</strong></p><p>hkeys 取出指定 hash 的 key 所包含的所有字段。hvals 取出指定的 hash 的 key 所包含的所有字段对应的所有 value 值。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hkeys</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  HKEYS key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get all the fields <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hvals</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  HVALS key</pre></td></tr><tr><td data-num="11"></td><td><pre>  summary: Get all the values <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="13"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hkeys k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"name"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"age"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"address"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hvalues k2</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>error<span class="token punctuation">)</span> ERR unknown <span class="token builtin class-name">command</span> <span class="token variable"><span class="token variable">`</span>hvalues<span class="token variable">`</span></span>, with args beginning with: <span class="token variable"><span class="token variable">`</span>k2<span class="token variable">`</span></span>, </pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hvals k2</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"22"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"shanghai"</span></pre></td></tr></table></figure><h4 id="hgetall"><a class="anchor" href="#hgetall">#</a> <strong>hgetall</strong></h4><p>取出指定的 hash 的 key 包含的所有键值对</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hgetall</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  HGETALL key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get all the fields and values <span class="token keyword">in</span> a <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hgetall k2</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"name"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"age"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"22"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"address"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"shanghai"</span></pre></td></tr></table></figure><h4 id="hincrby-hincrbyfloat"><a class="anchor" href="#hincrby-hincrbyfloat">#</a> hincrby、hincrbyfloat</h4><p>hincrby 给指定的 hash 的 key 的字段的 value 值（value 必须为整数）加一个指定的整数。hincrbyfloat 给指定的 hash 的 key 的字段的 value 值加一个指定的 float 数。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hincrby</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  HINCRBY key field increment</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Increment the integer value of a <span class="token builtin class-name">hash</span> field by the given number</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> hincrbyfloat</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  HINCRBYFLOAT key field increment</pre></td></tr><tr><td data-num="11"></td><td><pre>  summary: Increment the float value of a <span class="token builtin class-name">hash</span> field by the given amount</pre></td></tr><tr><td data-num="12"></td><td><pre>  since: <span class="token number">2.6</span>.0</pre></td></tr><tr><td data-num="13"></td><td><pre>  group: <span class="token builtin class-name">hash</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hincrby k2 age <span class="token number">1</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">23</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hget k2 age</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token string">"23"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hincrbyfloat k2 age <span class="token number">1.5</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token string">"24.5"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hget k2 age</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token string">"24.5"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hincrbyfloat k2 age -1</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token string">"23.5"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> hget k2 age</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token string">"23.5"</span></pre></td></tr></table></figure><h3 id="set"><a class="anchor" href="#set">#</a> set</h3><p>set 是无序（不维护元素插入的顺序，随着元素的插入，元素的存储顺序也在变化，且是随机的、去重的）不可重复的。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> @set</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SADD key member <span class="token punctuation">[</span>member <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Add one or <span class="token function">more</span> members to a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>  SCARD key</pre></td></tr><tr><td data-num="8"></td><td><pre>  summary: Get the number of members <span class="token keyword">in</span> a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="9"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>  SDIFF key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  summary: Subtract multiple sets</pre></td></tr><tr><td data-num="13"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>  SDIFFSTORE destination key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="16"></td><td><pre>  summary: Subtract multiple sets and store the resulting <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a key</pre></td></tr><tr><td data-num="17"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>  SINTER key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="20"></td><td><pre>  summary: Intersect multiple sets</pre></td></tr><tr><td data-num="21"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>  SINTERSTORE destination key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="24"></td><td><pre>  summary: Intersect multiple sets and store the resulting <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a key</pre></td></tr><tr><td data-num="25"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>  SISMEMBER key member</pre></td></tr><tr><td data-num="28"></td><td><pre>  summary: Determine <span class="token keyword">if</span> a given value is a member of a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="29"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>  SMEMBERS key</pre></td></tr><tr><td data-num="32"></td><td><pre>  summary: Get all the members <span class="token keyword">in</span> a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="33"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>  SMOVE <span class="token builtin class-name">source</span> destination member</pre></td></tr><tr><td data-num="36"></td><td><pre>  summary: Move a member from one <span class="token builtin class-name">set</span> to another</pre></td></tr><tr><td data-num="37"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>  SPOP key <span class="token punctuation">[</span>count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>  summary: Remove and <span class="token builtin class-name">return</span> one or multiple random members from a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="41"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>  SRANDMEMBER key <span class="token punctuation">[</span>count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="44"></td><td><pre>  summary: Get one or multiple random members from a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="45"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="46"></td><td><pre></pre></td></tr><tr><td data-num="47"></td><td><pre>  SREM key member <span class="token punctuation">[</span>member <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="48"></td><td><pre>  summary: Remove one or <span class="token function">more</span> members from a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="49"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>  SSCAN key cursor <span class="token punctuation">[</span>MATCH pattern<span class="token punctuation">]</span> <span class="token punctuation">[</span>COUNT count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="52"></td><td><pre>  summary: Incrementally iterate Set elements</pre></td></tr><tr><td data-num="53"></td><td><pre>  since: <span class="token number">2.8</span>.0</pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>  SUNION key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="56"></td><td><pre>  summary: Add multiple sets</pre></td></tr><tr><td data-num="57"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>  SUNIONSTORE destination key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="60"></td><td><pre>  summary: Add multiple sets and store the resulting <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a key</pre></td></tr><tr><td data-num="61"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr></table></figure><h4 id="sadd"><a class="anchor" href="#sadd">#</a> <strong>sadd</strong></h4><p>sadd 给指定 key 的 set 集合添加一个或多个元素，并自动去重</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> sadd</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SADD key member <span class="token punctuation">[</span>member <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Add one or <span class="token function">more</span> members to a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sadd k1 tom peter sean</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr></table></figure><h4 id="smembers"><a class="anchor" href="#smembers">#</a> <strong>smembers</strong></h4><p>获取指定 set 集合中的所有元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SMEMBERS</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SMEMBERS key</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get all the members <span class="token keyword">in</span> a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> smembers k1</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"peter"</span></pre></td></tr></table></figure><h4 id="srem"><a class="anchor" href="#srem">#</a> <strong>srem</strong></h4><p>移除 set 集合中指定的一个或多个元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> srem k1 tom sean</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> smembers k1</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"peter"</span></pre></td></tr></table></figure><h4 id="sinter"><a class="anchor" href="#sinter">#</a> <strong>sinter</strong></h4><p>取两个 set 集合的交集</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SINTER</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SINTER key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Intersect multiple sets</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sadd k2 <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sadd k3 <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sinter k2 k3</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"3"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"4"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr></table></figure><h4 id="sinterstore"><a class="anchor" href="#sinterstore">#</a> <strong>sinterstore</strong></h4><p>取两个 set 集合的交集并存放到新的 set 集合中去</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SINTERSTORE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SINTERSTORE destination key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Intersect multiple sets and store the resulting <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SINTERSTORE newset k2 k3</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> smembers newset</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"3"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"4"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr></table></figure><h4 id="sunion"><a class="anchor" href="#sunion">#</a> <strong>sunion</strong></h4><p>取两个 set 集合的并集</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SUNION</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SUNION key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Add multiple sets</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sunion k2 k3</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"3"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"4"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"6"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"7"</span></pre></td></tr></table></figure><h4 id="sunionstore"><a class="anchor" href="#sunionstore">#</a> <strong>sunionstore</strong></h4><p>取两个集合的并集并存放到新的 set 集合中去</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SUNIONSTORE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SUNIONSTORE destination key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Add multiple sets and store the resulting <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sunionstore newset k2 k3</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">7</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> smembers newset</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"3"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"4"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"6"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"7"</span></pre></td></tr></table></figure><h4 id="sdiff"><a class="anchor" href="#sdiff">#</a> <strong>sdiff</strong></h4><p>取两个集合的差集。注意分为左差集和右差集。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> SDIFF</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SDIFF key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Subtract multiple sets</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token function">sdiff</span> k2 k3</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"1"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"2"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token function">sdiff</span> k3 k2</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"6"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"7"</span></pre></td></tr></table></figure><h4 id="srandmember"><a class="anchor" href="#srandmember">#</a> <strong>srandmember</strong></h4><p>随机事件，随机取出 set 集合中的给定数量（数量为正则取出一个去重的结果集，但不超过原有集合；为负则取出一个带有重复元素的结果集，保证取出的元素个数是给定的个数；为 0 则不返回结果集）的元素。</p><p>应用场景：抽奖</p><p>抽奖一：假设有 6 个人，现在有 3 个奖品，且每个人不能重复中将。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sadd k1 tom jack jerry peter sean trump</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SMEMBERS k1</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"peter"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"trump"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SRANDMEMBER k1 <span class="token number">3</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr></table></figure><p>抽奖二：假设有 6 个人，现在有 10 个奖品，且每个人可以重复中奖。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sadd k1 tom jack jerry peter sean trump</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SMEMBERS k1</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"peter"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"trump"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SRANDMEMBER k1 -10</pre></td></tr><tr><td data-num="13"></td><td><pre> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"peter"</span></pre></td></tr><tr><td data-num="14"></td><td><pre> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="15"></td><td><pre> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"trump"</span></pre></td></tr><tr><td data-num="16"></td><td><pre> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="17"></td><td><pre> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"trump"</span></pre></td></tr><tr><td data-num="18"></td><td><pre> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="19"></td><td><pre> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr><tr><td data-num="20"></td><td><pre> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"trump"</span></pre></td></tr><tr><td data-num="21"></td><td><pre> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token number">10</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr></table></figure><h4 id="spop"><a class="anchor" href="#spop">#</a> spop</h4><p>随机删除并返回 set 集合中的一个或多个元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> spop</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  SPOP key <span class="token punctuation">[</span>count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Remove and <span class="token builtin class-name">return</span> one or multiple random members from a <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: <span class="token builtin class-name">set</span></pre></td></tr></table></figure><p>应用场景：抽奖</p><p>假如有 6 个人，有两个大奖随机抽两个人，且参与过的人不能再参与抽奖</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> sadd k1 tom jack jerry peter sean trump</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">6</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> spop k1 <span class="token number">2</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"peter"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"jerry"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> SMEMBERS k1</pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"trump"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr></table></figure><h3 id="sorted_set"><a class="anchor" href="#sorted_set">#</a> <strong>sorted_set</strong></h3><p>在 set 的基础上对 set 集合进行排序（不是元素插入的顺序）。物理内存左小右大，不随命令的改变而改变。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> @sorted_set</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  BZPOPMAX key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token function">timeout</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Remove and <span class="token builtin class-name">return</span> the member with the highest score from one or <span class="token function">more</span> sorted sets, or block <span class="token keyword">until</span> one is available</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">5.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre>  BZPOPMIN key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token function">timeout</span></pre></td></tr><tr><td data-num="8"></td><td><pre>  summary: Remove and <span class="token builtin class-name">return</span> the member with the lowest score from one or <span class="token function">more</span> sorted sets, or block <span class="token keyword">until</span> one is available</pre></td></tr><tr><td data-num="9"></td><td><pre>  since: <span class="token number">5.0</span>.0</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>  ZADD key <span class="token punctuation">[</span>NX<span class="token operator">|</span>XX<span class="token punctuation">]</span> <span class="token punctuation">[</span>CH<span class="token punctuation">]</span> <span class="token punctuation">[</span>INCR<span class="token punctuation">]</span> score member <span class="token punctuation">[</span>score member <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="12"></td><td><pre>  summary: Add one or <span class="token function">more</span> members to a sorted set, or update its score <span class="token keyword">if</span> it already exists</pre></td></tr><tr><td data-num="13"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>  ZCARD key</pre></td></tr><tr><td data-num="16"></td><td><pre>  summary: Get the number of members <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="17"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>  ZCOUNT key min max</pre></td></tr><tr><td data-num="20"></td><td><pre>  summary: Count the members <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span> with scores within the given values</pre></td></tr><tr><td data-num="21"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>  ZINCRBY key increment member</pre></td></tr><tr><td data-num="24"></td><td><pre>  summary: Increment the score of a member <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="25"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre>  ZINTERSTORE destination numkeys key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>WEIGHTS weight<span class="token punctuation">]</span> <span class="token punctuation">[</span>AGGREGATE SUM<span class="token operator">|</span>MIN<span class="token operator">|</span>MAX<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="28"></td><td><pre>  summary: Intersect multiple sorted sets and store the resulting sorted <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a new key</pre></td></tr><tr><td data-num="29"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>  ZLEXCOUNT key min max</pre></td></tr><tr><td data-num="32"></td><td><pre>  summary: Count the number of members <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span> between a given lexicographical range</pre></td></tr><tr><td data-num="33"></td><td><pre>  since: <span class="token number">2.8</span>.9</pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>  ZPOPMAX key <span class="token punctuation">[</span>count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="36"></td><td><pre>  summary: Remove and <span class="token builtin class-name">return</span> members with the highest scores <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="37"></td><td><pre>  since: <span class="token number">5.0</span>.0</pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>  ZPOPMIN key <span class="token punctuation">[</span>count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="40"></td><td><pre>  summary: Remove and <span class="token builtin class-name">return</span> members with the lowest scores <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="41"></td><td><pre>  since: <span class="token number">5.0</span>.0</pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>  ZRANGE key start stop <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="44"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by index</pre></td></tr><tr><td data-num="45"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="46"></td><td><pre></pre></td></tr><tr><td data-num="47"></td><td><pre>  ZRANGEBYLEX key min max <span class="token punctuation">[</span>LIMIT offset count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="48"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by lexicographical range</pre></td></tr><tr><td data-num="49"></td><td><pre>  since: <span class="token number">2.8</span>.9</pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>  ZRANGEBYSCORE key min max <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span> <span class="token punctuation">[</span>LIMIT offset count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="52"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by score</pre></td></tr><tr><td data-num="53"></td><td><pre>  since: <span class="token number">1.0</span>.5</pre></td></tr><tr><td data-num="54"></td><td><pre></pre></td></tr><tr><td data-num="55"></td><td><pre>  ZRANK key member</pre></td></tr><tr><td data-num="56"></td><td><pre>  summary: Determine the index of a member <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="57"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="58"></td><td><pre></pre></td></tr><tr><td data-num="59"></td><td><pre>  ZREM key member <span class="token punctuation">[</span>member <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="60"></td><td><pre>  summary: Remove one or <span class="token function">more</span> members from a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="61"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="62"></td><td><pre></pre></td></tr><tr><td data-num="63"></td><td><pre>  ZREMRANGEBYLEX key min max</pre></td></tr><tr><td data-num="64"></td><td><pre>  summary: Remove all members <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span> between the given lexicographical range</pre></td></tr><tr><td data-num="65"></td><td><pre>  since: <span class="token number">2.8</span>.9</pre></td></tr><tr><td data-num="66"></td><td><pre></pre></td></tr><tr><td data-num="67"></td><td><pre>  ZREMRANGEBYRANK key start stop</pre></td></tr><tr><td data-num="68"></td><td><pre>  summary: Remove all members <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span> within the given indexes</pre></td></tr><tr><td data-num="69"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre>  ZREMRANGEBYSCORE key min max</pre></td></tr><tr><td data-num="72"></td><td><pre>  summary: Remove all members <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span> within the given scores</pre></td></tr><tr><td data-num="73"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="74"></td><td><pre></pre></td></tr><tr><td data-num="75"></td><td><pre>  ZREVRANGE key start stop <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="76"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by index, with scores ordered from high to low</pre></td></tr><tr><td data-num="77"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="78"></td><td><pre></pre></td></tr><tr><td data-num="79"></td><td><pre>  ZREVRANGEBYLEX key max min <span class="token punctuation">[</span>LIMIT offset count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="80"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by lexicographical range, ordered from higher to lower strings.</pre></td></tr><tr><td data-num="81"></td><td><pre>  since: <span class="token number">2.8</span>.9</pre></td></tr><tr><td data-num="82"></td><td><pre></pre></td></tr><tr><td data-num="83"></td><td><pre>  ZREVRANGEBYSCORE key max min <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span> <span class="token punctuation">[</span>LIMIT offset count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="84"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by score, with scores ordered from high to low</pre></td></tr><tr><td data-num="85"></td><td><pre>  since: <span class="token number">2.2</span>.0</pre></td></tr><tr><td data-num="86"></td><td><pre></pre></td></tr><tr><td data-num="87"></td><td><pre>  ZREVRANK key member</pre></td></tr><tr><td data-num="88"></td><td><pre>  summary: Determine the index of a member <span class="token keyword">in</span> a sorted set, with scores ordered from high to low</pre></td></tr><tr><td data-num="89"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="90"></td><td><pre></pre></td></tr><tr><td data-num="91"></td><td><pre>  ZSCAN key cursor <span class="token punctuation">[</span>MATCH pattern<span class="token punctuation">]</span> <span class="token punctuation">[</span>COUNT count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="92"></td><td><pre>  summary: Incrementally iterate sorted sets elements and associated scores</pre></td></tr><tr><td data-num="93"></td><td><pre>  since: <span class="token number">2.8</span>.0</pre></td></tr><tr><td data-num="94"></td><td><pre></pre></td></tr><tr><td data-num="95"></td><td><pre>  ZSCORE key member</pre></td></tr><tr><td data-num="96"></td><td><pre>  summary: Get the score associated with the given member <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="97"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="98"></td><td><pre></pre></td></tr><tr><td data-num="99"></td><td><pre>  ZUNIONSTORE destination numkeys key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>WEIGHTS weight<span class="token punctuation">]</span> <span class="token punctuation">[</span>AGGREGATE SUM<span class="token operator">|</span>MIN<span class="token operator">|</span>MAX<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="100"></td><td><pre>  summary: Add multiple sorted sets and store the resulting sorted <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a new key</pre></td></tr><tr><td data-num="101"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr></table></figure><h4 id="zadd-zrange"><a class="anchor" href="#zadd-zrange">#</a> <strong>zadd、zrange</strong></h4><p>给 sorted_set 添加一个或多个指定分值（分值代表集合自动排序的依据，从小到大排序）的元素，如果元素已经存在，则进行更新。</p><p>zrange 取出 sorted_set 中指定索引范围的元素，该元素默认按照分值由小到大排列。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> zadd</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZADD key <span class="token punctuation">[</span>NX<span class="token operator">|</span>XX<span class="token punctuation">]</span> <span class="token punctuation">[</span>CH<span class="token punctuation">]</span> <span class="token punctuation">[</span>INCR<span class="token punctuation">]</span> score member <span class="token punctuation">[</span>score member <span class="token punctuation">..</span>.<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Add one or <span class="token function">more</span> members to a sorted set, or update its score <span class="token keyword">if</span> it already exists</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_set</pre></td></tr><tr><td data-num="7"></td><td><pre>  </pre></td></tr><tr><td data-num="8"></td><td><pre>  <span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> ZRANGE</pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre>  ZRANGE key start stop <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="11"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by index</pre></td></tr><tr><td data-num="12"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="13"></td><td><pre>  group: sorted_set</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> zadd k1 <span class="token number">8</span> apple <span class="token number">3</span> banana <span class="token number">5</span> orange</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGE k1 <span class="token number">0</span> -1</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"banana"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"orange"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"apple"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGE k1 <span class="token number">0</span> -1 withscores</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"banana"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"3"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"orange"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"apple"</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"8"</span></pre></td></tr></table></figure><h4 id="zrangebyscore"><a class="anchor" href="#zrangebyscore">#</a> <strong>zrangebyscore</strong></h4><p>通过分支获取相应元素</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> ZRANGEBYSCORE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZRANGEBYSCORE key min max <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span> <span class="token punctuation">[</span>LIMIT offset count<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by score</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.0</span>.5</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_set</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGEBYSCORE k1 <span class="token number">3</span> <span class="token number">5</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"banana"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"orange"</span></pre></td></tr></table></figure><h4 id="zrevrange"><a class="anchor" href="#zrevrange">#</a> <strong>zrevrange</strong></h4><p>取出 sorted_set 集合中指定索引的元素，该元素是按照分值从大到小排列的</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> ZREVRANGE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZREVRANGE key start stop <span class="token punctuation">[</span>WITHSCORES<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Return a range of members <span class="token keyword">in</span> a sorted set, by index, with scores ordered from high to low</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_set</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZREVRANGE k1 <span class="token number">0</span> <span class="token number">1</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"apple"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"orange"</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZREVRANGE k1 <span class="token number">0</span> <span class="token number">1</span> withscores</pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"apple"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"8"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"orange"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr></table></figure><h4 id="zscore"><a class="anchor" href="#zscore">#</a> <strong>zscore</strong></h4><p>查找 sorted_set 集合中指定元素的分值</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> zscore</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZSCORE key member</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Get the score associated with the given member <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_set</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> zscore k1 apple</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"8"</span></pre></td></tr></table></figure><h4 id="zrank"><a class="anchor" href="#zrank">#</a> <strong>zrank</strong></h4><p>查找 sorted_set 集合中指定元素的索引下标</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> zrank</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZRANK key member</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Determine the index of a member <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_set</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> zrank k1 apple</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">2</span></pre></td></tr></table></figure><h4 id="zincrby"><a class="anchor" href="#zincrby">#</a> <strong>zincrby</strong></h4><p>在原有元素分值的基础上进行分值的加减，之后将自动排序元素。</p><p>应用场景：比如歌曲排行榜</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> ZINCRBY</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZINCRBY key increment member</pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Increment the score of a member <span class="token keyword">in</span> a sorted <span class="token builtin class-name">set</span></pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">1.2</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_setshell</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZINCRBY k1 <span class="token number">3.2</span> banana</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token string">"6.2000000000000002"</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGE k1 <span class="token number">0</span> -1 withscores</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"orange"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"5"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"banana"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"6.2000000000000002"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"apple"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"8"</span></pre></td></tr></table></figure><h4 id="zunionstore"><a class="anchor" href="#zunionstore">#</a> <strong>zunionstore</strong></h4><p>取多个集合的并集并把结果集合存储到新的 key；</p><p>numkeys 代表 key 的个数，weights 代表权重（例如权重为 0.5，则需要将元素的分值乘以 0.5），aggregate 代表聚合运算，默认取 sum 求和。</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token builtin class-name">help</span> ZUNIONSTORE</pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre>  ZUNIONSTORE destination numkeys key <span class="token punctuation">[</span>key <span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>WEIGHTS weight<span class="token punctuation">]</span> <span class="token punctuation">[</span>AGGREGATE SUM<span class="token operator">|</span>MIN<span class="token operator">|</span>MAX<span class="token punctuation">]</span></pre></td></tr><tr><td data-num="4"></td><td><pre>  summary: Add multiple sorted sets and store the resulting sorted <span class="token builtin class-name">set</span> <span class="token keyword">in</span> a new key</pre></td></tr><tr><td data-num="5"></td><td><pre>  since: <span class="token number">2.0</span>.0</pre></td></tr><tr><td data-num="6"></td><td><pre>  group: sorted_set</pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> FLUSHALL</pre></td></tr><tr><td data-num="2"></td><td><pre>OK</pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> zadd k1 <span class="token number">80</span> tom <span class="token number">60</span> sean <span class="token number">70</span> baby</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> zadd k2 <span class="token number">60</span> tom <span class="token number">100</span> sean <span class="token number">40</span> jack</pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">3</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZUNIONSTORE newkey <span class="token number">2</span> k1 k2</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGE newkey <span class="token number">0</span> -1 withscores</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"40"</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"baby"</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"70"</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"140"</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"160"</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZUNIONSTORE newkey1 <span class="token number">2</span> k1 k2 weights <span class="token number">1</span> <span class="token number">0.5</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGE newkey1 <span class="token number">0</span> -1 withscores</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"20"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"baby"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"70"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"110"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"110"</span></pre></td></tr></table></figure><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZUNIONSTORE newkey2 <span class="token number">2</span> k1 k2 weights <span class="token number">1</span> <span class="token number">0.5</span> aggregate max</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token punctuation">(</span>integer<span class="token punctuation">)</span> <span class="token number">4</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> ZRANGE newkey2 <span class="token number">0</span> -1 withscores</pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"jack"</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"20"</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"sean"</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"60"</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"baby"</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token number">6</span><span class="token punctuation">)</span> <span class="token string">"70"</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token number">7</span><span class="token punctuation">)</span> <span class="token string">"tom"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token number">8</span><span class="token punctuation">)</span> <span class="token string">"80"</span></pre></td></tr></table></figure><h4 id="底层排序实现"><a class="anchor" href="#底层排序实现">#</a> 底层排序实现</h4><p>sorted_set 底层排序采用了 skip list（跳跃表）。跳跃表由很多层组成，每个元素插入时随机造层，牺牲空间来换取查询速度。</p><div class="tags"><a href="/tags/Java/" rel="tag"><i class="ic i-tag"></i> Java</a> <a href="/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/" rel="tag"><i class="ic i-tag"></i> 数据库</a> <a href="/tags/IO/" rel="tag"><i class="ic i-tag"></i> IO</a> <a href="/tags/Redis/" rel="tag"><i class="ic i-tag"></i> Redis</a> <a href="/tags/%E7%BC%93%E5%AD%98/" rel="tag"><i class="ic i-tag"></i> 缓存</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i> </span><span class="text">更新于</span> <time title="修改时间：2021-12-24 11:12:14" itemprop="dateModified" datetime="2021-12-24T11:12:14+08:00">2021-12-24</time></span></div><div class="reward"><button><i class="ic i-heartbeat"></i> 赞赏</button><p>请我喝[茶]~(￣▽￣)~*</p><div id="qr"><div><img data-src="/images/wechatpay.png" alt="fanfanfan 微信支付"><p>微信支付</p></div><div><img data-src="/images/alipay.png" alt="fanfanfan 支付宝"><p>支付宝</p></div><div><img data-src="/images/paypal.png" alt="fanfanfan paypal"><p>paypal</p></div></div></div><div id="copyright"><ul><li class="author"><strong>本文作者： </strong>fanfanfan <i class="ic i-at"><em>@</em></i></li><li class="link"><strong>本文链接：</strong> <a href="https://baiyezi.vip/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" title="redis的数据类型">https://baiyezi.vip/redis的数据类型</a></li><li class="license"><strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/java-%E6%97%A5%E5%BF%97%E4%BD%93%E7%B3%BB" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;bfanfanfan&#x2F;img&#x2F;raw&#x2F;master&#x2F;guzhuang&#x2F;20211225105423.jpg" title="java-日志体系"><span class="type">上一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>java-日志体系</h3></a></div><div class="item right"><a href="/redis%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;bfanfanfan&#x2F;img&#x2F;raw&#x2F;master&#x2F;guzhuang&#x2F;20211225105008.png" title="redis进阶使用"><span class="type">下一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>redis进阶使用</h3></a></div></div><div class="wrap" id="comments"></div></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目录"><ol class="toc"><li class="toc-item toc-level-2"><a class="toc-link" href="#%E7%AE%80%E5%8D%95%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8"><span class="toc-number">1.</span> <span class="toc-text">简单命令使用</span></a></li><li class="toc-item toc-level-2"><a class="toc-link" href="#redis%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"><span class="toc-number">2.</span> <span class="toc-text">redis 数据类型</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#string"><span class="toc-number">2.1.</span> <span class="toc-text">String</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#set-get"><span class="toc-number">2.1.1.</span> <span class="toc-text">set、get</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#mset-mget"><span class="toc-number">2.1.2.</span> <span class="toc-text">mset、mget</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#append"><span class="toc-number">2.1.3.</span> <span class="toc-text">append</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#getrange"><span class="toc-number">2.1.4.</span> <span class="toc-text">getrange</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#setrange"><span class="toc-number">2.1.5.</span> <span class="toc-text">setrange</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#strlen"><span class="toc-number">2.1.6.</span> <span class="toc-text">strlen</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#object"><span class="toc-number">2.1.7.</span> <span class="toc-text">object</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%95%B0%E5%80%BC%E7%B1%BB%E5%9E%8B"><span class="toc-number">2.1.8.</span> <span class="toc-text">数值类型</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E5%85%A8"><span class="toc-number">2.1.9.</span> <span class="toc-text">二进制安全</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#getset"><span class="toc-number">2.1.10.</span> <span class="toc-text">getset</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#msetnx"><span class="toc-number">2.1.11.</span> <span class="toc-text">msetnx</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#bitmap"><span class="toc-number">2.2.</span> <span class="toc-text">bitmap</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#setbit"><span class="toc-number">2.2.1.</span> <span class="toc-text">setbit</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#bitpos"><span class="toc-number">2.2.2.</span> <span class="toc-text">bitpos</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#bitcount"><span class="toc-number">2.2.3.</span> <span class="toc-text">bitcount</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#bitop"><span class="toc-number">2.2.4.</span> <span class="toc-text">bitop</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"><span class="toc-number">2.2.5.</span> <span class="toc-text">应用场景</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#list"><span class="toc-number">2.3.</span> <span class="toc-text">list</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#lpush-lpop"><span class="toc-number">2.3.1.</span> <span class="toc-text">lpush、lpop</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#rpush-rpop"><span class="toc-number">2.3.2.</span> <span class="toc-text">rpush、rpop</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#lrange"><span class="toc-number">2.3.3.</span> <span class="toc-text">lrange</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#lindex"><span class="toc-number">2.3.4.</span> <span class="toc-text">lindex</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#lset"><span class="toc-number">2.3.5.</span> <span class="toc-text">lset</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#lrem"><span class="toc-number">2.3.6.</span> <span class="toc-text">lrem</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#linsert"><span class="toc-number">2.3.7.</span> <span class="toc-text">linsert</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#llen"><span class="toc-number">2.3.8.</span> <span class="toc-text">llen</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#blpop-brpop"><span class="toc-number">2.3.9.</span> <span class="toc-text">blpop、brpop</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#ltrim"><span class="toc-number">2.3.10.</span> <span class="toc-text">ltrim</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#hash"><span class="toc-number">2.4.</span> <span class="toc-text">hash</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#hset"><span class="toc-number">2.4.1.</span> <span class="toc-text">hset</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#hgetall"><span class="toc-number">2.4.2.</span> <span class="toc-text">hgetall</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#hincrby-hincrbyfloat"><span class="toc-number">2.4.3.</span> <span class="toc-text">hincrby、hincrbyfloat</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#set"><span class="toc-number">2.5.</span> <span class="toc-text">set</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#sadd"><span class="toc-number">2.5.1.</span> <span class="toc-text">sadd</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#smembers"><span class="toc-number">2.5.2.</span> <span class="toc-text">smembers</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#srem"><span class="toc-number">2.5.3.</span> <span class="toc-text">srem</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#sinter"><span class="toc-number">2.5.4.</span> <span class="toc-text">sinter</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#sinterstore"><span class="toc-number">2.5.5.</span> <span class="toc-text">sinterstore</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#sunion"><span class="toc-number">2.5.6.</span> <span class="toc-text">sunion</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#sunionstore"><span class="toc-number">2.5.7.</span> <span class="toc-text">sunionstore</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#sdiff"><span class="toc-number">2.5.8.</span> <span class="toc-text">sdiff</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#srandmember"><span class="toc-number">2.5.9.</span> <span class="toc-text">srandmember</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#spop"><span class="toc-number">2.5.10.</span> <span class="toc-text">spop</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#sorted_set"><span class="toc-number">2.6.</span> <span class="toc-text">sorted_set</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#zadd-zrange"><span class="toc-number">2.6.1.</span> <span class="toc-text">zadd、zrange</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#zrangebyscore"><span class="toc-number">2.6.2.</span> <span class="toc-text">zrangebyscore</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#zrevrange"><span class="toc-number">2.6.3.</span> <span class="toc-text">zrevrange</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#zscore"><span class="toc-number">2.6.4.</span> <span class="toc-text">zscore</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#zrank"><span class="toc-number">2.6.5.</span> <span class="toc-text">zrank</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#zincrby"><span class="toc-number">2.6.6.</span> <span class="toc-text">zincrby</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#zunionstore"><span class="toc-number">2.6.7.</span> <span class="toc-text">zunionstore</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%BA%95%E5%B1%82%E6%8E%92%E5%BA%8F%E5%AE%9E%E7%8E%B0"><span class="toc-number">2.6.8.</span> <span class="toc-text">底层排序实现</span></a></li></ol></li></ol></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li><a href="/Linux%E4%B8%8B%E5%AE%89%E8%A3%85MySQL" rel="bookmark" title="Linux下安装MySQL">Linux下安装MySQL</a></li><li><a href="/MySQL%E5%9F%BA%E7%A1%80" rel="bookmark" title="MySQL基础">MySQL基础</a></li><li><a href="/IOC%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="IOC配置方式（一）">IOC配置方式（一）</a></li><li><a href="/IOC%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="IOC配置方式（二）">IOC配置方式（二）</a></li><li><a href="/IOC%E6%B3%A8%E8%A7%A3%E6%96%B9%E5%BC%8F" rel="bookmark" title="IOC注解方式">IOC注解方式</a></li><li><a href="/AOP" rel="bookmark" title="AOP">AOP</a></li><li><a href="/SpringBoot%E5%85%A5%E9%97%A8" rel="bookmark" title="SpringBoot入门">SpringBoot入门</a></li><li><a href="/SpringBoot-Web%E5%BC%80%E5%8F%91" rel="bookmark" title="SpringBoot-Web开发">SpringBoot-Web开发</a></li><li><a href="/SpringBoot%E8%87%AA%E5%8A%A8%E8%A3%85%E9%85%8D%E5%8E%9F%E7%90%86" rel="bookmark" title="SpringBoot自动装配原理">SpringBoot自动装配原理</a></li><li><a href="/zookeeper%E6%90%AD%E5%BB%BA%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" rel="bookmark" title="zookeeper搭建及基本概念">zookeeper搭建及基本概念</a></li><li><a href="/zookeeper%E5%8E%9F%E7%90%86" rel="bookmark" title="zookeeper原理">zookeeper原理</a></li><li><a href="/zookeeper%E6%A1%88%E4%BE%8B" rel="bookmark" title="zookeeper案例">zookeeper案例</a></li><li><a href="/MySQL%E8%B0%83%E4%BC%98%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="MySQL调优（一）">MySQL调优（一）</a></li><li><a href="/redis%E5%AE%89%E8%A3%85%E5%8F%8ANIO%E5%8E%9F%E7%90%86" rel="bookmark" title="redis安装及NIO原理">redis安装及NIO原理</a></li><li><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="SpringMVC入门（一）">SpringMVC入门（一）</a></li><li><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="SpringMVC入门（二）">SpringMVC入门（二）</a></li><li><a href="/SpringMVC-REST%E9%A3%8E%E6%A0%BC" rel="bookmark" title="SpringMVC-REST风格">SpringMVC-REST风格</a></li><li><a href="/SpringMVC%E8%BF%9B%E9%98%B6" rel="bookmark" title="SpringMVC进阶">SpringMVC进阶</a></li><li><a href="/SpringMVC%E6%BA%90%E7%A0%81%E6%80%BB%E7%BB%93" rel="bookmark" title="SpringMVC源码总结">SpringMVC源码总结</a></li><li><a href="/shiro%E5%85%A5%E9%97%A8" rel="bookmark" title="shiro入门">shiro入门</a></li><li><a href="/shiro%E6%95%B4%E5%90%88SpringBoot" rel="bookmark" title="shiro整合SpringBoot">shiro整合SpringBoot</a></li><li><a href="/shiro%E7%9A%84session%E7%AE%A1%E7%90%86" rel="bookmark" title="shiro的session管理">shiro的session管理</a></li><li><a href="/shiro%E7%9A%84%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F%E7%99%BB%E5%BD%95" rel="bookmark" title="shiro的缓存机制与分布式登录">shiro的缓存机制与分布式登录</a></li><li><a href="/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95" rel="bookmark" title="单点登录">单点登录</a></li><li><a href="/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" rel="bookmark" title="线程基础知识">线程基础知识</a></li><li><a href="/%E5%AE%B9%E5%99%A8%E4%B8%8E%E7%BA%BF%E7%A8%8B%E6%B1%A0" rel="bookmark" title="容器与线程池">容器与线程池</a></li><li><a href="/Win10%E5%AE%89%E8%A3%85docker" rel="bookmark" title="Win10安装docker">Win10安装docker</a></li><li><a href="/Win10%E5%AE%89%E8%A3%85docker" rel="bookmark" title="Win10安装docker">Win10安装docker</a></li><li><a href="/JMH" rel="bookmark" title="JMH">JMH</a></li><li><a href="/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B" rel="bookmark" title="并发编程">并发编程</a></li><li><a href="/java-%E6%97%A5%E5%BF%97%E4%BD%93%E7%B3%BB" rel="bookmark" title="java-日志体系">java-日志体系</a></li><li class="active"><a href="/redis%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="bookmark" title="redis的数据类型">redis的数据类型</a></li><li><a href="/redis%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8" rel="bookmark" title="redis进阶使用">redis进阶使用</a></li><li><a href="/redis%E7%9A%84%E9%9B%86%E7%BE%A4" rel="bookmark" title="redis的集群">redis的集群</a></li><li><a href="/redis%E5%9C%A8%E5%BC%80%E5%8F%91%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8" rel="bookmark" title="redis在开发中的简单使用">redis在开发中的简单使用</a></li><li><a href="/ChainOfResponsibility%E8%B4%A3%E4%BB%BB%E9%93%BE%E6%A8%A1%E5%BC%8F" rel="bookmark" title="ChainOfResponsibility责任链模式">ChainOfResponsibility责任链模式</a></li><li><a href="/Composite%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Composite组合模式">Composite组合模式</a></li><li><a href="/Decorator%E8%A3%85%E9%A5%B0%E5%99%A8%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Decorator装饰器模式">Decorator装饰器模式</a></li><li><a href="/Facade%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Facade门面模式">Facade门面模式</a></li><li><a href="/Factory%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Factory工厂模式">Factory工厂模式</a></li><li><a href="/Flyweight%E4%BA%AB%E5%85%83%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Flyweight享元模式">Flyweight享元模式</a></li><li><a href="/Iterator%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Iterator迭代器模式">Iterator迭代器模式</a></li><li><a href="/Mediator%E8%B0%83%E5%81%9C%E8%80%85%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Mediator调停者模式">Mediator调停者模式</a></li><li><a href="/Observer%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Observer观察者模式">Observer观察者模式</a></li><li><a href="/Proxy%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F" rel="bookmark" title="Proxy代理模式">Proxy代理模式</a></li><li><a href="/Singleton%E5%8D%95%E4%BE%8B" rel="bookmark" title="Singleton单例">Singleton单例</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95" rel="bookmark" title="微服务以及架构发展">微服务以及架构发展</a></li><li><a href="/JVM-%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD" rel="bookmark" title="JVM-类的加载">JVM-类的加载</a></li><li><a href="/SpringCloud-Netflix%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Netflix体系">SpringCloud-Netflix体系</a></li><li><a href="/%E5%BA%8F%E5%88%97%E5%8C%96" rel="bookmark" title="序列化">序列化</a></li><li><a href="/JVM-JMM" rel="bookmark" title="JVM-JMM">JVM-JMM</a></li><li><a href="/%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%8E%E9%AB%98%E5%B9%B6%E5%8F%91%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84" rel="bookmark" title="分布式系统与高并发系统架构">分布式系统与高并发系统架构</a></li><li><a href="/JVM-%E5%AF%B9%E8%B1%A1%E7%9A%84%E5%88%9B%E5%BB%BA" rel="bookmark" title="JVM-对象的创建">JVM-对象的创建</a></li><li><a href="/JVM-JVM%E8%B0%83%E4%BC%98" rel="bookmark" title="JVM-JVM调优">JVM-JVM调优</a></li><li><a href="/JVM-GC" rel="bookmark" title="JVM-GC">JVM-GC</a></li><li><a href="/SpringCloud-Alibaba%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Alibaba体系">SpringCloud-Alibaba体系</a></li><li><a href="/SpringCloud-SpringCloud%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-SpringCloud体系">SpringCloud-SpringCloud体系</a></li><li><a href="/Apollo" rel="bookmark" title="Apollo">Apollo</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%EF%BC%88%E4%B8%80%EF%BC%89" rel="bookmark" title="微服务中的会话管理（一）">微服务中的会话管理（一）</a></li><li><a href="/%E7%A3%81%E7%9B%98IO%E4%B8%8E%E7%BD%91%E7%BB%9CIO" rel="bookmark" title="磁盘IO与网络IO">磁盘IO与网络IO</a></li><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%9A%84%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89" rel="bookmark" title="微服务中的会话管理（二）">微服务中的会话管理（二）</a></li><li><a href="/HTTPS" rel="bookmark" title="HTTPS">HTTPS</a></li><li><a href="/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" rel="bookmark" title="RocketMQ-基础概念">RocketMQ-基础概念</a></li><li><a href="/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1" rel="bookmark" title="RocketMQ-消息、事务">RocketMQ-消息、事务</a></li><li><a href="/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84" rel="bookmark" title="Kafka-整体架构">Kafka-整体架构</a></li><li><a href="/%E7%BD%91%E7%BB%9CIO%E6%A8%A1%E5%9E%8B" rel="bookmark" title="网络IO模型">网络IO模型</a></li><li><a href="/Kafka-%E6%90%AD%E5%BB%BA" rel="bookmark" title="Kafka-搭建">Kafka-搭建</a></li><li><a href="/Netty" rel="bookmark" title="Netty">Netty</a></li><li><a href="/nginx%E5%AE%9E%E6%88%98" rel="bookmark" title="nginx实战">nginx实战</a></li><li><a href="/Java%E5%92%8C%E4%B8%B2%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%80%9A%E4%BF%A1" rel="bookmark" title="Java和串口进行通信">Java和串口进行通信</a></li></ul></div><div class="overview panel" data-title="站点概览"><div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="fanfanfan" data-src="/images/avatar.png"><p class="name" itemprop="name">fanfanfan</p><div class="description" itemprop="description">花有重开日，人无再少年</div></div><nav class="state"><div class="item posts"><a href="/archives/"><span class="count">73</span> <span class="name">文章</span></a></div><div class="item categories"><a href="/categories/"><span class="count">3</span> <span class="name">分类</span></a></div><div class="item tags"><a href="/tags/"><span class="count">77</span> <span class="name">标签</span></a></div></nav><div class="social"></div><ul class="menu"><li class="item"><a href="/" rel="section"><i class="ic i-home"></i>首页</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a></li><li class="item"><a href="/categories/" rel="section"><i class="ic i-th"></i>分类</a></li><li class="item"><a href="/tags/" rel="section"><i class="ic i-tags"></i>标签</a></li></ul></li><li class="item"><a href="/friends/" rel="section"><i class="ic i-magic"></i>友链</a></li><li class="item"><a href="/about/" rel="section"><i class="ic i-user"></i>关于</a></li></ul></div></div></div><ul id="quick"><li class="prev pjax"><a href="/java-%E6%97%A5%E5%BF%97%E4%BD%93%E7%B3%BB" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/redis%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>随机文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/JVM-JVM%E8%B0%83%E4%BC%98" title="JVM-JVM调优">JVM-JVM调优</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/Iterator%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F" title="Iterator迭代器模式">Iterator迭代器模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/AOP" title="AOP">AOP</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/JMH" title="JMH">JMH</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" title="线程基础知识">线程基础知识</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/zookeeper%E5%8E%9F%E7%90%86" title="zookeeper原理">zookeeper原理</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/Facade%E9%97%A8%E9%9D%A2%E6%A8%A1%E5%BC%8F" title="Facade门面模式">Facade门面模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/Proxy%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F" title="Proxy代理模式">Proxy代理模式</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E7%A3%81%E7%9B%98IO%E4%B8%8E%E7%BD%91%E7%BB%9CIO" title="磁盘IO与网络IO">磁盘IO与网络IO</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringMVC%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89" title="SpringMVC入门（二）">SpringMVC入门（二）</a></span></li></ul></div><div><h2>最新评论</h2><ul class="leancloud-recent-comment"></ul></div></div><div class="status"><div class="copyright">&copy; 2010 – <span itemprop="copyrightYear">2021</span> <span class="with-love"><i class="ic i-sakura rotate"></i> </span><span class="author" itemprop="copyrightHolder">fanfanfan</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i> </span><span title="站点总字数">1.3m 字</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="ic i-coffee"></i> </span><span title="站点阅读时长">20:22</span></div><div class="powered-by">基于 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo</span> & Theme.<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==">Shoka</span></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL={path:"/redis的数据类型",favicon:{show:"书院十四先生",hide:"书院十四先生"},search:{placeholder:"文章搜索",empty:"关于 「 ${query} 」，什么也没搜到",stats:"${time} ms 内找到 ${hits} 条结果"},valine:!0,fancybox:!0,copyright:'复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',ignores:[function(e){return e.includes("#")},function(e){return new RegExp(LOCAL.path+"$").test(e)}]}</script><script src="https://cdn.polyfill.io/v2/polyfill.js"></script><script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script><script src="/js/app.js?v=0.2.5"></script></body></html><!-- rebuild by hrmmi -->