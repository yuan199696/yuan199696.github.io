<!-- build time:Sun Dec 26 2021 21:01:11 GMT+0800 (中国标准时间) --><!DOCTYPE html><html lang="zh-CN,en,default"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=2"><meta name="theme-color" content="#FFF"><link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon.png"><link rel="icon" type="image/ico" sizes="32x32" href="/images/favicon.ico"><meta http-equiv="Cache-Control" content="no-transform"><meta http-equiv="Cache-Control" content="no-siteapp"><link rel="alternate" type="application/rss+xml" href="https://baiyezi.vip/rss.xml"><link rel="alternate" type="application/atom+xml" href="https://baiyezi.vip/atom.xml"><link rel="alternate" type="application/json" href="https://baiyezi.vip/feed.json"><link rel="stylesheet" href="//fonts.googleapis.com/css?family=Mulish:300,300italic,400,400italic,700,700italic%7CFredericka%20the%20Great:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20JP:300,300italic,400,400italic,700,700italic%7CNoto%20Serif%20SC:300,300italic,400,400italic,700,700italic%7CInconsolata:300,300italic,400,400italic,700,700italic&display=swap&subset=latin,latin-ext"><link rel="stylesheet" href="/css/app.css?v=0.2.5"><meta name="keywords" content="Java,SpringCloud,微服务,配置中心,Zuul,注册中心,Hystrix,Netflix,Eureka,Ribbon,Feign,Actuator,RestTemplate,Sleuth,Ziplin,链路追踪"><link rel="canonical" href="https://baiyezi.vip/SpringCloud-Netflix%E4%BD%93%E7%B3%BB"><title>SpringCloud-Netflix体系 - 微服务 - Java |</title><meta name="generator" content="Hexo 5.4.0"></head><body itemscope itemtype="http://schema.org/WebPage"><div id="loading"><div class="cat"><div class="body"></div><div class="head"><div class="face"></div></div><div class="foot"><div class="tummy-end"></div><div class="bottom"></div><div class="legs left"></div><div class="legs right"></div></div><div class="paw"><div class="hands left"></div><div class="hands right"></div></div></div></div><div id="container"><header id="header" itemscope itemtype="http://schema.org/WPHeader"><div class="inner"><div id="brand"><div class="pjax"><h1 itemprop="name headline">SpringCloud-Netflix体系</h1><div class="meta"><span class="item" title="创建时间：2021-05-10 19:05:12"><span class="icon"><i class="ic i-calendar"></i> </span><span class="text">发表于</span> <time itemprop="dateCreated datePublished" datetime="2021-05-10T19:05:12+08:00">2021-05-10</time> </span><span class="item" title="本文字数"><span class="icon"><i class="ic i-pen"></i> </span><span class="text">本文字数</span> <span>86k</span> <span class="text">字</span> </span><span class="item" title="阅读时长"><span class="icon"><i class="ic i-clock"></i> </span><span class="text">阅读时长</span> <span>1:18</span> </span><span id="/SpringCloud-Netflix体系" class="item leancloud_visitors" data-flag-title="" title="阅读次数"><span class="icon"><i class="ic i-eye"></i> </span><span class="text">阅读次数</span> <span class="leancloud-visitors-count"></span></span></div></div></div><nav id="nav"><div class="inner"><div class="toggle"><div class="lines" aria-label="切换导航栏"><span class="line"></span> <span class="line"></span> <span class="line"></span></div></div><ul class="menu"><li class="item title"><a href="/" rel="start"></a></li></ul><ul class="right"><li class="item theme"><i class="ic i-sun"></i></li><li class="item search"><i class="ic i-search"></i></li></ul></div></nav></div><div id="imgs" class="pjax"><ul><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225104957.png"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105008.png"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105419.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105418.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105423.jpg"></li><li class="item" data-background-image="https://gitee.com/bfanfanfan/img/raw/master/guzhuang/20211225105420.jpg"></li></ul></div></header><div id="waves"><svg class="waves" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto"><defs><path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z"/></defs><g class="parallax"><use xlink:href="#gentle-wave" x="48" y="0"/><use xlink:href="#gentle-wave" x="48" y="3"/><use xlink:href="#gentle-wave" x="48" y="5"/><use xlink:href="#gentle-wave" x="48" y="7"/></g></svg></div><main><div class="inner"><div id="main" class="pjax"><div class="article wrap"><div class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList"><i class="ic i-home"></i> <span><a href="/">首页</a></span><i class="ic i-angle-right"></i> <span itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/java/" itemprop="item" rel="index" title="分类于 Java"><span itemprop="name">Java</span></a><meta itemprop="position" content="1"></span><i class="ic i-angle-right"></i> <span class="current" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem"><a href="/categories/java/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" itemprop="item" rel="index" title="分类于 微服务"><span itemprop="name">微服务</span></a><meta itemprop="position" content="2"></span></div><article itemscope itemtype="http://schema.org/Article" class="post block" lang="zh-CN"><link itemprop="mainEntityOfPage" href="https://baiyezi.vip/SpringCloud-Netflix%E4%BD%93%E7%B3%BB"><span hidden itemprop="author" itemscope itemtype="http://schema.org/Person"><meta itemprop="image" content="/images/avatar.png"><meta itemprop="name" content="fanfanfan"><meta itemprop="description" content=", 花有重开日，人无再少年"></span><span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization"><meta itemprop="name" content=""></span><div class="body md" itemprop="articleBody"><h2 id="springcloud生态"><a class="anchor" href="#springcloud生态">#</a> SpringCloud 生态</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cucHJvY2Vzc29uLmNvbS92aWV3L2xpbmsvNjA4NTJiZDc1NjUzYmI1ZmYyNDEyNzBh">SpringCloud 生态图</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20210424230033.png" alt="image-20210424230031050"></p><h3 id="springcloud-netflix"><a class="anchor" href="#springcloud-netflix">#</a> SpringCloud Netflix</h3><p>Eureka：服务注册与发现，用于服务管理。</p><p>Feign： web 调用客户端，能够简化 HTTP 接口的调用。</p><p>Ribbon：基于客户端的负载均衡。</p><p>Hystrix：熔断降级，防止服务雪崩。</p><p>Zuul：网关路由，提供路由转发、请求过滤、限流降级等功能。</p><h3 id="springcloud-alibaba"><a class="anchor" href="#springcloud-alibaba">#</a> SpringCloud Alibaba</h3><p><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvU2VudGluZWw=">Sentinel</span></strong>：把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FsaWJhYmEvTmFjb3M=">Nacos</span></strong>：一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly9yb2NrZXRtcS5hcGFjaGUub3JnLw==">RocketMQ</span></strong>：一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9kdWJibw==">Dubbo</span></strong>：Apache Dubbo™ 是一款高性能 Java RPC 框架。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NlYXRhL3NlYXRh">Seata</span></strong>：阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9wcm9kdWN0L2FjbQ==">Alibaba Cloud ACM</span></strong>：一款在分布式架构环境中对应用配置进行集中管理和推送的应用配置中心产品。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9wcm9kdWN0L29zcw==">Alibaba Cloud OSS</span></strong>: 阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly9oZWxwLmFsaXl1bi5jb20vZG9jdW1lbnRfZGV0YWlsLzQzMTM2Lmh0bWw=">Alibaba Cloud SchedulerX</span></strong>: 阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。</p><p><strong><span class="exturl" data-url="aHR0cHM6Ly93d3cuYWxpeXVuLmNvbS9wcm9kdWN0L3Ntcw==">Alibaba Cloud SMS</span></strong>: 覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</p><h3 id="springcloud-apache"><a class="anchor" href="#springcloud-apache">#</a> SpringCloud Apache</h3><p>Sleuth：服务链路追踪</p><p>Admin：健康管理</p><p>LoadBalancer：负载均衡</p><h2 id="eureka"><a class="anchor" href="#eureka">#</a> Eureka</h2><p>eureka 来源于古希腊词汇，意为 “发现了”。eureka 分为两部分，Server 端和 Client 端，Server 端用于注册服务，Client 端用于拉去注册中心已有的服务</p><ol><li>背景：在传统应用中，组件之间的调用，通过有规范的约束的接口来实现，从而实现不同模块间良好的协作。但是被拆分成微服务后，每个微服务实例的网络地址都可能动态变化，数量也会变化，使得原来硬编码的地址失去了作用。需要一个中心化的组件来进行服务的登记和管理。</li><li>概念：实现服务治理，即管理所有的服务信息和状态。</li></ol><pre><code class="language-sh">注册中心相当于买票乘车，只看有没有票（有没有服务），有就去买票（获取注册列表），然后乘车（调用）。不必关心有多少火车在运行。
</code></pre><ol start="3"><li><p>注册中心好处：不用关心有多少提供方。</p></li><li><p>注册中心有哪些：Eureka，Nacos，Consul，Zookeeper 等。</p></li><li><p>服务注册与发现包括两部分，一个是服务器端，另一个是客户端。</p><p>Server 是一个公共服务，为 Client 提供服务注册和发现的功能，维护注册到自身的 Client 的相关信息，同时提供接口给 Client 获取注册表中其他服务的信息，使得动态变化的 Client 能够进行服务间的相互调用。</p><p>Client 将自己的服务信息通过一定的方式登记到 Server 上，并在正常范围内维护自己信息一致性，方便其他服务发现自己，同时可以通过 Server 获取到自己依赖的其他服务信息，完成服务调用，还内置了负载均衡器，用来进行基本的负载均衡。</p></li><li><p>我们课程的 Spring Cloud 是用 Eureka 作为服务注册中心。</p></li><li><p>Eureka：是一个 RESTful 风格的服务，是一个用于服务发现和注册的基础组件，是搭建 Spring Cloud 微服务的前提之一，它屏蔽了 Server 和 client 的交互细节，使得开发者将精力放到业务上。</p></li><li><p>serverA 从 serverB 同步信息，则 serverB 是 serverA 的 peer。</p></li><li><p>上面例子中如果 service-url 为空，且 register-with-eureka，fetch-registry 为 true，则会报错，Cannot execute request on any known server，因为 server 同时也是一个 client，他会尝试注册自己，所以要有一个注册中心 url 去注册。</p></li><li><p>Netflix 开源的组件。包括 server 和 client 两部分。</p><pre><code class="language-sh">https://github.com/Netflix/Eureka
</code></pre></li></ol><h3 id="客户端"><a class="anchor" href="#客户端">#</a> 客户端</h3><ol><li>注册：每个微服务启动时，将自己的网络地址等信息注册到注册中心，注册中心会存储（内存中）这些信息。</li><li>获取服务注册表：服务消费者从注册中心，查询服务提供者的网络地址，并使用该地址调用服务提供者，为了避免每次都查注册表信息，所以 client 会定时去 server 拉取注册表信息到缓存到 client 本地。</li><li>心跳：各个微服务与注册中心通过某种机制（心跳）通信，若注册中心长时间和服务间没有通信，就会注销该实例。</li><li>调用：实际的服务调用，通过注册表，解析服务名和具体地址的对应关系，找到具体服务的地址，进行实际调用。</li></ol><h3 id="服务端"><a class="anchor" href="#服务端">#</a> 服务端</h3><p>注册中心</p><ol><li><p>服务注册表：记录各个微服务信息，例如服务名称，ip，端口等。</p><p>注册表提供 查询 API（查询可用的微服务实例）和管理 API（用于服务的注册和注销）。</p></li><li><p>服务注册与发现：注册：将微服务信息注册到注册中心。发现：查询可用微服务列表及其网络地址。</p></li><li><p>服务检查：定时检测已注册的服务，如发现某实例长时间无法访问，就从注册表中移除。</p></li></ol><p>组件：Eureka , Consul , ZooKeeper，nacos 等。</p><h3 id="register"><a class="anchor" href="#register">#</a> Register</h3><p>服务注册</p><p>想要参与服务注册发现的实例首先需要向 Eureka 服务器注册信息，注册在第一次心跳发生时提交</p><h3 id="renew"><a class="anchor" href="#renew">#</a> Renew</h3><p>续租 / 心跳</p><p>Eureka 客户需要每 30 秒发送一次心跳来续租</p><p>10:00 00 第一次</p><p>10:00 30</p><p>10:01</p><p>10:01 30 最后</p><p>更新通知 Eureka 服务器实例仍然是活动的。如果服务器在 90 秒内没有看到更新，它将从其注册表中删除实例</p><h3 id="fetch-registry"><a class="anchor" href="#fetch-registry">#</a> Fetch Registry</h3><p>Eureka 客户端从服务器获取注册表信息并将其缓存在本地。</p><p>之后，客户端使用这些信息来查找其他服务。</p><p>通过获取上一个获取周期和当前获取周期之间的增量更新，可以定期 (每 30 秒) 更新此信息。</p><p>节点信息在服务器中保存的时间更长 (大约 3 分钟)，因此获取节点信息时可能会再次返回相同的实例。Eureka 客户端自动处理重复的信息。</p><p>在获得增量之后，Eureka 客户机通过比较服务器返回的实例计数来与服务器协调信息，如果由于某种原因信息不匹配，则再次获取整个注册表信息。</p><h3 id="cancel"><a class="anchor" href="#cancel">#</a> Cancel</h3><p>Eureka 客户端在关闭时向 Eureka 服务器发送取消请求。这将从服务器的实例注册表中删除实例，从而有效地将实例从通信量中取出。</p><h3 id="time-lag"><a class="anchor" href="#time-lag">#</a> Time Lag</h3><p>同步时间延迟</p><p>来自 Eureka 客户端的所有操作可能需要一段时间才能反映到 Eureka 服务器上，然后反映到其他 Eureka 客户端上。这是因为 eureka 服务器上的有效负载缓存，它会定期刷新以反映新信息。Eureka 客户端还定期地获取增量。因此，更改传播到所有 Eureka 客户机可能需要 2 分钟。</p><h3 id="communication-mechanism"><a class="anchor" href="#communication-mechanism">#</a> Communication mechanism</h3><p>通讯机制</p><p>Http 协议下的 Rest 请求，默认情况下 Eureka 使用 Jersey 和 Jackson 以及 JSON 完成节点间的通讯</p><h3 id="eureka-server搭建"><a class="anchor" href="#eureka-server搭建">#</a> Eureka-Server 搭建</h3><p>即 eureka 服务注册中心</p><p>新建 SpringBoot 项目并引入相关依赖</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426090430573.png" alt="image-20210426090430573"></p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>application.yaml</p><figure class="highlight yaml"><figcaption data-lang="YAML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token key atrule">eureka</span><span class="token punctuation">:</span> </pre></td></tr><tr><td data-num="2"></td><td><pre>  <span class="token key atrule">client</span><span class="token punctuation">:</span></pre></td></tr><tr><td data-num="3"></td><td><pre>    <span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token key atrule">register-with-eureka</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token key atrule">fetch-registry</span><span class="token punctuation">:</span> <span class="token boolean important">false</span></pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token key atrule">service-url</span><span class="token punctuation">:</span>                      </pre></td></tr><tr><td data-num="9"></td><td><pre>      <span class="token key atrule">defaultZone</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>7900/eureka/</pre></td></tr></table></figure><p>或者使用 application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">eureka.client.register-with-eureka</span><span class="token punctuation">=</span><span class="token attr-value">false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token attr-name">eureka.client.fetch-registry</span><span class="token punctuation">=</span><span class="token attr-value">false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:7900/eureka/</span></pre></td></tr></table></figure><p>在 SpringBoot 的启动类上加上注解</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@EnableEurekaServer</span></pre></td></tr></table></figure><p>启动项目，浏览器中访问项目：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo4MDgwLw==">http://localhost:8080/</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210425140359129.png" alt="image-20210425140359129"></p><h3 id="eureka高可用集群搭建"><a class="anchor" href="#eureka高可用集群搭建">#</a> Eureka 高可用集群搭建</h3><p>即通过多个 eureka 服务注册中心来提高服务注册中心的高可用性，且各个服务注册中心之间能相互同步信息（同步已经注册的服务列表）</p><ol><li><p>配置 hosts</p><p>‪C:\Windows\System32\drivers\etc\hosts</p><p>加入以下配置</p><pre><code class="language-xml]">#eureka
127.0.0.1 euk1.com
127.0.0.1 euk2.com
</code></pre></li><li><p>配置文件配置</p><p>eureka 根据主机（eureka.instance.hostname）、实例名字（<span class="exturl" data-url="aHR0cDovL3NwcmluZy5hcHBsaWNhdGlvbi5uYW1l">spring.application.name</span>）、端口（server.port）来确定一个实例</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426094627942.png" alt="image-20210426094627942"></p><p>application-euk1.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk2.com:7002/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">#配置主机。hostname：查找主机；appname：标识分组</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token attr-name">eureka.instance.hostname</span><span class="token punctuation">=</span><span class="token attr-value">euk1.com</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">7001</span></pre></td></tr></table></figure><p>application-euk2.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流。以下代表与 euk1.com:7001 建立联系</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token attr-name">eureka.instance.hostname</span><span class="token punctuation">=</span><span class="token attr-value">euk2.com</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">7002</span></pre></td></tr></table></figure><p>application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#eureka.client.service-url.defaultZone=http://localhost:8080/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">euk1</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#spring.profiles.active=euk2</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">EurekaServer</span></pre></td></tr></table></figure></li><li><p>修改 application.properties，依次启动 euk1、euk2</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210425170246724.png" alt="image-20210425170246724"></p></li></ol><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210425170308949.png" alt="image-20210425170308949"></p><h3 id="eureka服务注册"><a class="anchor" href="#eureka服务注册">#</a> Eureka 服务注册</h3><p>新建一个 SpringBoot 项目作为服务提供者（将被注册到 eureka 服务注册中心），勾选 Spring Web、Eureka Discovery Client 依赖</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426090852927.png" alt="image-20210426090852927"></p><p>application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#要连接的 eureka-server 注册中心</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">80</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">provider</span></pre></td></tr></table></figure><p>写一个 Controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="7"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="8"></td><td><pre> * @DateTime: 2021-04-26 9:24</pre></td></tr><tr><td data-num="9"></td><td><pre> **/</pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getHi"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"Hi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>启动该 SpringBoot 项目，同时在 eureka 服务端项目启动一个服务注册中心</p><p>application-euk1.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#配置主机。hostname：查找主机；appname：标识分组</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">eureka.instance.hostname</span><span class="token punctuation">=</span><span class="token attr-value">euk1.com</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">7001</span></pre></td></tr></table></figure><p>application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#eureka.client.service-url.defaultZone=http://localhost:8080/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">euk1</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">EurekaServer</span></pre></td></tr></table></figure><p>可以看到，新建的项目已经被注册到服务注册中心了</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426094901059.png" alt="image-20210426094901059"></p><h3 id="eureka-rest"><a class="anchor" href="#eureka-rest">#</a> Eureka Rest</h3><p>eureka 提供了一系列 rest 风格的 API</p><p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05ldGZsaXgvZXVyZWthL3dpa2kvRXVyZWthLVJFU1Qtb3BlcmF0aW9ucw==">官方文档</span></p><table><thead><tr><th><strong>Operation</strong></th><th><strong>HTTP action</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>Register new application instance</td><td>POST /eureka/v2/apps/<strong>appID</strong></td><td>Input: JSON/XMLpayload HTTPCode: 204 on success</td></tr><tr><td>De-register application instance</td><td>DELETE /eureka/v2/apps/<strong>appID</strong>/<strong>instanceID</strong></td><td>HTTP Code: 200 on success</td></tr><tr><td>Send application instance heartbeat</td><td>PUT /eureka/v2/apps/<strong>appID</strong>/<strong>instanceID</strong></td><td>HTTP Code: * 200 on success * 404 if <strong>instanceID</strong>doesn’t exist</td></tr><tr><td>Query for all instances</td><td>GET /eureka/v2/apps</td><td>HTTP Code: 200 on success Output: JSON/XML</td></tr><tr><td>Query for all <strong>appID</strong> instances</td><td>GET /eureka/v2/apps/<strong>appID</strong></td><td>HTTP Code: 200 on success Output: JSON/XML</td></tr><tr><td>Query for a specific <strong>appID</strong>/<strong>instanceID</strong></td><td>GET /eureka/v2/apps/<strong>appID</strong>/<strong>instanceID</strong></td><td>HTTP Code: 200 on success Output: JSON/XML</td></tr><tr><td>Query for a specific <strong>instanceID</strong></td><td>GET /eureka/v2/instances/<strong>instanceID</strong></td><td>HTTP Code: 200 on success Output: JSON/XML</td></tr><tr><td>Take instance out of service</td><td>PUT /eureka/v2/apps/<strong>appID</strong>/<strong>instanceID</strong>/status?value=OUT_OF_SERVICE</td><td>HTTP Code: * 200 on success * 500 on failure</td></tr><tr><td>Move instance back into service (remove override)</td><td>DELETE /eureka/v2/apps/<strong>appID</strong>/<strong>instanceID</strong>/status?value=UP (The value=UP is optional, it is used as a suggestion for the fallback status due to removal of the override)</td><td>HTTP Code: * 200 on success * 500 on failure</td></tr><tr><td>Update metadata</td><td>PUT /eureka/v2/apps/<strong>appID</strong>/<strong>instanceID</strong>/metadata?key=value</td><td>HTTP Code: * 200 on success * 500 on failure</td></tr><tr><td>Query for all instances under a particular <strong>vip address</strong></td><td>GET /eureka/v2/vips/<strong>vipAddress</strong></td><td>* HTTP Code: 200 on success Output: JSON/XML * 404 if the <strong>vipAddress</strong>does not exist.</td></tr><tr><td>Query for all instances under a particular <strong>secure vip address</strong></td><td>GET /eureka/v2/svips/<strong>svipAddress</strong></td><td>* HTTP Code: 200 on success Output: JSON/XML * 404 if the <strong>svipAddress</strong>does not exist.</td></tr></tbody></table><p>例如：</p><p>查看所有实例</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426102103614.png" alt="image-20210426102103614"></p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre>This XML file does not appear to have any style information associated with it. The document tree is shown below.</pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>applications</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>versions__delta</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>versions__delta</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>apps__hashcode</span><span class="token punctuation">></span></span>UP_2_<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>apps__hashcode</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>EUREKASERVER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>instance</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>instanceId</span><span class="token punctuation">></span></span>localhost:EurekaServer:7001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>instanceId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hostName</span><span class="token punctuation">></span></span>euk1.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hostName</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app</span><span class="token punctuation">></span></span>EUREKASERVER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ipAddr</span><span class="token punctuation">></span></span>172.20.10.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ipAddr</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>status</span><span class="token punctuation">></span></span>UP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>status</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overriddenstatus</span><span class="token punctuation">></span></span>UNKNOWN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overriddenstatus</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>7001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>securePort</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>443<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>securePort</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>countryId</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>countryId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataCenterInfo</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>MyOwn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataCenterInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>leaseInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>renewalIntervalInSecs</span><span class="token punctuation">></span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>renewalIntervalInSecs</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>durationInSecs</span><span class="token punctuation">></span></span>90<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>durationInSecs</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>registrationTimestamp</span><span class="token punctuation">></span></span>1619401454219<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>registrationTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastRenewalTimestamp</span><span class="token punctuation">></span></span>1619403644864<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastRenewalTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>evictionTimestamp</span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>evictionTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>serviceUpTimestamp</span><span class="token punctuation">></span></span>1619401394983<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>serviceUpTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>leaseInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metadata</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>management.port</span><span class="token punctuation">></span></span>7001<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>management.port</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metadata</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>homePageUrl</span><span class="token punctuation">></span></span>http://euk1.com:7001/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>homePageUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>statusPageUrl</span><span class="token punctuation">></span></span>http://euk1.com:7001/actuator/info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>statusPageUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>healthCheckUrl</span><span class="token punctuation">></span></span>http://euk1.com:7001/actuator/health<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>healthCheckUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vipAddress</span><span class="token punctuation">></span></span>EurekaServer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vipAddress</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>secureVipAddress</span><span class="token punctuation">></span></span>EurekaServer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>secureVipAddress</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>isCoordinatingDiscoveryServer</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>isCoordinatingDiscoveryServer</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastUpdatedTimestamp</span><span class="token punctuation">></span></span>1619401454219<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastUpdatedTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastDirtyTimestamp</span><span class="token punctuation">></span></span>1619401394185<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastDirtyTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>actionType</span><span class="token punctuation">></span></span>ADDED<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>actionType</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>instance</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>PROVIDER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>instance</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>instanceId</span><span class="token punctuation">></span></span>localhost:provider:80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>instanceId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hostName</span><span class="token punctuation">></span></span>localhost<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hostName</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app</span><span class="token punctuation">></span></span>PROVIDER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ipAddr</span><span class="token punctuation">></span></span>172.20.10.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ipAddr</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>status</span><span class="token punctuation">></span></span>UP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>status</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overriddenstatus</span><span class="token punctuation">></span></span>UNKNOWN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overriddenstatus</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>securePort</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>443<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>securePort</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>countryId</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>countryId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataCenterInfo</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>MyOwn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataCenterInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>leaseInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>renewalIntervalInSecs</span><span class="token punctuation">></span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>renewalIntervalInSecs</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>durationInSecs</span><span class="token punctuation">></span></span>90<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>durationInSecs</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>registrationTimestamp</span><span class="token punctuation">></span></span>1619401677481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>registrationTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastRenewalTimestamp</span><span class="token punctuation">></span></span>1619403658223<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastRenewalTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>evictionTimestamp</span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>evictionTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>serviceUpTimestamp</span><span class="token punctuation">></span></span>1619401677481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>serviceUpTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>leaseInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metadata</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>management.port</span><span class="token punctuation">></span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>management.port</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metadata</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>homePageUrl</span><span class="token punctuation">></span></span>http://localhost:80/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>homePageUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>statusPageUrl</span><span class="token punctuation">></span></span>http://localhost:80/actuator/info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>statusPageUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>healthCheckUrl</span><span class="token punctuation">></span></span>http://localhost:80/actuator/health<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>healthCheckUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vipAddress</span><span class="token punctuation">></span></span>provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vipAddress</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>secureVipAddress</span><span class="token punctuation">></span></span>provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>secureVipAddress</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>isCoordinatingDiscoveryServer</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>isCoordinatingDiscoveryServer</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastUpdatedTimestamp</span><span class="token punctuation">></span></span>1619401677481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastUpdatedTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastDirtyTimestamp</span><span class="token punctuation">></span></span>1619401677258<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastDirtyTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>actionType</span><span class="token punctuation">></span></span>ADDED<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>actionType</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>instance</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>applications</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>查看某个实例：</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426102335841.png" alt="image-20210426102335841"></p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>application</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>PROVIDER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>instance</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>instanceId</span><span class="token punctuation">></span></span>localhost:provider:80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>instanceId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hostName</span><span class="token punctuation">></span></span>localhost<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hostName</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>app</span><span class="token punctuation">></span></span>PROVIDER<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>app</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ipAddr</span><span class="token punctuation">></span></span>172.20.10.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ipAddr</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>status</span><span class="token punctuation">></span></span>UP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>status</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overriddenstatus</span><span class="token punctuation">></span></span>UNKNOWN<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overriddenstatus</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>port</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>port</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>securePort</span> <span class="token attr-name">enabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>443<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>securePort</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>countryId</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>countryId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataCenterInfo</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>MyOwn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataCenterInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>leaseInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>renewalIntervalInSecs</span><span class="token punctuation">></span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>renewalIntervalInSecs</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>durationInSecs</span><span class="token punctuation">></span></span>90<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>durationInSecs</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>registrationTimestamp</span><span class="token punctuation">></span></span>1619401677481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>registrationTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastRenewalTimestamp</span><span class="token punctuation">></span></span>1619403838302<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastRenewalTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>evictionTimestamp</span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>evictionTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>serviceUpTimestamp</span><span class="token punctuation">></span></span>1619401677481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>serviceUpTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>leaseInfo</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>metadata</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>management.port</span><span class="token punctuation">></span></span>80<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>management.port</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>metadata</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>homePageUrl</span><span class="token punctuation">></span></span>http://localhost:80/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>homePageUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>statusPageUrl</span><span class="token punctuation">></span></span>http://localhost:80/actuator/info<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>statusPageUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>healthCheckUrl</span><span class="token punctuation">></span></span>http://localhost:80/actuator/health<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>healthCheckUrl</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vipAddress</span><span class="token punctuation">></span></span>provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vipAddress</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>secureVipAddress</span><span class="token punctuation">></span></span>provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>secureVipAddress</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>isCoordinatingDiscoveryServer</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>isCoordinatingDiscoveryServer</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastUpdatedTimestamp</span><span class="token punctuation">></span></span>1619401677481<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastUpdatedTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lastDirtyTimestamp</span><span class="token punctuation">></span></span>1619401677258<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lastDirtyTimestamp</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>actionType</span><span class="token punctuation">></span></span>ADDED<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>actionType</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>instance</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>如果需要 json 格式 可以加个请求头（Header 中） <code>Accept:application/json</code></p><h4 id="注册到eureka的服务信息查看"><a class="anchor" href="#注册到eureka的服务信息查看">#</a> 注册到 eureka 的服务信息查看</h4><p>get: {ip:port}/eureka/apps</p><h4 id="注册到eureka的具体的服务查看"><a class="anchor" href="#注册到eureka的具体的服务查看">#</a> 注册到 eureka 的具体的服务查看</h4><p>get: {ip:port}/eureka/apps/{appname}/</p><h4 id="服务续约"><a class="anchor" href="#服务续约">#</a> 服务续约</h4><p>put：{ip:port}/eureka/apps/{appname}/{id}?lastDirtyTimestamp={}&amp;status=up</p><h4 id="更改服务状态"><a class="anchor" href="#更改服务状态">#</a> 更改服务状态</h4><p>put：{ip:port}/eureka/apps/{appname}/{id}/status?lastDirtyTimestamp={}&amp;value={UP/DOWN}<br>对应 eureka 源码的：InstanceResource.statusUpdate</p><h4 id="删除状态更新"><a class="anchor" href="#删除状态更新">#</a> 删除状态更新</h4><p updown="">delete：{ip:port}/eureka/apps/{appname}/{id}/status?lastDirtyTimestamp={}&amp;value=</p><h4 id="删除服务"><a class="anchor" href="#删除服务">#</a> 删除服务</h4><p>delete: {ip:port}/eureka/apps/{appname}/</p><h4 id="eureka元数据"><a class="anchor" href="#eureka元数据">#</a> Eureka 元数据</h4><p>Eureka 的元数据有两种：标准元数据和自定义元数据。<br>标准元数据：主机名、IP 地址、端口号、状态页和健康检查等信息，这些信息都会被发布在服务注册表中，用于服务之间的调用。<br>自定义元数据：可以使用 eureka.instance.metadata-map 配置，这些元数据可以在远程客户端中访问，但是一般不改变客户端行为，除非客户端知道该元数据的含义。可以在配置文件中对当前服务设置自定义元数据，可后期用户个性化使用。</p><p>元数据可以配置在 eureka 服务器和 eureka 的客户端上</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426103405800.png" alt="image-20210426103405800"></p><h5 id="自定义元数据信息"><a class="anchor" href="#自定义元数据信息">#</a> 自定义元数据信息</h5><p>可以作为服务的标识。例如在服务端项目的 application.properties 中配置</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">eureka.instance.metadata-map.key</span><span class="token punctuation">=</span><span class="token attr-value">value</span></pre></td></tr></table></figure><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server, 默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#eureka.client.service-url.defaultZone=http://localhost:8080/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">euk1</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">EurekaServer</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token attr-name">eureka.instance.metadata-map.fan</span><span class="token punctuation">=</span><span class="token attr-value">fan</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426104700345.png" alt="image-20210426104700345"></p><h3 id="eurekaclient"><a class="anchor" href="#eurekaclient">#</a> EurekaClient</h3><p>EurekaClient 可以在客户端获取 eureka 服务器上的注册者信息</p><p><strong>org.springframework.cloud.client.discovery 与 com.netflix.discovery.DiscoveryClient</strong> 相比，后者为 Eureka 注册中心客户端的接口，功能更丰富。</p><p>org.springframework.cloud.client.discovery 是 SpringCloud 对注册中心 client 的抽象封装，提供公用功能</p><p>org.springframework.cloud.client.discovery 定义用来服务发现的客户端接口，是客户端进行服务发现的核心接口，是 spring cloud 用来进行服务发现的顶级接口，在 common 中可以看到其地位。在 Netflix Eureka 和 Consul 中都有具体的实现类。代表通用于服务发现的读操作，例如在 eureka 或 consul 中的 API：</p><pre><code>
	String description();//获取实现类的描述。
	List&lt;String&gt; getServices();//获取所有服务实例id。
	List&lt;ServiceInstance&gt; getInstances(String serviceId);//通过服务id查询服务实例信息列表。
</code></pre><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>appinfo<span class="token punctuation">.</span></span><span class="token class-name">InstanceInfo</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EurekaClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ServiceInstance</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">DiscoveryClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalancerClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="16"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="17"></td><td><pre> * @DateTime: 2021-04-26 11:07</pre></td></tr><tr><td data-num="18"></td><td><pre> **/</pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="23"></td><td><pre>     * SpringCloud 方式</pre></td></tr><tr><td data-num="24"></td><td><pre>     */</pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token class-name">DiscoveryClient</span> client<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="29"></td><td><pre>     * eureka 方式</pre></td></tr><tr><td data-num="30"></td><td><pre>     */</pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token class-name">EurekaClient</span> eurekaClient<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="35"></td><td><pre>     * ribbon 方式</pre></td></tr><tr><td data-num="36"></td><td><pre>     */</pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token class-name">LoadBalancerClient</span> loadBalancerClient<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="42"></td><td><pre>     * 获取所有服务</pre></td></tr><tr><td data-num="43"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="44"></td><td><pre>     */</pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getServices"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="46"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> services <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token keyword">return</span> services<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="52"></td><td><pre>     * 根据服务 id 获取服务具体信息</pre></td></tr><tr><td data-num="53"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="54"></td><td><pre>     */</pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getInstances"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServiceInstance</span><span class="token punctuation">></span></span> <span class="token function">getInstances</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ServiceInstance</span><span class="token punctuation">></span></span> instances <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">getInstances</span><span class="token punctuation">(</span><span class="token string">"consumer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token keyword">return</span> instances<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="62"></td><td><pre>     * 获取服务提供者的 API，并调用 API</pre></td></tr><tr><td data-num="63"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="64"></td><td><pre>     */</pre></td></tr><tr><td data-num="65"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token comment">// 具体服务</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token comment">//        List&lt;InstanceInfo> instances = eurekaClient.getInstancesById("localhost:provider:80");</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token comment">// 使用服务名得到服务列表，进一步得到服务提供者的 API，从而调用 API</span></pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InstanceInfo</span><span class="token punctuation">></span></span> instances <span class="token operator">=</span> eurekaClient<span class="token punctuation">.</span><span class="token function">getInstancesByVipAddress</span><span class="token punctuation">(</span><span class="token string">"provider"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>instances<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>            <span class="token class-name">InstanceInfo</span> instanceInfo <span class="token operator">=</span> instances<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>instanceInfo<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">InstanceInfo<span class="token punctuation">.</span>InstanceStatus</span><span class="token punctuation">.</span>UP<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>                url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> instanceInfo<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span>  <span class="token operator">+</span> instanceInfo<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>                <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="77"></td><td><pre>                <span class="token class-name">RestTemplate</span> restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>                <span class="token class-name">String</span> responseStr <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="79"></td><td><pre>                <span class="token keyword">return</span> responseStr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="80"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="81"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="82"></td><td><pre>        <span class="token keyword">return</span> url<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="84"></td><td><pre></pre></td></tr><tr><td data-num="85"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="86"></td><td><pre>     * 使用 ribbon 方式进行客户端的负载均衡</pre></td></tr><tr><td data-num="87"></td><td><pre>     */</pre></td></tr><tr><td data-num="88"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="89"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getProviderAPI2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="90"></td><td><pre>        <span class="token comment">// 可能有多个服务提供者，ribbon 可以从中挑选一个正常状态的服务（即自动过滤调 down 状态的服务），即达到客户端的负载均衡的目的</span></pre></td></tr><tr><td data-num="91"></td><td><pre>        <span class="token class-name">ServiceInstance</span> provider <span class="token operator">=</span> loadBalancerClient<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token string">"provider"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="92"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> provider<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> provider<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="93"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="94"></td><td><pre>        <span class="token class-name">RestTemplate</span> restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="95"></td><td><pre>        <span class="token class-name">String</span> responseStr <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token keyword">return</span> responseStr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="98"></td><td><pre></pre></td></tr><tr><td data-num="99"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426143911698.png" alt="image-20210426143911698"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426143837495.png" alt="image-20210426143837495"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426143807318.png" alt="image-20210426143807318"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426143735681.png" alt="image-20210426143735681"></p><h3 id="eureka自我保护机制"><a class="anchor" href="#eureka自我保护机制">#</a> Eureka 自我保护机制</h3><h4 id="机制"><a class="anchor" href="#机制">#</a> 机制</h4><p>Eureka 在 CAP 理论当中是属于 AP ， 也就说当产生网络分区时，Eureka 保证系统的可用性，但不保证系统里面数据的一致性。默认开启，服务器端容错的一种方式，即短时间心跳不到达仍不剔除服务列表里的节点</p><pre><code>EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.
</code></pre><p>默认情况下，Eureka Server 在一定时间内，没有接收到某个微服务心跳，会将某个微服务注销（90S）。但是当网络故障时，微服务与 Server 之间无法正常通信，上述行为就非常危险，因为微服务正常，不应该注销。</p><p>Eureka Server 通过自我保护模式来解决整个问题，当 Server 在短时间内丢失过多客户端时，那么 Server 会进入自我保护模式，会保护注册表中的微服务不被注销掉。当网络故障恢复后，退出自我保护模式。</p><p><strong>思想：宁可保留健康的和不健康的，也不盲目注销任何健康的服务。</strong></p><h4 id="自我保护触发"><a class="anchor" href="#自我保护触发">#</a> 自我保护触发</h4><p><strong>客户端每分钟续约数量小于客户端总数的 85% 时会触发保护机制</strong></p><p>自我保护机制的触发条件：<br>（当每分钟心跳次数 (renewsLastMin) 小于 numberOfRenewsPerMinThreshold 时，并且开启自动保护模式开关 ( eureka.server.enable-self-preservation = true ) 时，触发自我保护机制，不再自动过期租约。）<br>numberOfRenewsPerMinThreshold = expectedNumberOfRenewsPerMin * 续租百分比 (eureka.server.renewalPercentThreshold, 默认 0.85)<br>expectedNumberOfRenewsPerMin = 当前注册的应用实例数 x 2<br>为什么乘以 2：<br>默认情况下，注册的应用实例每半分钟续租一次，那么一分钟心跳两次，因此 x 2 。</p><p>服务实例数：10 个，期望每分钟续约数：10 * 2=20，期望阈值：20*0.85=17，自我保护少于 17 时 触发。</p><p>剔除：</p><pre><code class="language-sh">    AbstractInstanceRegistry
    
    public void evict(long additionalLeaseMs) &#123;
        logger.debug(&quot;Running the evict task&quot;);

        if (!isLeaseExpirationEnabled()) &#123;
            logger.debug(&quot;DS: lease expiration is currently disabled.&quot;);
            return;
    &#125;
    此代码意思：if中判断为true，不走此逻辑，走下面的剔除。如果if为false。走此逻辑，不剔除。
</code></pre><pre><code class="language-sh">PeerAwareInstanceRegistryImpl

    @Override
    public boolean isLeaseExpirationEnabled() &#123;
        if (!isSelfPreservationModeEnabled()) &#123;
        //如果打开自我保护，不进入此逻辑。
            // The self preservation mode is disabled, hence allowing the instances to expire.
            return true;
        &#125;
        return numberOfRenewsPerMinThreshold &gt; 0 &amp;&amp; getNumOfRenewsInLastMin() &gt; numberOfRenewsPerMinThreshold;
    &#125;
</code></pre><h4 id="关闭"><a class="anchor" href="#关闭">#</a> 关闭</h4><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">eureka.server.enable-self-preservation</span><span class="token punctuation">=</span><span class="token attr-value">false</span></pre></td></tr></table></figure><p>关闭后会提示</p><p><img data-src="SpringCloud%E7%BB%84%E6%88%90.assets/image-20200408165155886.png" alt="image-20200408165155886"></p><h4 id="清理时间"><a class="anchor" href="#清理时间">#</a> 清理时间</h4><p>默认 60 秒</p><pre><code>eureka.server.eviction-interval-timer-in-ms=3000
</code></pre><h3 id="actuator"><a class="anchor" href="#actuator">#</a> Actuator</h3><p>用于监控服务节点并上报，Spring Boot 2.0 的 Actuator 只暴露了 health 和 info 端点，提供的监控信息无法满足我们的需求。在 1.x 中有 n 多可供我们监控的节点，官方的回答是为了安全。</p><p>eureka 服务端的依赖中继承了 Actuator，而 eureka 客户端的依赖中没有集成 Actuator，所以需要手动引入</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#开启所有端点</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token attr-value">*</span></pre></td></tr></table></figure><p>Actuator 所有 API 如下：</p><h4 id="health"><a class="anchor" href="#health">#</a> Health</h4><p>会显示服务状态</p><p status:up=""></p><h4 id="shutdown"><a class="anchor" href="#shutdown">#</a> shutdown</h4><p>开启远程关闭节点功能</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">management.endpoint.shutdown.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr></table></figure><p>使用 Post 方式请求端点</p><p>{</p><p>&quot;message&quot;: &quot;Shutting down, bye...&quot;</p><p>}</p><h4 id="autoconfig"><a class="anchor" href="#autoconfig">#</a> autoconfig</h4><p>获取应用的自动化配置报告<br>beans</p><p>获取应用上下文中创建的所有 Bean</p><h4 id="configprops"><a class="anchor" href="#configprops">#</a> configprops</h4><p>获取应用中配置的属性信息报告</p><h4 id="env"><a class="anchor" href="#env">#</a> env</h4><p>获取应用所有可用的环境属性报告</p><h4 id="mappings"><a class="anchor" href="#mappings">#</a> Mappings</h4><p>获取应用所有 Spring Web 的控制器映射关系报告</p><h4 id="info"><a class="anchor" href="#info">#</a> info</h4><p>获取应用自定义的信息</p><h4 id="metrics"><a class="anchor" href="#metrics">#</a> metrics</h4><p>返回应用的各类重要度量指标信息</p><p><strong>Metrics</strong> 节点并没有返回全量信息，我们可以通过不同的<strong> key</strong> 去加载我们想要的值</p><p>metrics/jvm.memory.max</p><h4 id="threaddump"><a class="anchor" href="#threaddump">#</a> Threaddump</h4><p>1.x 中为<strong> dump</strong></p><p>返回程序运行中的线程信息</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426154325796.png" alt="image-20210426154325796"></p><figure class="highlight json"><figcaption data-lang="JSON"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token property">"_links"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token property">"self"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token property">"beans"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/beans"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token property">"caches-cache"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/caches/&#123;cache&#125;"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token property">"caches"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/caches"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token property">"health-path"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/health/&#123;*path&#125;"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token property">"health"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/health"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token property">"info"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/info"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="30"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="31"></td><td><pre><span class="token property">"conditions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/conditions"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token property">"shutdown"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/shutdown"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="37"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="38"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="39"></td><td><pre><span class="token property">"configprops"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/configprops"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="41"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="42"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token property">"env"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/env"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token property">"env-toMatch"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="48"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/env/&#123;toMatch&#125;"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="49"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="50"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="51"></td><td><pre><span class="token property">"loggers"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="52"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/loggers"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token property">"loggers-name"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/loggers/&#123;name&#125;"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="59"></td><td><pre><span class="token property">"heapdump"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/heapdump"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="63"></td><td><pre><span class="token property">"threaddump"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/threaddump"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token property">"metrics-requiredMetricName"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="68"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/metrics/&#123;requiredMetricName&#125;"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="69"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">true</span></pre></td></tr><tr><td data-num="70"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token property">"metrics"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="72"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/metrics"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="74"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="75"></td><td><pre><span class="token property">"scheduledtasks"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="76"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/scheduledtasks"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="77"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="78"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token property">"mappings"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/mappings"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="81"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="82"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="83"></td><td><pre><span class="token property">"refresh"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="84"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/refresh"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="85"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="86"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="87"></td><td><pre><span class="token property">"features"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="88"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/features"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="89"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="90"></td><td><pre><span class="token punctuation">&#125;</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="91"></td><td><pre><span class="token property">"serviceregistry"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="92"></td><td><pre><span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"http://localhost/actuator/serviceregistry"</span><span class="token punctuation">,</span></pre></td></tr><tr><td data-num="93"></td><td><pre><span class="token property">"templated"</span><span class="token operator">:</span> <span class="token boolean">false</span></pre></td></tr><tr><td data-num="94"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="95"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="96"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>通过 post 请求 shutown 中的链接 <strong>&quot;<strong><strong><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdC9hY3R1YXRvci9zaHV0ZG93bg==">http://localhost/actuator/shutdown</span></strong></strong>&quot;</strong>，就可以远程关闭服务</p><h4 id="eureka-健康检查"><a class="anchor" href="#eureka-健康检查">#</a> Eureka 健康检查</h4><p>由于 server 和 client 通过心跳保持 服务状态，而只有状态为 UP 的服务才能被访问（看 eureka 界面中的 status，服务为 UP 状态代表能调用到服务，但服务本身并不能保证是可用的）。</p><p>比如心跳一直正常，服务一直 UP，但是此服务 DB 连不上了，无法正常提供服务。此时，我们需要将 微服务的健康状态也同步到 server。只需要启动 eureka 的健康检查就行。这样微服务就会将自己的健康状态同步到 eureka。</p><p>在 client 端配置，将自己真正的健康状态上报到 server</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#上报服务的真实健康状态到 server</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">eureka.client.healthcheck.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr></table></figure><p>同时需要加入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>手动改变服务的健康状态</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span></span><span class="token class-name">Health</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>actuate<span class="token punctuation">.</span>health<span class="token punctuation">.</span></span><span class="token class-name">HealthIndicator</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="8"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="9"></td><td><pre> * @DateTime: 2021-04-26 16:11</pre></td></tr><tr><td data-num="10"></td><td><pre> **/</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token annotation punctuation">@Service</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HealthStatusService</span> <span class="token keyword">implements</span> <span class="token class-name">HealthIndicator</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> status <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> status<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Health</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Health<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">up</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Health<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">down</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>status<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">HealthStatusService</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="10"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="11"></td><td><pre> * @DateTime: 2021-04-26 9:24</pre></td></tr><tr><td data-num="12"></td><td><pre> **/</pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token class-name">HealthStatusService</span> healthStatusService<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getHi"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"Hi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="26"></td><td><pre>     * 手动控制服务状态</pre></td></tr><tr><td data-num="27"></td><td><pre>     * @param status</pre></td></tr><tr><td data-num="28"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="29"></td><td><pre>     */</pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/health"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">)</span> <span class="token class-name">Boolean</span> status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        healthStatusService<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">return</span> healthStatusService<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426162036140.png" alt="image-20210426162036140"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426162137615.png" alt="image-20210426162137615"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426162238427.png" alt="image-20210426162238427"></p><h3 id="eureka安全配置"><a class="anchor" href="#eureka安全配置">#</a> Eureka 安全配置</h3><ol><li><p>加入 Spring Security 依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure></li><li><p>配置账号密码</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#是否将自己注册到 Eureka Server，默认为 true，由于当前就是 server，故而设置成 false，表明该服务不会向 eureka 注册自己的信息</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token comment">#eureka.client.register-with-eureka=false</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#是否从 eureka server 获取注册信息，由于单节点，不需要同步其他节点数据，用 false</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#eureka.client.fetch-registry=false</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#设置服务注册中心的 URL，用于 client 和 server 端交流</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#eureka.client.service-url.defaultZone=http://localhost:8080/eureka/</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">euk1</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">#应用名称</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">EurekaServer</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">#自定义元数据信息</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token attr-name">eureka.instance.metadata-map.fan</span><span class="token punctuation">=</span><span class="token attr-value">fan</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token comment">#关闭自我保护</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token comment">#eureka.server.enable-self-preservation=false</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token comment">#安全认证</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token attr-name">spring.security.user.name</span><span class="token punctuation">=</span><span class="token attr-value">fan</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token attr-name">spring.security.user.password</span><span class="token punctuation">=</span><span class="token attr-value">fan</span></pre></td></tr></table></figure></li><li><p>修改客户端配置</p><p>此时，客户端注册到服务端时会报错</p><p>Root name 'timestamp' does not match expected ('instance') for type [simple....</p><p>修改客户端连接注册中心的 url</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#要连接的 eureka-server 注册中心</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://fan:fan@euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">80</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">provider</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment"># 开启所有端点</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token attr-value">*</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">#开启远程关闭节点</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token attr-name">management.endpoint.shutdown.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">#上报服务的真实健康状态到 server</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token attr-name">eureka.client.healthcheck.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr></table></figure></li><li><p>服务端添加配置类</p><p>eureka 服务端默认开启了防止跨域攻击，需要手动关闭，在 eureka 服务端增加配置类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>builders<span class="token punctuation">.</span></span><span class="token class-name">HttpSecurity</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">EnableWebSecurity</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>web<span class="token punctuation">.</span>configuration<span class="token punctuation">.</span></span><span class="token class-name">WebSecurityConfigurerAdapter</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="9"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="10"></td><td><pre> * @DateTime: 2021-04-26 17:18</pre></td></tr><tr><td data-num="11"></td><td><pre> **/</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token annotation punctuation">@Configuration</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token annotation punctuation">@EnableWebSecurity</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token comment">// 关闭跨站攻击防御</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">configure</span><span class="token punctuation">(</span>http<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="SpringCloud-Netflix%E4%BD%93%E7%B3%BB.assets/image-20210426170455092.png" alt="image-20210426170455092"></p></li></ol><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210426172557095.png" alt="image-20210426172557095"></p><h2 id="ribbon"><a class="anchor" href="#ribbon">#</a> Ribbon</h2><p>可以做客户端的负载均衡，服务调用方使用 Ribbon 获取服务列表，并使用 RestTemplate 调用获取到的服务的指定的接口。</p><p>在 Spring Cloud 中我们如果想要使用客户端负载均衡，方法很简单，使用 @LoadBalanced 注解即可，这样客户端在发起请求的时候会根据负载均衡策略从服务端列表中选择一个服务端，向该服务端发起网络请求，从而实现负载均衡。</p><pre><code class="language-sh">https://github.com/Netflix/ribbon
</code></pre><p>Ribbon 是 Netflix 开发的客户端负载均衡器，为 Ribbon 配置<strong>服务提供者地址列表</strong>后，Ribbon 就可以基于某种<strong>负载均衡策略算法</strong>，自动地帮助服务消费者去请求 提供者。Ribbon 默认为我们提供了很多负载均衡算法，例如轮询、随机等。我们也可以实现自定义负载均衡算法。</p><p>Ribbon 作为 Spring Cloud 的负载均衡机制的实现，</p><ol><li>Ribbon 可以单独使用，作为一个独立的负载均衡组件。只是需要我们手动配置 服务地址列表。</li><li>Ribbon 与 Eureka 配合使用时，Ribbon 可自动从 Eureka Server 获取服务提供者地址列表（DiscoveryClient），并基于负载均衡算法，请求其中一个服务提供者实例。</li><li>Ribbon 与 OpenFeign 和 RestTemplate 进行无缝对接，让二者具有负载均衡的能力。OpenFeign 默认集成了 Ribbon。</li></ol><h3 id="ribbon组成"><a class="anchor" href="#ribbon组成">#</a> Ribbon 组成</h3><p>官网首页：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05ldGZsaXgvcmliYm9u">https://github.com/Netflix/ribbon</span></p><p>ribbon-core: 核心的通用性代码。api 一些配置。</p><p>ribbon-eureka：基于 eureka 封装的模块，能快速集成 eureka。</p><p>ribbon-examples：学习示例。</p><p>ribbon-httpclient：基于 apache httpClient 封装的 rest 客户端，集成了负载均衡模块，可以直接在项目中使用。</p><p>ribbon-loadbalancer：负载均衡模块。</p><p>ribbon-transport：基于 netty 实现多协议的支持。比如 http，tcp，udp 等。</p><h3 id="ribbon的负载均衡算法"><a class="anchor" href="#ribbon的负载均衡算法">#</a> Ribbon 的负载均衡算法</h3><p>默认实现：</p><p>ZoneAvoidanceRule（区域权衡策略）：复合判断 Server 所在区域的性能和 Server 的可用性，轮询选择服务器。</p><p>其他规则：</p><p>BestAvailableRule（最低并发策略）：会先过滤掉由于多次访问故障而处于断路器跳闸状态的服务，然后选择一个并发量最小的服务。逐个找服务，如果断路器打开，则忽略。</p><p>RoundRobinRule（轮询策略）：以简单轮询选择一个服务器。按顺序循环选择一个 server。</p><p>RandomRule（随机策略）：随机选择一个服务器。</p><p>AvailabilityFilteringRule（可用过滤策略）：会先过滤掉多次访问故障而处于断路器跳闸状态的服务和过滤并发的连接数量超过阀值得服务，然后对剩余的服务列表安装轮询策略进行访问。</p><p>WeightedResponseTimeRule（响应时间加权策略）：据平均响应时间计算所有的服务的权重，响应时间越快服务权重越大，容易被选中的概率就越高。刚启动时，如果统计信息不中，则使用 RoundRobinRule (轮询) 策略，等统计的信息足够了会自动的切换到 WeightedResponseTimeRule。响应时间长，权重低，被选择的概率低。反之，同样道理。此策略综合了各种因素（网络，磁盘，IO 等），这些因素直接影响响应时间。</p><p>RetryRule（重试策略）：先按照 RoundRobinRule (轮询) 的策略获取服务，如果获取的服务失败则在指定的时间会进行重试，进行获取可用的服务。如多次获取某个服务失败，就不会再次获取该服务。主要是在一个时间段内，如果选择一个服务不成功，就继续找可用的服务，直到超时。</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token annotation punctuation">@SpringBootApplication</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EurekaConsumerApplication</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">EurekaConsumerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token comment">/**</span></pre></td></tr><tr><td data-num="16"></td><td><pre>	 * 引入 RestTemplate</pre></td></tr><tr><td data-num="17"></td><td><pre>	 */</pre></td></tr><tr><td data-num="18"></td><td><pre>	<span class="token annotation punctuation">@Bean</span></pre></td></tr><tr><td data-num="19"></td><td><pre>	<span class="token class-name">RestTemplate</span> <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>appinfo<span class="token punctuation">.</span></span><span class="token class-name">InstanceInfo</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EurekaClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ServiceInstance</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">DiscoveryClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalancerClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="16"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="17"></td><td><pre> * @DateTime: 2021-04-26 11:07</pre></td></tr><tr><td data-num="18"></td><td><pre> **/</pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="23"></td><td><pre>     * ribbon 方式</pre></td></tr><tr><td data-num="24"></td><td><pre>     */</pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token class-name">LoadBalancerClient</span> loadBalancerClient<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="33"></td><td><pre>     * 使用 ribbon 方式进行客户端的负载均衡</pre></td></tr><tr><td data-num="34"></td><td><pre>     */</pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getProviderAPI2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token comment">// 可能有多个服务提供者，ribbon 可以从中挑选一个正常状态的服务（即自动过滤调 down 状态的服务），即达到客户端的负载均衡的目的</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token class-name">ServiceInstance</span> provider <span class="token operator">=</span> loadBalancerClient<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token string">"provider"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> provider<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> provider<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token class-name">String</span> responseStr <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>        <span class="token keyword">return</span> responseStr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>接着启动两个服务提供方的项目，服务提供方的接口为：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="9"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="10"></td><td><pre> * @DateTime: 2021-04-26 9:24</pre></td></tr><tr><td data-num="11"></td><td><pre> **/</pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;server.port&#125;"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token class-name">String</span> port<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getHi"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"Hi！，port："</span> <span class="token operator">+</span> port<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>从服务调用结果上看，Ribbon 是以轮询的方式去调用服务列表中的服务</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20210426224233.png" alt="image-20210426224232082"></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20210426224245.png" alt="image-20210426224243913"></p><h3 id="切换负载均衡策略"><a class="anchor" href="#切换负载均衡策略">#</a> 切换负载均衡策略</h3><p>在服务调用方做改变</p><p>a. 注解方式：</p><pre><code>@Bean
	public IRule myRule()&#123;
		//return new RoundRobinRule();
		//return new RandomRule();
		return new RetryRule(); 
	&#125;
</code></pre><p>b. 配置文件方式：</p><p>属性配置方式优先级高于 Java 代码。</p><p>针对服务定 ribbon 策略：</p><pre><code class="language-sh">provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule

</code></pre><p>给所有服务定 ribbon 策略：</p><pre><code class="language-sh">ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
</code></pre><p>controller：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     * 使用 ribbon 方式进行客户端的负载均衡</pre></td></tr><tr><td data-num="3"></td><td><pre>     */</pre></td></tr><tr><td data-num="4"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getProviderAPI2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// 可能有多个服务提供者，ribbon 可以从中挑选一个正常状态的服务（即自动过滤调 down 状态的服务），即达到客户端的负载均衡的目的</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token class-name">ServiceInstance</span> provider <span class="token operator">=</span> loadBalancerClient<span class="token punctuation">.</span><span class="token function">choose</span><span class="token punctuation">(</span><span class="token string">"provider"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> provider<span class="token punctuation">.</span><span class="token function">getHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> provider<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token class-name">String</span> responseStr <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">return</span> responseStr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>c. 自定义负载均衡策略：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token comment">// 具体服务</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">//        List&lt;InstanceInfo> instances = eurekaClient.getInstancesById("localhost:provider:80");</span></pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token comment">// 使用服务名得到服务列表，进一步得到服务提供者的 API，从而调用 API</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InstanceInfo</span><span class="token punctuation">></span></span> instances <span class="token operator">=</span> eurekaClient<span class="token punctuation">.</span><span class="token function">getInstancesByVipAddress</span><span class="token punctuation">(</span><span class="token string">"provider"</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token keyword">if</span> <span class="token punctuation">(</span>instances<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>            <span class="token class-name">InstanceInfo</span> instanceInfo <span class="token operator">=</span> instances<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>            <span class="token comment">// 自定义随机算法</span></pre></td></tr><tr><td data-num="11"></td><td><pre>            <span class="token comment">/*int nextInt = new Random().nextInt(instances.size());</span></pre></td></tr><tr><td data-num="12"></td><td><pre>            InstanceInfo instanceInfo = instances.get(nextInt);*/</pre></td></tr><tr><td data-num="13"></td><td><pre>            <span class="token comment">// 自定以轮询算法</span></pre></td></tr><tr><td data-num="14"></td><td><pre>            <span class="token comment">/*int i = atomicInteger.getAndIncrement();</span></pre></td></tr><tr><td data-num="15"></td><td><pre>            InstanceInfo instanceInfo  = instances.get(i % instances.size());*/</pre></td></tr><tr><td data-num="16"></td><td><pre>            <span class="token comment">// 权重</span></pre></td></tr><tr><td data-num="17"></td><td><pre>            <span class="token comment">/*for (InstanceInfo instanceInfo :</span></pre></td></tr><tr><td data-num="18"></td><td><pre>                    instances) &#123;</pre></td></tr><tr><td data-num="19"></td><td><pre>                int weight = instanceInfo.getMetadata ();// 设置权重</pre></td></tr><tr><td data-num="20"></td><td><pre>            &#125;*/</pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>            <span class="token keyword">if</span><span class="token punctuation">(</span>instanceInfo<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">InstanceInfo<span class="token punctuation">.</span>InstanceStatus</span><span class="token punctuation">.</span>UP<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>                url <span class="token operator">=</span> <span class="token string">"http://"</span> <span class="token operator">+</span> instanceInfo<span class="token punctuation">.</span><span class="token function">getHostName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span>  <span class="token operator">+</span> instanceInfo<span class="token punctuation">.</span><span class="token function">getPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>                <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="25"></td><td><pre>                <span class="token class-name">RestTemplate</span> restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>                <span class="token class-name">String</span> responseStr <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token keyword">return</span> responseStr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token keyword">return</span> url<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="ribbon脱离eureka"><a class="anchor" href="#ribbon脱离eureka">#</a> Ribbon 脱离 Eureka</h3><p>应用场景：本地服务调用（即不需要远程服务调用时）；只调用一个服务，不需要负载均衡</p><p>服务调用方中进行配置：</p><pre><code class="language-sh">ribbon.eureka.enabled=false
ribbon.listOfServers=localhost:80,localhost:81

</code></pre><p>为 service-sms 设置 请求的网络地址列表。</p><p>Ribbon 可以和服务注册中心 Eureka 一起工作，从服务注册中心获取服务端的地址信息，也可以在配置文件中使用 listOfServers 字段来设置服务端地址。</p><h3 id="关于url拼接"><a class="anchor" href="#关于url拼接">#</a> 关于 URL 拼接</h3><p>通过注解 @LoadBalanced，可以将 URL 映射到具体的服务，客户端不需要再拼接 URL</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalanced</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token annotation punctuation">@SpringBootApplication</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EurekaConsumerApplication</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">EurekaConsumerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="16"></td><td><pre></pre></td></tr><tr><td data-num="17"></td><td><pre>	<span class="token comment">/**</span></pre></td></tr><tr><td data-num="18"></td><td><pre>	 * 引入 RestTemplate</pre></td></tr><tr><td data-num="19"></td><td><pre>	 */</pre></td></tr><tr><td data-num="20"></td><td><pre>	<span class="token annotation punctuation">@Bean</span></pre></td></tr><tr><td data-num="21"></td><td><pre>	<span class="token annotation punctuation">@LoadBalanced</span><span class="token comment">// 开启负载均衡</span></pre></td></tr><tr><td data-num="22"></td><td><pre>	<span class="token class-name">RestTemplate</span> <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="2"></td><td><pre>     *</pre></td></tr><tr><td data-num="3"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="4"></td><td><pre>     */</pre></td></tr><tr><td data-num="5"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="6"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getProviderAPI3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>        <span class="token comment">//provider 代表配置项 spring.application.name=provider</span></pre></td></tr><tr><td data-num="8"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="10"></td><td><pre>        <span class="token class-name">String</span> responseStr <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre>        <span class="token keyword">return</span> responseStr<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="客户端负载均衡"><a class="anchor" href="#客户端负载均衡">#</a> 客户端负载均衡</h3><p>在客户端负载均衡中，所有的客户端节点都有一份自己要访问的服务端地址列表，服务列表可以是本地事先配置好的，也可以通过 eureka 客户端实时地从服务端拉取。</p><h3 id="服务端负载均衡"><a class="anchor" href="#服务端负载均衡">#</a> 服务端负载均衡</h3><p>在客户端和服务端中间使用代理，如 nginx。在服务端负载均衡中，客户端节点只知道单一服务代理的地址，服务代理则知道所有服务端的地址。</p><p>客户端负载均衡和服务端负载均衡最大的区别在于 <em><strong>服务端地址列表的存储位置，以及负载算法在哪里</strong></em></p><h2 id="resttemplate"><a class="anchor" href="#resttemplate">#</a> RestTemplate</h2><h3 id="依赖注入"><a class="anchor" href="#依赖注入">#</a> 依赖注入</h3><pre><code>	@Bean
	// 开启负载均衡
	@LoadBalanced
	RestTemplate restTemplate() &#123;
		return new RestTemplate();
	&#125;
</code></pre><p>接下来便可以使用资源地址调用服务</p><pre><code>String url =&quot;http://provider/getHi&quot;;
String respStr = restTemplate.getForObject(url, String.class);
		
</code></pre><h3 id="get-请求处理"><a class="anchor" href="#get-请求处理">#</a> get 请求处理</h3><h4 id="getforentity"><a class="anchor" href="#getforentity">#</a> getForEntity</h4><p>getForEntity 方法的返回值是一个 ResponseEntity，ResponseEntity 是 Spring 对 HTTP 请求响应的封装，包括了几个重要的元素，如响应码、contentType、contentLength、响应消息体等。</p><pre><code>&lt;200,Hi,[Content-Type:&quot;text/plain;charset=UTF-8&quot;, Content-Length:&quot;8&quot;, Date:&quot;Fri, 10 Apr 2020 09:58:44 GMT&quot;, Keep-Alive:&quot;timeout=60&quot;, Connection:&quot;keep-alive&quot;]&gt;
</code></pre><h4 id="返回一个map"><a class="anchor" href="#返回一个map">#</a> 返回一个 Map</h4><p><strong>调用方</strong></p><pre><code>		String url =&quot;http://provider/getMap&quot;;
		   
		ResponseEntity&lt;Map&gt; entity = restTemplate.getForEntity(url, Map.class);
		   
		System.out.println(&quot;respStr: &quot;  + entity.getBody() );
</code></pre><p><strong>生产方</strong></p><pre><code>	@GetMapping(&quot;/getMap&quot;)
	public Map&lt;String, String&gt; getMap() &#123;
		
		HashMap&lt;String, String&gt; map = new HashMap&lt;&gt;();
		map.put(&quot;name&quot;, &quot;500&quot;);
		return map; 
	&#125;
</code></pre><h4 id="返回对象"><a class="anchor" href="#返回对象">#</a> 返回对象</h4><p><strong>调用方</strong></p><pre><code>		ResponseEntity&lt;Person&gt; entity = restTemplate.getForEntity(url, Person.class);
		   
		System.out.println(&quot;respStr: &quot;  + ToStringBuilder.reflectionToString(entity.getBody() ));
</code></pre><p><strong>生产方</strong></p><pre><code>	@GetMapping(&quot;/getObj&quot;)
	public Person getObj() &#123;
		Person person = new Person();
		person.setId(100);
		person.setName(&quot;xiaoming&quot;);
		return person; 
	&#125;
</code></pre><p><strong>Person 类</strong></p><pre><code>	private int id;
	private String name;
</code></pre><h4 id="传参调用"><a class="anchor" href="#传参调用">#</a> 传参调用</h4><p><strong>使用占位符</strong></p><pre><code>	String url =&quot;http://provider/getObjParam?name=&#123;1&#125;&quot;;
	   
	ResponseEntity&lt;Person&gt; entity = restTemplate.getForEntity(url, Person.class,&quot;hehehe...&quot;);
</code></pre><p><strong>使用 map</strong></p><pre><code>		String url =&quot;http://provider/getObjParam?name=&#123;name&#125;&quot;;
		   
		Map&lt;String, String&gt; map = Collections.singletonMap(&quot;name&quot;, &quot; memeda&quot;);
		ResponseEntity&lt;Person&gt; entity = restTemplate.getForEntity(url, Person.class,map);
</code></pre><h4 id="返回对象-2"><a class="anchor" href="#返回对象-2">#</a> 返回对象</h4><pre><code>Person person = restTemplate.getForObject(url, Person.class,map);
</code></pre><h3 id="post-请求处理"><a class="anchor" href="#post-请求处理">#</a> post 请求处理</h3><p><strong>调用方</strong></p><pre><code>	
		String url =&quot;http://provider/postParam&quot;;
		   
		Map&lt;String, String&gt; map = Collections.singletonMap(&quot;name&quot;, &quot; memeda&quot;);
		 ResponseEntity&lt;Person&gt; entity = restTemplate.postForEntity(url, map, Person.class);
</code></pre><p><strong>生产方</strong></p><pre><code>	@PostMapping(&quot;/postParam&quot;)
	public Person postParam(@RequestBody String name) &#123;

		System.out.println(&quot;name:&quot; + name);

		Person person = new Person();
		person.setId(100);
		person.setName(&quot;xiaoming&quot; + name);
		return person; 
	&#125;
</code></pre><h3 id="postforlocation"><a class="anchor" href="#postforlocation">#</a> postForLocation</h3><p><strong>调用方</strong></p><pre><code>		String url =&quot;http://provider/postParam&quot;;
		   
		Map&lt;String, String&gt; map = Collections.singletonMap(&quot;name&quot;, &quot; memeda&quot;);
		URI location = restTemplate.postForLocation(url, map, Person.class);
		
		System.out.println(location);
</code></pre><p><strong>生产方</strong></p><p>需要设置头信息，不然返回的是 null</p><pre><code>	public URI postParam(@RequestBody Person person,HttpServletResponse response) throws Exception &#123;

	URI uri = new URI(&quot;https://www.baidu.com/s?wd=&quot;+person.getName());
	response.addHeader(&quot;Location&quot;, uri.toString());
</code></pre><h3 id="exchange"><a class="anchor" href="#exchange">#</a> exchange</h3><p>可以自定义 http 请求的头信息，同时保护 get 和 post 方法</p><h3 id="拦截器"><a class="anchor" href="#拦截器">#</a> 拦截器</h3><p>所有使用 RestTemplate 发送的请求以及返回的结果都会经过该拦截器，需要实现 <code>ClientHttpRequestInterceptor</code> 接口</p><p><strong>拦截器</strong></p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>interceptor</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpRequest</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ClientHttpRequestExecution</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ClientHttpRequestInterceptor</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ClientHttpResponse</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="11"></td><td><pre> * RestTemplate 的拦截器</pre></td></tr><tr><td data-num="12"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="13"></td><td><pre> * @DateTime: 2021-05-11 13:39</pre></td></tr><tr><td data-num="14"></td><td><pre> **/</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoggingClientHttpRequestInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">ClientHttpRequestInterceptor</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">ClientHttpResponse</span> <span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">HttpRequest</span> httpRequest<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> body<span class="token punctuation">,</span> <span class="token class-name">ClientHttpRequestExecution</span> clientHttpRequestExecution<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"===========拦截============"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请求的API："</span><span class="token operator">+</span> httpRequest<span class="token punctuation">.</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>        <span class="token class-name">ClientHttpResponse</span> response <span class="token operator">=</span> clientHttpRequestExecution<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>httpRequest<span class="token punctuation">,</span> body<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"响应头为："</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token keyword">return</span> response<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>添加到 RestTemplate 中</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="2"></td><td><pre>	 * 引入 RestTemplate</pre></td></tr><tr><td data-num="3"></td><td><pre>	 */</pre></td></tr><tr><td data-num="4"></td><td><pre>	<span class="token annotation punctuation">@Bean</span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token annotation punctuation">@LoadBalanced</span><span class="token comment">// 开启负载均衡</span></pre></td></tr><tr><td data-num="6"></td><td><pre>	<span class="token class-name">RestTemplate</span> <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="7"></td><td><pre>		<span class="token class-name">RestTemplate</span> restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre>		restTemplate<span class="token punctuation">.</span><span class="token function">getInterceptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LoggingClientHttpRequestInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token keyword">return</span> restTemplate<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>RestTemplate 的使用：</p><p>服务调用方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Person</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>appinfo<span class="token punctuation">.</span></span><span class="token class-name">InstanceInfo</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">EurekaClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">ServiceInstance</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span></span><span class="token class-name">DiscoveryClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalancerClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntity</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URI<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicInteger</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="25"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="26"></td><td><pre> * @DateTime: 2021-04-26 11:07</pre></td></tr><tr><td data-num="27"></td><td><pre> **/</pre></td></tr><tr><td data-num="28"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="29"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController1</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="32"></td><td><pre>     * 接口调用</pre></td></tr><tr><td data-num="33"></td><td><pre>     */</pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="39"></td><td><pre>     *getForEntity()</pre></td></tr><tr><td data-num="40"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="41"></td><td><pre>     */</pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI4"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/getHi"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> forEntity <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>forEntity<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token keyword">return</span> forEntity<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="52"></td><td><pre>     * 传 map</pre></td></tr><tr><td data-num="53"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="54"></td><td><pre>     */</pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI5"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="56"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/getMap"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token keyword">return</span> map<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="63"></td><td><pre></pre></td></tr><tr><td data-num="64"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="65"></td><td><pre>     * 传对象</pre></td></tr><tr><td data-num="66"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="67"></td><td><pre>     */</pre></td></tr><tr><td data-num="68"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI6"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="69"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/getObj"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="72"></td><td><pre>        <span class="token class-name">Person</span> obj<span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="73"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="74"></td><td><pre>        <span class="token keyword">return</span> obj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="76"></td><td><pre></pre></td></tr><tr><td data-num="77"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="78"></td><td><pre>     * 给服务提供者传参</pre></td></tr><tr><td data-num="79"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="80"></td><td><pre>     */</pre></td></tr><tr><td data-num="81"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI7"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="82"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="83"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/getObj2?name=&#123;1&#125;"</span><span class="token punctuation">;</span> <span class="token comment">//name=&#123;1&#125; 表示占位符</span></pre></td></tr><tr><td data-num="84"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="85"></td><td><pre>        <span class="token class-name">Person</span> obj<span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">"wangwu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="86"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="87"></td><td><pre>        <span class="token keyword">return</span> obj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="88"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="89"></td><td><pre></pre></td></tr><tr><td data-num="90"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="91"></td><td><pre>     * 给服务提供者传一个 map，占位符的不同</pre></td></tr><tr><td data-num="92"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="93"></td><td><pre>     */</pre></td></tr><tr><td data-num="94"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI8"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="95"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="96"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/getObj2?name=&#123;name&#125;"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="97"></td><td><pre>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"wangmazi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="98"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="99"></td><td><pre>        <span class="token class-name">Person</span> obj<span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="100"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="101"></td><td><pre>        <span class="token keyword">return</span> obj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="102"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="103"></td><td><pre></pre></td></tr><tr><td data-num="104"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="105"></td><td><pre>     * post 方式</pre></td></tr><tr><td data-num="106"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="107"></td><td><pre>     */</pre></td></tr><tr><td data-num="108"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI9"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="109"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI9</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="110"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/postObj"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="111"></td><td><pre>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"wangmazi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="112"></td><td><pre>        <span class="token comment">//map 将作为 Person 类型的响应类型响应给服务提供者</span></pre></td></tr><tr><td data-num="113"></td><td><pre>        <span class="token class-name">Person</span> obj<span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>map<span class="token punctuation">,</span><span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="114"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="115"></td><td><pre>        <span class="token keyword">return</span> obj<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="116"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="117"></td><td><pre></pre></td></tr><tr><td data-num="118"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getProviderAPI10"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="119"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getProviderAPI10</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="120"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://provider/postLocation"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="121"></td><td><pre>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"wangmazi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="122"></td><td><pre>        <span class="token comment">// 调用获取到的 API</span></pre></td></tr><tr><td data-num="123"></td><td><pre>        <span class="token class-name">URI</span> location<span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForLocation</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>map<span class="token punctuation">,</span><span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="124"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="125"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="126"></td><td><pre>        <span class="token keyword">return</span> location<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="127"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="128"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>服务提供方：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">Person</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">HealthStatusService</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URI<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span><span class="token class-name">URISyntaxException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="16"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="17"></td><td><pre> * @DateTime: 2021-04-26 9:24</pre></td></tr><tr><td data-num="18"></td><td><pre> **/</pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token class-name">HealthStatusService</span> healthStatusService<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;server.port&#125;"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token class-name">String</span> port<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getHi"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"Hi！，port："</span> <span class="token operator">+</span> port<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"200"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="38"></td><td><pre></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getObj"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">getObj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="45"></td><td><pre>     * 接收服务调用者返回的参数</pre></td></tr><tr><td data-num="46"></td><td><pre>     * @param name</pre></td></tr><tr><td data-num="47"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="48"></td><td><pre>     */</pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getObj2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">getObj2</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="53"></td><td><pre></pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/postObj"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="55"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Person</span> <span class="token function">postObj</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Person</span> person<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 接收服务调用者的请求信息</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"ls"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 返回给服务调用者</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="59"></td><td><pre></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/postLocation"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">URI</span> <span class="token function">postLocation</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Person</span> person<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">URISyntaxException</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>        <span class="token class-name">URI</span> uri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">URI</span><span class="token punctuation">(</span><span class="token string">"https://www.baidu.com/s?wd="</span> <span class="token operator">+</span> person<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>        <span class="token comment">// 不加会报空指针</span></pre></td></tr><tr><td data-num="65"></td><td><pre>        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">"Location"</span><span class="token punctuation">,</span>uri<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        <span class="token keyword">return</span> uri<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="68"></td><td><pre></pre></td></tr><tr><td data-num="69"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="70"></td><td><pre>     * 手动控制服务状态</pre></td></tr><tr><td data-num="71"></td><td><pre>     * @param status</pre></td></tr><tr><td data-num="72"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="73"></td><td><pre>     */</pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/health"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="75"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">health</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">)</span> <span class="token class-name">Boolean</span> status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        healthStatusService<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token keyword">return</span> healthStatusService<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="79"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h2 id="feign"><a class="anchor" href="#feign">#</a> Feign</h2><p>OpenFeign 是 Netflix 开发的声明式、模板化的 HTTP 请求客户端，可以更加便捷、优雅地调用 HTTP API。</p><p>OpenFeign 会根据带有注解的函数信息构建出网络请求的模板，在发送网络请求之前，OpenFeign 会将函数的参数值设置到这些请求模板中。</p><p>feign 主要是构建微服务消费端。只要使用 OpenFeign 提供的注解修饰定义网络请求的接口类，就可以使用该接口的实例发送 RESTful 的网络请求。还可以集成 Ribbon 和 Hystrix，提供负载均衡和断路器。</p><p>英文表意为 “假装，伪装，变形”， 是一个 Http 请求调用的轻量级框架，可以以 Java 接口注解的方式调用 Http 请求，而不用像 Java 中通过封装 HTTP 请求报文的方式直接调用。通过处理注解，将请求模板化，当实际调用的时候，传入参数，根据参数再应用到请求上，进而转化成真正的请求，这种请求相对而言比较直观。Feign 封装 了 HTTP 调用流程，面向接口编程，回想第一节课的 SOP。</p><h3 id="feign和openfeign的关系"><a class="anchor" href="#feign和openfeign的关系">#</a> Feign 和 OpenFeign 的关系</h3><ul><li>Feign 本身不支持 Spring MVC 的注解，它有一套自己的注解。</li><li>OpenFeign 是 Spring Cloud 在 Feign 的基础上支持了 Spring MVC 的注解，如 @RequesMapping 等等。</li><li>OpenFeign 的 <code>@FeignClient</code> 可以解析 SpringMVC 的 @RequestMapping 注解下的接口，<br>并通过动态代理的方式产生实现类，实现类中做负载均衡并调用其他服务。</li></ul><h3 id="openfeign的使用"><a class="anchor" href="#openfeign的使用">#</a> OpenFeign 的使用</h3><h4 id="原理"><a class="anchor" href="#原理">#</a> 原理</h4><ol><li>主程序入口添加 @EnableFeignClients 注解开启对 Feign Client 扫描加载处理。根据 Feign Client 的开发规范，定义接口并加 @FeignClient 注解。</li><li>当程序启动时，会进行包扫描，扫描所有 @FeignClient 注解的类，并将这些信息注入 Spring IoC 容器中。当定义的 Feign 接口中的方法被调用时，通过 JDK 的代理方式，来生成具体的 RequestTemplate。当生成代理时，Feign 会为每个接口方法创建一个 RequestTemplate 对象，该对象封装了 HTTP 请求需要的全部信息，如请求参数名、请求方法等信息都在这个过程中确定。</li><li>然后由 RequestTemplate 生成 Request，然后把这个 Request 交给 client 处理，这里指的 Client 可以是 JDK 原生的 URLConnection、Apache 的 Http Client，也可以是 Okhttp。最后 Client 被封装到 LoadBalanceClient 类，这个类结合 Ribbon 负载均衡发起服务之间的调用。</li></ol><h4 id="基础用法"><a class="anchor" href="#基础用法">#</a> 基础用法</h4><p>新建一个 SpringBoot 项目作为服务提供方：</p><p>勾选 Web-Spring Web、Spring Cloud Discovery-Eureka Discovery Client</p><p>新建项目的 pom.xml 如下：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- lookup parent from repository --></span></pre></td></tr><tr><td data-num="10"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>user-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>user-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">></span></span>2020.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="22"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="23"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="24"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="26"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="27"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="31"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="32"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="33"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="35"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="36"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="37"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="38"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="39"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="40"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="41"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spring-cloud.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="42"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="43"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="44"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="45"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="46"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="47"></td><td><pre></pre></td></tr><tr><td data-num="48"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="49"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="50"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="51"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="52"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="53"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="54"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="55"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="56"></td><td><pre></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">86</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">user-provider</span></pre></td></tr></table></figure><p>编写 controller 作为服务提供者</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="7"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="8"></td><td><pre> * @DateTime: 2021-05-11 14:23</pre></td></tr><tr><td data-num="9"></td><td><pre> **/</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>新建一个 SpringBoot 项目作为服务调用方：</p><p>勾选 Web-Spring Web、Spring Cloud Discovery-Eureka Discovery Client、Spring Cloud Routing-OpenFeign</p><p>新建项目的 pom.xml 如下：</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></pre></td></tr><tr><td data-num="4"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.4.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment">&lt;!-- lookup parent from repository --></span></pre></td></tr><tr><td data-num="10"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="11"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="12"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>user-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="13"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="14"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>user-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="15"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="16"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="18"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">></span></span>2020.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="19"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="20"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="21"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="22"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="23"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="24"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="25"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="26"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="27"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="28"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="29"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="30"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="31"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="32"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="35"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="36"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="37"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="38"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="41"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="42"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="43"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="44"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="45"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="46"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>$&#123;spring-cloud.version&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="47"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="48"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="49"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="50"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="51"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="54"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="55"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="56"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="57"></td><td><pre>				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="58"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="59"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="60"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="61"></td><td><pre></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>application.properties</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">96</span></pre></td></tr><tr><td data-num="4"></td><td><pre></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">user-consumer</span></pre></td></tr></table></figure><p>在启动类中加入注解 @EnableFeignClients，使得 OpenFeign 生效</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">EnableFeignClients</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token annotation punctuation">@SpringBootApplication</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token annotation punctuation">@EnableFeignClients</span> <span class="token comment">// 使得 OpenFeign 相关的组件和配置机制生效</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserConsumerApplication</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre>	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="12"></td><td><pre>		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">UserConsumerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>创建一个接口</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="7"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="8"></td><td><pre> * @DateTime: 2021-05-11 16:52</pre></td></tr><tr><td data-num="9"></td><td><pre> **/</pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">// 不结合 eureka，自定义一个 client 名字，用 url 指定服务提供方的 url，url="httpL://ip:port"</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">//@FeignClient(name = "xxoo", url = "http://localhost:86")</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token comment">// 如果后面加了 /alive， 那么以下接口中就不要再加 @GetMapping ("/alive")</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">//@FeignClient(name = "xxoo", url = "http://localhost:86/alive")</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token comment">// 结合 eureka，通过去 eureka 注册中心获取服务名来获取相应的服务</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"user-provider"</span><span class="token punctuation">)</span> <span class="token comment">// 对应服务提供方中的 spring.application.name=user-provider</span></pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserAPI</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>创建 controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="9"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="10"></td><td><pre> * @DateTime: 2021-05-11 16:49</pre></td></tr><tr><td data-num="11"></td><td><pre> **/</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token class-name">UserAPI</span> userAPI<span class="token punctuation">;</span> <span class="token comment">// 该接口中的 @FeignClient 将拦截以下对于接口中的方法的调用，从而去服务提供者调用方法的具体实现</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token keyword">return</span> userAPI<span class="token punctuation">.</span><span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>启动项目访问 <span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5Ni9hbGl2ZQ==">http://localhost:96/alive</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210511184059653.png" alt="image-20210511184059653"></p><h4 id="api集成"><a class="anchor" href="#api集成">#</a> API 集成</h4><p>进一步可以将 API 集成到一个项目中，然后生成 jar 供服务生产方以及调用方使用</p><p>新建一个 SpringBoot 项目勾选 Web-Spring Web</p><p>API 接口</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/user"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserAPI</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="10"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>将该项目打包成 jar 并安装到本地 maven 仓库，之后供服务提供方以及调用方使用。<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDY2MDQwOC9hcnRpY2xlL2RldGFpbHMvMTE2Njk2Nzk2">打包方式</span></p><p>在服务提供方中引入 API 的 jar 依赖并实现 API 接口</p><p>mvn install:install-file -DgroupId=com.fan -DartifactId=user-api -Dversion=0.0.1-SNAPSHOT -Dpackag<br>ing=jar -Dfile=D:\Do\spring\springcloud\user-api\out\artifacts\user_api_jar\user-api.jar</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>user-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="8"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="9"></td><td><pre> * @DateTime: 2021-05-11 14:23</pre></td></tr><tr><td data-num="10"></td><td><pre> **/</pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController2</span> <span class="token keyword">implements</span> <span class="token class-name">UserAPI</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>在服务提供方中引入 API 的 jar 依赖并继承 API 接口</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.fan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>user-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"user-provider"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ConsumerAPI2</span> <span class="token keyword">extends</span> <span class="token class-name">UserAPI</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>之后在 controller 中调用接口中的方法</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="10"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="11"></td><td><pre> * @DateTime: 2021-05-11 16:49</pre></td></tr><tr><td data-num="12"></td><td><pre> **/</pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token class-name">UserAPI</span> userAPI<span class="token punctuation">;</span> <span class="token comment">// 该接口中的 @FeignClient 将拦截以下对于接口中的方法的调用，从而去服务提供者调用方法的具体实现</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token keyword">return</span> userAPI<span class="token punctuation">.</span><span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210512105546281.png" alt="image-20210512105546281"></p><h4 id="get和post"><a class="anchor" href="#get和post">#</a> Get 和 Post</h4><p>Feign 默认所有带参数的请求都是 Post，想要使用指定的提交方式需引入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.github.openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>feign-httpclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>并指明提交方式</p><pre><code>@RequestMapping(value = &quot;/alive&quot;, method = RequestMethod.POST)
或者@GetMapping(&quot;/findById&quot;)/@PostMapping(&quot;/findById&quot;)
</code></pre><p>当服务提供方使用 @RequestParam 指定请求参数时，那么服务调用方必须带有请求参数</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/findById"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="2"></td><td><pre>	<span class="token keyword">public</span> <span class="token class-name">Map</span> <span class="token function">findById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="3"></td><td><pre>	</pre></td></tr><tr><td data-num="4"></td><td><pre>	<span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/register"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">reg</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr></table></figure><p>案例：</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Value</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collections</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span>atomic<span class="token punctuation">.</span></span><span class="token class-name">AtomicInteger</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="12"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="13"></td><td><pre> * @DateTime: 2021-05-11 14:23</pre></td></tr><tr><td data-num="14"></td><td><pre> **/</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController3</span> <span class="token keyword">implements</span> <span class="token class-name">UserAPI</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;server.port&#125;"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token class-name">String</span> port<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">private</span> <span class="token class-name">AtomicInteger</span> count <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token comment">//    @GetMapping ("/alive") // 由于重写的接口方法在接口中已经标明了请求方式，所以此处不需要再标明请求方式</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"准备睡"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>            <span class="token comment">// TODO Auto-generated catch block</span></pre></td></tr><tr><td data-num="35"></td><td><pre>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">int</span> i <span class="token operator">=</span> count<span class="token punctuation">.</span><span class="token function">getAndIncrement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"====好的第："</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">"次调用"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"port:"</span> <span class="token operator">+</span> port<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token comment">//    @GetMapping("/getById")</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="48"></td><td><pre></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token comment">// 以下自定义一些接口，即 非 UserAPI 中的接口</span></pre></td></tr><tr><td data-num="51"></td><td><pre>    </pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="55"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="56"></td><td><pre>        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token string">"hi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="57"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="64"></td><td><pre></pre></td></tr><tr><td data-num="65"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="66"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre></pre></td></tr><tr><td data-num="72"></td><td><pre></pre></td></tr><tr><td data-num="73"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/postMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="74"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">postMap</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="75"></td><td><pre>        <span class="token comment">// TODO Auto-generated method stub</span></pre></td></tr><tr><td data-num="76"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="77"></td><td><pre>        <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonMap</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="78"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="79"></td><td><pre></pre></td></tr><tr><td data-num="80"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>服务调用方</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"user-provider"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ConsumerAPI2</span> <span class="token keyword">extends</span> <span class="token class-name">UserAPI</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre>    <span class="token comment">// 该接口中的 @GetMapping 或 @PostMapping 配合以上的 @FeignClient，拼接服务提供方的 URL，即 http://user-provider/getMap</span></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token comment">// 这也是 OPenFeign 相对于 Feign 的优势，可以配合 Spring 注解使用</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/postMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">postMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="27"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI2</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="14"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="15"></td><td><pre> * @DateTime: 2021-05-11 16:49</pre></td></tr><tr><td data-num="16"></td><td><pre> **/</pre></td></tr><tr><td data-num="17"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token class-name">ConsumerAPI2</span> api<span class="token punctuation">;</span> <span class="token comment">// 该接口中的 @FeignClient 将拦截以下对于接口中的方法的调用，从而去服务提供者调用方法的具体实现</span></pre></td></tr><tr><td data-num="21"></td><td><pre></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="26"></td><td><pre></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="33"></td><td><pre></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="36"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">getMap2</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>    <span class="token comment">//http://localhost:96/map3?id=100&amp;name=zs&amp;age=25</span></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre><span class="token comment">//		HashMap&lt;String, Object> map1 = new HashMap&lt;>(2);</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token comment">//</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token comment">//		map1.put("id", id);</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token comment">//		map1.put("name", name);</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">getMap3</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="50"></td><td><pre></pre></td></tr><tr><td data-num="51"></td><td><pre></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map4"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map4</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token comment">//		HashMap&lt;String, Object> map1 = new HashMap&lt;>(2);</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token comment">//</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment">//		map1.put("id", id);</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token comment">//		map1.put("name", name);</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">postMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="61"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="压缩"><a class="anchor" href="#压缩">#</a> 压缩</h3><p>服务端 provider 配置</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#服务端开启压缩</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">server.compression.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr></table></figure><p>调用方 consumer 配置</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#配置请求 GZIP 压缩</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">feign.compression.request.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#配置响应 GZIP 压缩</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token attr-name">feign.compression.response.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#单位是 B</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">feign.compression.request.min-request-size</span><span class="token punctuation">=</span><span class="token attr-value">100</span></pre></td></tr></table></figure><h3 id="权限"><a class="anchor" href="#权限">#</a> 权限</h3><p>feign 的默认配置类是：org.springframework.cloud.openfeign.FeignClientsConfiguration。默认定义了 feign 使用的编码器，解码器等。</p><p>允许使用 @FeignClient 的 configuration 的属性自定义 Feign 配置。自定义的配置优先级高于上面的 FeignClientsConfiguration。</p><p>通过权限的例子，学习 Feign 的自定义配置。</p><p>服务提供者。上述例子开放 service-valuation 的权限 后，访问。</p><pre><code class="language-sh">开放权限：
&lt;!-- 安全认证 --&gt;
&lt;dependency&gt;
	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
	&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;
&lt;/dependency&gt;

@Configuration
@EnableWebSecurity
public class WebSecurityConfig extends WebSecurityConfigurerAdapter &#123;

	@Override
	protected void configure(HttpSecurity http) throws Exception &#123;
		// 关闭csrf
		http.csrf().disable();
		// 表示所有的访问都必须认证，认证处理后才可以正常进行
		http.httpBasic().and().authorizeRequests().anyRequest().fullyAuthenticated();
		// 所有的rest服务一定要设置为无状态，以提升操作效率和性能
		http.sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);
	&#125;
&#125;
		
spring: 
  security: 
    user: 
      name: root
      password: root
      
      
</code></pre><p>继续 feign 原来访问，报错。401。</p><p>有如下两种方式：</p><ol><li>自定义配置类。</li><li>增加拦截器。</li></ol><p><strong>自定义配置</strong></p><pre><code class="language-sh">配置类：
public class FeignAuthConfiguration &#123;
	
	@Bean
	public BasicAuthRequestInterceptor basicAuthRequestInterceptor() &#123;
		return new BasicAuthRequestInterceptor(&quot;root&quot;, &quot;root&quot;);
	&#125;
&#125;

在feign上加配置
@FeignClient(name = &quot;service-valuation&quot;,configuration = FeignAuthConfiguration.class)


</code></pre><p>OK，可以正常访问了。</p><p>小结：如果在配置类上添加了 @Configuration 注解，并且该类在 @ComponentScan 所扫描的包中，那么该类中的配置信息就会被所有的 @FeignClient 共享。最佳实践是：不指定 @Configuration 注解（或者指定 configuration，用注解忽略），而是手动：</p><p>@FeignClient(name = &quot;service-valuation&quot;,configuration = FeignAuthConfiguration.class)</p><p><strong>拦截器</strong></p><pre><code class="language-sh">import feign.RequestInterceptor;
import feign.RequestTemplate;

public class MyBasicAuthRequestInterceptor implements RequestInterceptor &#123;

	@Override
	public void apply(RequestTemplate template) &#123;
		// TODO Auto-generated method stub
		template.header(&quot;Authorization&quot;, &quot;Basic cm9vdDpyb290&quot;);
	&#125;
&#125;

feign:
  client: 
    config:  
      service-valuation: 
        
        request-interceptors:
        - com.online.taxi.passenger.feign.interceptor.MyBasicAuthRequestInterceptor
</code></pre><p>代码中取消上面的配置，访问，报 401. 用下面的方式。</p><h3 id="属性定义"><a class="anchor" href="#属性定义">#</a> 属性定义</h3><ol><li>接上面例子，此例子和上面例子实现的功能一样。记得两者取一个即可。说明用属性而不是用属性中的 configuration。</li></ol><pre><code class="language-sh">定义拦截器
public class MyBasicAuthRequestInterceptor implements RequestInterceptor &#123;

	@Override
	public void apply(RequestTemplate template) &#123;
		// TODO Auto-generated method stub
		template.header(&quot;Authorization&quot;, &quot;Basic cm9vdDpyb290&quot;);
	&#125;
&#125;

配置文件
feign:
  client: 
    config:  
      service-valuation: 
        request-interceptors:
        - com.online.taxi.passenger.feign.interceptor.MyBasicAuthRequestInterceptor
        

</code></pre><p>再次访问，测试 Ok。</p><ol start="2"><li>扩展</li></ol><p>指定服务名称配置：</p><pre><code class="language-sh">   feign:
     client: 
       config:  
         service-valuation: 
           connect-timeout: 5000
           read-timeout: 5000
           logger-level: full
           
</code></pre><p>通用配置</p><pre><code class="language-sh">   feign:
     client: 
       config:  
         default: 
           connect-timeout: 5000
           read-timeout: 5000
           logger-level: full
</code></pre><p>属性配置比 Java 代码优先级高。也可通过配置设置 java 代码优先级高。</p><pre><code class="language-sh">feign:
	client: 
		default-to-properties: false
</code></pre><p>Feign 在方法上可以设置：@RequestMapping,@ResponseBody。</p><p>方法中的参数可以设置：@RequestBody 等等，Spring MVC 中的注解。</p><p>推荐使用 yml 配置方式，在 yml 中按 代码提示键，可以看到所有配置。</p><h3 id="超时以及重试"><a class="anchor" href="#超时以及重试">#</a> 超时以及重试</h3><p>Feign 默认集成了 Ribbon，所以可以通过设置 Ribbon 相关属性来设置超时以及重试次数。Ribbon 的重试机制和 Feign 的重试机制有冲突，所以源码中默认关闭 Feign 的重试机制，使用 Ribbon 的重试机制，使用 ribbon 重试机制，请求失败后，每个 6 秒会重新尝试</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#连接服务超时（ms），超过该时间后重试</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">ribbon.ConnectTimeout</span><span class="token punctuation">=</span><span class="token attr-value">1000</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#通信（业务逻辑执行）超时（ms），超过该时间后重试</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token attr-name">ribbon.ReadTimeout</span><span class="token punctuation">=</span><span class="token attr-value">2000</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token comment">#同一台实例最大重试次数，不包括首次调用</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token attr-name">ribbon.MaxAutoRetries</span><span class="token punctuation">=</span><span class="token attr-value">1</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#重试负载均衡其他的实例最大重试次数，不包括首次调用</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">ribbon.MaxAutoRetriesNextServer</span><span class="token punctuation">=</span><span class="token attr-value">1</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">#是否所有操作都重试</span></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token attr-name">ribbon.OkToRetryOnAllOperations</span><span class="token punctuation">=</span><span class="token attr-value">false</span></pre></td></tr></table></figure><p>对于服务调用时的超时以及重试（即容错机制）的更好的解决方式就是 Hystrix</p><h2 id="hystrix"><a class="anchor" href="#hystrix">#</a> Hystrix</h2><p>Hystrix 实现了 超时机制和断路器模式，具有降级、限流、熔断功能。</p><p>Hystrix 是 Netflix 开源的一个类库，用于隔离远程系统、服务或者第三方库，防止级联失败，从而提升系统的可用性与容错性。主要有以下几点功能：</p><ol><li>为系统提供保护机制。在依赖的服务出现高延迟或失败时，为系统提供保护和控制。</li><li>防止雪崩。</li><li>包裹请求：使用 HystrixCommand（或 HystrixObservableCommand）包裹对依赖的调用逻辑，每个命令在独立线程中运行。</li><li>跳闸机制：当某服务失败率达到一定的阈值时，Hystrix 可以自动跳闸，停止请求该服务一段时间。</li><li>资源隔离：Hystrix 为每个请求都的依赖都维护了一个小型线程池，如果该线程池已满，发往该依赖的请求就被立即拒绝，而不是排队等候，从而加速失败判定。防止级联失败。</li><li>快速失败：Fail Fast。同时能快速恢复。侧重点是：（不去真正的请求服务，发生异常再返回），而是直接失败。</li><li>监控：Hystrix 可以实时监控运行指标和配置的变化，提供近实时的监控、报警、运维控制。</li><li>回退机制：fallback，当请求失败、超时、被拒绝，或当断路器被打开时，执行回退逻辑。回退逻辑我们自定义，提供优雅的服务降级。</li><li>自我修复：断路器打开一段时间后，会自动进入 “半开” 状态，可以进行打开，关闭，半开状态的转换。前面有介绍。</li></ol><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">try</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="2"></td><td><pre>    <span class="token number">1.</span>向服务方发起请求</pre></td></tr><tr><td data-num="3"></td><td><pre>        <span class="token number">1.1</span>连接超时并记录这次请求</pre></td></tr><tr><td data-num="4"></td><td><pre>        限流（隔离）：同一个URI的请求分配到同一个线程池去请求，将不同的业务请求分配到不同的线程池达到隔离效		    果，且每一个线程池的线程数固定，以此达到限流的效果</pre></td></tr><tr><td data-num="5"></td><td><pre>        熔断：记录请求失败次数，当达到设定的阈值时就进行熔断，如直接<span class="token keyword">throw</span> <span class="token class-name">Exception</span>，然后进入<span class="token keyword">catch</span>中处理</pre></td></tr><tr><td data-num="6"></td><td><pre>        <span class="token number">1.2</span>尝试向其他服务器发起请求</pre></td></tr><tr><td data-num="7"></td><td><pre>    <span class="token number">2.</span>仍然无法请求到</pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token number">3.</span>返回错误信息（降级方式一）</pre></td></tr><tr><td data-num="10"></td><td><pre>        或者</pre></td></tr><tr><td data-num="11"></td><td><pre>    <span class="token number">4.</span>其他通知方式或写到MQ（降级方式二）</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="hystrix单独使用"><a class="anchor" href="#hystrix单独使用">#</a> Hystrix 单独使用</h3><p>加入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>				spring-cloud-starter-netflix-hystrix</pre></td></tr><tr><td data-num="5"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.8.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>测试程序</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>hystrix</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">HystrixCommand</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">HystrixCommandGroupKey</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">ExecutionException</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span><span class="token class-name">Future</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="11"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="12"></td><td><pre> * @DateTime: 2021-05-12 17:49</pre></td></tr><tr><td data-num="13"></td><td><pre> **/</pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HystrixTest</span> <span class="token keyword">extends</span> <span class="token class-name">HystrixCommand</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token keyword">protected</span> <span class="token class-name">HystrixTest</span><span class="token punctuation">(</span><span class="token class-name">HystrixCommandGroupKey</span> group<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>        <span class="token keyword">super</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="21"></td><td><pre>     * 业务逻辑</pre></td></tr><tr><td data-num="22"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="23"></td><td><pre>     * @throws Exception</pre></td></tr><tr><td data-num="24"></td><td><pre>     */</pre></td></tr><tr><td data-num="25"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"业务逻辑！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"ok"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="33"></td><td><pre>     * 出现异常时回调的方法</pre></td></tr><tr><td data-num="34"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="35"></td><td><pre>     */</pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">protected</span> <span class="token class-name">Object</span> <span class="token function">getFallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"异常处理！！！"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre></pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>        <span class="token comment">//	HystrixTest hystrixTest = new HystrixTest(HystrixCommandGroupKey.Factory.asKey("ext"));</span></pre></td></tr><tr><td data-num="45"></td><td><pre>        <span class="token comment">/**</span></pre></td></tr><tr><td data-num="46"></td><td><pre>         * execute ()：以同步阻塞方式执行 run ()。以 demo 为例，调用 execute () 后，</pre></td></tr><tr><td data-num="47"></td><td><pre>         * hystrix 先创建一个新线程运行 run ()，</pre></td></tr><tr><td data-num="48"></td><td><pre>         * 	接着调用程序要在 execute () 调用处一直阻塞着，直到 run () 运行完成</pre></td></tr><tr><td data-num="49"></td><td><pre>         */</pre></td></tr><tr><td data-num="50"></td><td><pre>        <span class="token comment">//	System.out.println("result:" + hystrixTest.execute());</span></pre></td></tr><tr><td data-num="51"></td><td><pre></pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token comment">/**</span></pre></td></tr><tr><td data-num="53"></td><td><pre>         * queue ()：以异步非阻塞方式执行 run ()。以 demo 为例，</pre></td></tr><tr><td data-num="54"></td><td><pre>         * 	一调用 queue () 就直接返回一个 Future 对象，</pre></td></tr><tr><td data-num="55"></td><td><pre>         * 	同时 hystrix 创建一个新线程运行 run ()，</pre></td></tr><tr><td data-num="56"></td><td><pre>         * 	调用程序通过 Future.get () 拿到 run () 的返回结果，</pre></td></tr><tr><td data-num="57"></td><td><pre>         * 	而 Future.get () 是阻塞执行的</pre></td></tr><tr><td data-num="58"></td><td><pre>         */</pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> futureResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HystrixTest</span><span class="token punctuation">(</span><span class="token class-name">HystrixCommandGroupKey<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">asKey</span><span class="token punctuation">(</span><span class="token string">"ext"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">queue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="62"></td><td><pre>            result <span class="token operator">=</span> futureResult<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 等待 run () 的执行结果，如果出现异常则返回 getFallback () 的结果</span></pre></td></tr><tr><td data-num="63"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="64"></td><td><pre>            <span class="token comment">// TODO Auto-generated catch block</span></pre></td></tr><tr><td data-num="65"></td><td><pre>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="66"></td><td><pre>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExecutionException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="67"></td><td><pre>            <span class="token comment">// TODO Auto-generated catch block</span></pre></td></tr><tr><td data-num="68"></td><td><pre>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="70"></td><td><pre></pre></td></tr><tr><td data-num="71"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"程序结果："</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="72"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="73"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><h3 id="与resttemplate整合"><a class="anchor" href="#与resttemplate整合">#</a> 与 RestTemplate 整合</h3><p>首先在启动类山加上注解 @EnableCircuitBreaker，并引入 RestTemplate</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>circuitbreaker<span class="token punctuation">.</span></span><span class="token class-name">EnableCircuitBreaker</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalanced</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">EnableFeignClients</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token annotation punctuation">@SpringBootApplication</span></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token annotation punctuation">@EnableCircuitBreaker</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token annotation punctuation">@EnableFeignClients</span> <span class="token comment">// 使得 OpenFeign 相关的组件和配置机制生效</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserConsumerApplication</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">UserConsumerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>	<span class="token annotation punctuation">@Bean</span></pre></td></tr><tr><td data-num="21"></td><td><pre>	<span class="token annotation punctuation">@LoadBalanced</span></pre></td></tr><tr><td data-num="22"></td><td><pre>	<span class="token class-name">RestTemplate</span> <span class="token function">getRestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>	<span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>service</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span>contrib<span class="token punctuation">.</span>javanica<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">HystrixCommand</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="9"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="10"></td><td><pre> * @DateTime: 2021-05-13 18:50</pre></td></tr><tr><td data-num="11"></td><td><pre> **/</pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token annotation punctuation">@Service</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestService</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="17"></td><td><pre></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token comment">// 如果远程 API 调用出现异常，那么就会调用 fallback 来进行降级操作</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>defaultFallback <span class="token operator">=</span> <span class="token string">"fallback"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">"http://user-provider/alive"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>        <span class="token class-name">String</span> res <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">return</span> res<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="27"></td><td><pre>     * 降级逻辑处理</pre></td></tr><tr><td data-num="28"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="29"></td><td><pre>     */</pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"降级了！！！"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">RestService</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="11"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="12"></td><td><pre> * @DateTime: 2021-05-11 16:49</pre></td></tr><tr><td data-num="13"></td><td><pre> **/</pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token class-name">RestService</span> restService<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="18"></td><td><pre></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="21"></td><td><pre>        <span class="token keyword">return</span> restService<span class="token punctuation">.</span><span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>测试：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5Ni9hbGl2ZTI=">http://localhost:96/alive2</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210513190717439.png" alt="image-20210513190717439"></p><h3 id="与feign整合"><a class="anchor" href="#与feign整合">#</a> 与 Feign 整合</h3><h4 id="方式一"><a class="anchor" href="#方式一">#</a> 方式一</h4><p>直接降级，在 API 方法中进行降级处理</p><p>在服务调用方的 @FeignClient 中加入属性 fallback 指定一个降级处理类，代表 ConsumerAPI2 接口以及 UserAPI 接口中所有方法的异常都会在 fallback 所指定的类中进行处理，如降级、熔断处理</p><p>引入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>				spring-cloud-starter-netflix-hystrix</pre></td></tr><tr><td data-num="5"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.8.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>注意：此处的 UserAPI 接口上不可以有 @RequestMapping，否则 Hystrix 会由于重复注册 UserAPI 接口中的方法而导致 @RequestMapping 中路径重复报错</p><pre><code class="language-cmd">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'com.fan.userInterface.ConsumerAPI' method 
com.fan.userInterface.ConsumerAPI#getMap(Integer)
to &#123;GET /user/getMap&#125;: There is already 'userProviderFallBack' bean method
com.fan.hystrix.UserProviderFallBack#getMap(Integer) mapped.
</code></pre><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">UserProviderFallBack</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"user-provider"</span><span class="token punctuation">,</span> fallback <span class="token operator">=</span> <span class="token class-name">UserProviderFallBack</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ConsumerAPI2</span> <span class="token keyword">extends</span> <span class="token class-name">UserAPI</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="14"></td><td><pre></pre></td></tr><tr><td data-num="15"></td><td><pre>    <span class="token comment">// 该接口中的 @GetMapping 或 @PostMapping 配合以上的 @FeignClient，拼接服务提供方的 URL，即 http://user-provider/getMap</span></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token comment">// 这也是 OPenFeign 相对于 Feign 的优势，可以配合 Spring 注解使用</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="24"></td><td><pre>     * 传多个参数可以用 map</pre></td></tr><tr><td data-num="25"></td><td><pre>     * @param map</pre></td></tr><tr><td data-num="26"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="27"></td><td><pre>     */</pre></td></tr><tr><td data-num="28"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/postMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">postMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>各个 API 对于降级的处理类</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>hystrix</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI2</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="9"></td><td><pre> * 调用 API 时如果调不通或者出现其他异常时，对应的 API 中对于降级的逻辑处理</pre></td></tr><tr><td data-num="10"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="11"></td><td><pre> * @DateTime: 2021-05-13 9:33</pre></td></tr><tr><td data-num="12"></td><td><pre> **/</pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token annotation punctuation">@Component</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserProviderFallBack</span> <span class="token keyword">implements</span> <span class="token class-name">ConsumerAPI2</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="18"></td><td><pre>        <span class="token keyword">return</span> <span class="token string">"降级了！！！"</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="35"></td><td><pre></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="37"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap3</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">postMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>开启 Hystrix</p><p>Feign 默认不会使用 Hystrix 来进行降级处理，需要手动开启</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#开启 Hystrix</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">feign.hystrix.enabled</span><span class="token punctuation">=</span><span class="token attr-value">true</span></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI2</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI3</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="15"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="16"></td><td><pre> * @DateTime: 2021-05-11 16:49</pre></td></tr><tr><td data-num="17"></td><td><pre> **/</pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token class-name">ConsumerAPI2</span> api<span class="token punctuation">;</span> <span class="token comment">// 该接口中的 @FeignClient 将拦截以下对于接口中的方法的调用，从而去服务提供者调用方法的具体实现</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    </pre></td></tr><tr><td data-num="23"></td><td><pre>	<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="24"></td><td><pre>   	 <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="25"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="26"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="27"></td><td><pre></pre></td></tr><tr><td data-num="28"></td><td><pre></pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="31"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="36"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">getMap2</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="40"></td><td><pre></pre></td></tr><tr><td data-num="41"></td><td><pre>    <span class="token comment">//http://localhost:96/map3?id=100&amp;name=zs&amp;age=25</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="43"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="44"></td><td><pre><span class="token comment">//		HashMap&lt;String, Object> map1 = new HashMap&lt;>(2);</span></pre></td></tr><tr><td data-num="45"></td><td><pre><span class="token comment">//</span></pre></td></tr><tr><td data-num="46"></td><td><pre><span class="token comment">//		map1.put("id", id);</span></pre></td></tr><tr><td data-num="47"></td><td><pre><span class="token comment">//		map1.put("name", name);</span></pre></td></tr><tr><td data-num="48"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="49"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">getMap3</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="51"></td><td><pre></pre></td></tr><tr><td data-num="52"></td><td><pre></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map4"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="54"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map4</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token comment">//		HashMap&lt;String, Object> map1 = new HashMap&lt;>(2);</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment">//</span></pre></td></tr><tr><td data-num="57"></td><td><pre><span class="token comment">//		map1.put("id", id);</span></pre></td></tr><tr><td data-num="58"></td><td><pre><span class="token comment">//		map1.put("name", name);</span></pre></td></tr><tr><td data-num="59"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="60"></td><td><pre>        <span class="token keyword">return</span> api<span class="token punctuation">.</span><span class="token function">postMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="61"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="62"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>此时，模拟调用 API 时出现的异常，从而制造降级效果，例如，关闭服务提供方后调用 API</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210513163308105.png" alt="image-20210513163308105"></p><h4 id="方式二"><a class="anchor" href="#方式二">#</a> 方式二</h4><p>对不同的错误异常进行不同的降级处理</p><p>在 @FeignClient 中使用 fallbackFactory 属性指定一个降级处理工厂</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">UserProviderFallBack</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>hystrix<span class="token punctuation">.</span></span><span class="token class-name">UserProviderFallBackFactory</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PostMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="12"></td><td><pre></pre></td></tr><tr><td data-num="13"></td><td><pre><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"user-provider"</span><span class="token punctuation">,</span> fallbackFactory <span class="token operator">=</span> <span class="token class-name">UserProviderFallBackFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ConsumerAPI3</span> <span class="token keyword">extends</span> <span class="token class-name">UserAPI</span><span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="15"></td><td><pre></pre></td></tr><tr><td data-num="16"></td><td><pre>    <span class="token comment">// 该接口中的 @GetMapping 或 @PostMapping 配合以上的 @FeignClient，拼接服务提供方的 URL，即 http://user-provider/getMap</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token comment">// 这也是 OPenFeign 相对于 Feign 的优势，可以配合 Spring 注解使用</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="19"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="20"></td><td><pre></pre></td></tr><tr><td data-num="21"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="22"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token comment">/**</span></pre></td></tr><tr><td data-num="25"></td><td><pre>     * 传多个参数可以用 map</pre></td></tr><tr><td data-num="26"></td><td><pre>     * @param map</pre></td></tr><tr><td data-num="27"></td><td><pre>     * @return</pre></td></tr><tr><td data-num="28"></td><td><pre>     */</pre></td></tr><tr><td data-num="29"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/getMap3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="30"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">"/postMap"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">postMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="34"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>降级 处理工厂</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>hystrix</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI2</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI3</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>builder<span class="token punctuation">.</span></span><span class="token class-name">ToStringBuilder</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FallbackFactory</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre></pre></td></tr><tr><td data-num="11"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="12"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="13"></td><td><pre> * @DateTime: 2021-05-13 16:21</pre></td></tr><tr><td data-num="14"></td><td><pre> **/</pre></td></tr><tr><td data-num="15"></td><td><pre><span class="token annotation punctuation">@Component</span></pre></td></tr><tr><td data-num="16"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserProviderFallBackFactory</span> <span class="token keyword">implements</span> <span class="token class-name">FallbackFactory</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConsumerAPI3</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="17"></td><td><pre>    <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="18"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">ConsumerAPI3</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span> cause<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="19"></td><td><pre>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConsumerAPI3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="21"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="22"></td><td><pre>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="23"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="24"></td><td><pre></pre></td></tr><tr><td data-num="25"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="26"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="27"></td><td><pre>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="28"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="29"></td><td><pre></pre></td></tr><tr><td data-num="30"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="31"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">getMap3</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="32"></td><td><pre>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="33"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="34"></td><td><pre></pre></td></tr><tr><td data-num="35"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="36"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">postMap</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="37"></td><td><pre>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="38"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="39"></td><td><pre></pre></td></tr><tr><td data-num="40"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="41"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cause<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="43"></td><td><pre>                cause<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 打印错误信息的堆栈信息</span></pre></td></tr><tr><td data-num="44"></td><td><pre>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">ToStringBuilder</span><span class="token punctuation">.</span><span class="token function">reflectionToString</span><span class="token punctuation">(</span>cause<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="45"></td><td><pre>                <span class="token keyword">return</span> <span class="token string">"降级了！！！"</span> <span class="token operator">+</span> <span class="token string">"："</span> <span class="token operator">+</span> cause<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="47"></td><td><pre></pre></td></tr><tr><td data-num="48"></td><td><pre>            <span class="token annotation punctuation">@Override</span></pre></td></tr><tr><td data-num="49"></td><td><pre>            <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="50"></td><td><pre>                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="51"></td><td><pre>            <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="52"></td><td><pre>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="53"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>controller</p><figure class="highlight java"><figcaption data-lang="java"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="2"></td><td><pre></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span></span><span class="token class-name">UserAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI2</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>fan<span class="token punctuation">.</span>userInterface<span class="token punctuation">.</span></span><span class="token class-name">ConsumerAPI3</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="11"></td><td><pre></pre></td></tr><tr><td data-num="12"></td><td><pre><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="13"></td><td><pre></pre></td></tr><tr><td data-num="14"></td><td><pre><span class="token comment">/**</span></pre></td></tr><tr><td data-num="15"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num="16"></td><td><pre> * @DateTime: 2021-05-11 16:49</pre></td></tr><tr><td data-num="17"></td><td><pre> **/</pre></td></tr><tr><td data-num="18"></td><td><pre><span class="token annotation punctuation">@RestController</span></pre></td></tr><tr><td data-num="19"></td><td><pre><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainController</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="20"></td><td><pre><span class="token comment">//    @Autowired</span></pre></td></tr><tr><td data-num="21"></td><td><pre><span class="token comment">//    ConsumerAPI2 api; // 该接口中的 @FeignClient 将拦截以下对于接口中的方法的调用，从而去服务提供者调用方法的具体实现</span></pre></td></tr><tr><td data-num="22"></td><td><pre></pre></td></tr><tr><td data-num="23"></td><td><pre>    <span class="token annotation punctuation">@Autowired</span></pre></td></tr><tr><td data-num="24"></td><td><pre>    <span class="token class-name">ConsumerAPI3</span> api3<span class="token punctuation">;</span></pre></td></tr><tr><td data-num="25"></td><td><pre></pre></td></tr><tr><td data-num="26"></td><td><pre><span class="token comment">/*@GetMapping("/alive")</span></pre></td></tr><tr><td data-num="27"></td><td><pre>    public String alive() &#123;</pre></td></tr><tr><td data-num="28"></td><td><pre>        return api.alive();</pre></td></tr><tr><td data-num="29"></td><td><pre>    &#125;*/</pre></td></tr><tr><td data-num="30"></td><td><pre></pre></td></tr><tr><td data-num="31"></td><td><pre></pre></td></tr><tr><td data-num="32"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/alive"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="33"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="34"></td><td><pre>        <span class="token keyword">return</span> api3<span class="token punctuation">.</span><span class="token function">alive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="35"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="36"></td><td><pre></pre></td></tr><tr><td data-num="37"></td><td><pre></pre></td></tr><tr><td data-num="38"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="39"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="40"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="41"></td><td><pre>        <span class="token keyword">return</span> api3<span class="token punctuation">.</span><span class="token function">getMap</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="42"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="43"></td><td><pre></pre></td></tr><tr><td data-num="44"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map2"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="45"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map2</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> id<span class="token punctuation">,</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="46"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="47"></td><td><pre>        <span class="token keyword">return</span> api3<span class="token punctuation">.</span><span class="token function">getMap2</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="48"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="49"></td><td><pre></pre></td></tr><tr><td data-num="50"></td><td><pre>    <span class="token comment">//http://localhost:96/map3?id=100&amp;name=zs&amp;age=25</span></pre></td></tr><tr><td data-num="51"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map3"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="52"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map3</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="53"></td><td><pre><span class="token comment">//		HashMap&lt;String, Object> map1 = new HashMap&lt;>(2);</span></pre></td></tr><tr><td data-num="54"></td><td><pre><span class="token comment">//</span></pre></td></tr><tr><td data-num="55"></td><td><pre><span class="token comment">//		map1.put("id", id);</span></pre></td></tr><tr><td data-num="56"></td><td><pre><span class="token comment">//		map1.put("name", name);</span></pre></td></tr><tr><td data-num="57"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="58"></td><td><pre>        <span class="token keyword">return</span> api3<span class="token punctuation">.</span><span class="token function">getMap3</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="59"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="60"></td><td><pre></pre></td></tr><tr><td data-num="61"></td><td><pre></pre></td></tr><tr><td data-num="62"></td><td><pre>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/map4"</span><span class="token punctuation">)</span></pre></td></tr><tr><td data-num="63"></td><td><pre>    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> <span class="token function">map4</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span></pre></td></tr><tr><td data-num="64"></td><td><pre><span class="token comment">//		HashMap&lt;String, Object> map1 = new HashMap&lt;>(2);</span></pre></td></tr><tr><td data-num="65"></td><td><pre><span class="token comment">//</span></pre></td></tr><tr><td data-num="66"></td><td><pre><span class="token comment">//		map1.put("id", id);</span></pre></td></tr><tr><td data-num="67"></td><td><pre><span class="token comment">//		map1.put("name", name);</span></pre></td></tr><tr><td data-num="68"></td><td><pre>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="69"></td><td><pre>        <span class="token keyword">return</span> api3<span class="token punctuation">.</span><span class="token function">postMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span></pre></td></tr><tr><td data-num="70"></td><td><pre>    <span class="token punctuation">&#125;</span></pre></td></tr><tr><td data-num="71"></td><td><pre><span class="token punctuation">&#125;</span></pre></td></tr></table></figure><p>请求 API：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5Ni9hbGl2ZQ==">http://localhost:96/alive</span></p><p>结果控制台打印报错堆栈信息：这是由于我们手动关闭服务端造成的客户端的降级效果</p><pre><code class="language-cmd">2021-05-13 18:17:15.675  WARN 19584 --- [oundedElastic-1] o.s.c.l.core.RoundRobinLoadBalancer      : No servers available for service: user-provider
2021-05-13 18:17:15.675  WARN 19584 --- [p-nio-96-exec-3] .s.c.o.l.FeignBlockingLoadBalancerClient : Load balancer does not contain an instance for the service user-provider
2021-05-13 18:17:15.678 ERROR 19584 --- [p-nio-96-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is feign.FeignException$ServiceUnavailable: [503] during [GET] to [http://user-provider/alive] [ConsumerAPI3#alive()]: [Load balancer does not contain an instance for the service user-provider]] with root cause

feign.FeignException$ServiceUnavailable: [503] during [GET] to [http://user-provider/alive] [ConsumerAPI3#alive()]: [Load balancer does not contain an instance for the service user-provider]
	at feign.FeignException.serverErrorStatus(FeignException.java:237) ~[feign-core-10.10.1.jar:na]
	at feign.FeignException.errorStatus(FeignException.java:180) ~[feign-core-10.10.1.jar:na]
	at feign.FeignException.errorStatus(FeignException.java:169) ~[feign-core-10.10.1.jar:na]
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:92) ~[feign-core-10.10.1.jar:na]
	at feign.AsyncResponseHandler.handleResponse(AsyncResponseHandler.java:96) ~[feign-core-1

</code></pre><h3 id="信号量隔离与线程隔离"><a class="anchor" href="#信号量隔离与线程隔离">#</a> 信号量隔离与线程隔离</h3><p>默认情况下 hystrix 使用线程池控制请求隔离。</p><p>线程池隔离技术，将不同的服务请求分配到不同的线程池进行服务隔离，是用 Hystrix 自己的线程去执行调用；而信号量隔离技术，是直接让 tomcat 线程去调用依赖服务。信号量隔离，只是一道关卡，信号量有多少，就允许多少个 tomcat 线程通过它，然后去执行。信号量隔离主要维护的是 Tomcat 的线程，不需要内部线程池，更加轻量级。</p><p>配置项：</p><pre><code>hystrix.command.default.execution.isolation.strategy 隔离策略，默认是Thread, 可选Thread｜Semaphore
thread 通过线程数量来限制并发请求数，可以提供额外的保护，但有一定的延迟。一般用于网络调用
semaphore 通过semaphore count来限制并发请求数，适用于无网络的高并发请求
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds 命令执行超时时间，默认1000ms
hystrix.command.default.execution.timeout.enabled 执行是否启用超时，默认启用true
hystrix.command.default.execution.isolation.thread.interruptOnTimeout 发生超时是是否中断，默认true
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests 最大并发请求数，默认10，该参数当使用ExecutionIsolationStrategy.SEMAPHORE策略时才有效。如果达到最大并发请求数，请求会被拒绝。理论上选择semaphore size的原则和选择thread size一致，但选用semaphore时每次执行的单元要比较小且执行速度快（ms级别），否则的话应该用thread。
semaphore应该占整个容器（tomcat）的线程池的一小部分。
</code></pre><p>改为信号隔离：</p><pre><code>hystrix.command.default.execution.isolation.strategy=SEMAPHORE
</code></pre><h3 id="开启dashboard"><a class="anchor" href="#开启dashboard">#</a> 开启 dashboard</h3><p>启动类</p><pre><code>@EnableHystrixDashboard
</code></pre><p>引入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		spring-cloud-starter-netflix-hystrix-dashboard</pre></td></tr><tr><td data-num="5"></td><td><pre>	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="7"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="8"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="9"></td><td><pre>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>加入配置：</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#开启 dashboard 健康上报</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span><span class="token attr-value">*</span></pre></td></tr></table></figure><p>健康上报：</p><p><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5Ni9hY3R1YXRvci9oeXN0cml4LnN0cmVhbQ==">http://localhost:96/actuator/hystrix.stream</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210514105742428.png" alt="image-20210514105742428"></p><p>将健康上报图形化：</p><p><span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5Ni9oeXN0cml4">http://localhost:96/hystrix</span></p><p>然后输入以上健康上报的 URL</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210514110026458.png" alt="image-20210514110026458"></p><p>此时报错</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210514110741368.png" alt="image-20210514110741368"></p><p>控制台提示：</p><pre><code class="language-cmd">2021-05-14 11:04:33.241  WARN 19376 --- [p-nio-96-exec-9] ashboardConfiguration$ProxyStreamServlet : Origin parameter: http://localhost:96/actuator/hystrix.stream is not in the allowed list of proxy host names.  If it should be allowed add it to hystrix.dashboard.proxyStreamAllowList.
2021-05-14 11:04:33.242  WARN 19376 --- [p-nio-96-exec-8] ashboardConfiguration$ProxyStreamServlet : Origin parameter: http://localhost:96/actuator/hystrix.stream is not in the allowed list of proxy host names.  If it should be allowed add it to hystrix.dashboard.proxyStreamAllowList.
</code></pre><p>解决：</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8wYTY4MmU0NzgxYjA=">参考一</span></p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2doeWdob3N0L2FydGljbGUvZGV0YWlscy8xMDgwNTMyMDY=">参考二</span></p><p>加入配置</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">hystrix.dashboard.proxy-stream-allow-list</span><span class="token punctuation">=</span><span class="token attr-value">*</span></pre></td></tr></table></figure><p>此时再次访问：</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210514113928477.png" alt="image-20210514113928477"></p><p>访问任何一个 API 接口，便可看到健康信息了。从下图可以看出，Hystrix 默认使用线程池隔离客户端请求，一个服务对应一个线程池，且线程池默认大小为 10</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210514114202980.png" alt="image-20210514114202980"></p><h2 id="zuul"><a class="anchor" href="#zuul">#</a> Zuul</h2><p>微服务没有网关，会有下面的问题：</p><ol><li><p>客户端请求多个微服务，增加了客户端复杂性，每个微服务都要做用户认证，限流等，避免和多个微服务打交道的复杂性。</p></li><li><p>有跨域问题，不在同一个域。</p></li><li><p>认证复杂，每个服务都要独立认证，服务要求的权限不一致。</p></li><li><p>难以重构。因为微服务被客户端调用着，重构难以实施。</p></li></ol><p>Zuul 是 Netflix 开源的微服务网关，核心是一系列过滤器。这些过滤器可以完成以下功能。Zuul 默认集成了：Ribbon 和 Hystrix。</p><ol><li>是所有微服务入口，进行分发。</li><li>身份认证与安全。识别合法的请求，拦截不合法的请求。</li><li>监控。在入口处监控，更全面。</li><li>动态路由。动态将请求分发到不同的后端集群。</li><li>压力测试。可以逐渐增加对后端服务的流量，进行测试。</li><li>负载均衡。也是用 ribbon。</li><li>限流（望京超市）。比如我每秒只要 1000 次，1001 次就不让访问了。</li><li>服务熔断</li></ol><h3 id="启用网关"><a class="anchor" href="#启用网关">#</a> 启用网关</h3><p>新建一个 SpringBoot 项目，勾选 Spring Cloud Discovery-Eureka Discovery Client、Spring Cloud Routing-Zuul</p><p>如果 SpringBoot 的 starter 不稳定，可以换成 <span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5hbGl5dW4uY29tLw==">https://start.aliyun.com/</span></p><p>配置项</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://euk1.com:7001/eureka/</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">zuul-server</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">81</span></pre></td></tr></table></figure><p>启动类加上注解 @EnableZuulProxy</p><p>测试，结果报错：</p><pre><code class="language-cmd">com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:198) ~[spring-cloud-netflix-zuul-2.2.8.RELEASE.jar:2.2.8.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:173) ~[spring-cloud-netflix-zuul-2.2.8.RELEASE.jar:2.2.8.RELEASE]
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:119) ~[spring-cloud-netflix-zuul-2.2.8.RELEASE.jar:2.2.8.RELEASE]
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116) ~[zuul-core-1.3.1.jar:1.3.1]
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81) ~[zuul-core-1.3.1.jar:1.3.1]
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166) [spring-webmvc-5.3.6.jar:5.3.6]
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:45) [spring-cloud-netflix-zuul-2.2.8.RELEASE.jar:2.2.8.RELEASE]
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52) [spring-webmvc-5.3.6.jar:5.3.6]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1060) [spring-webmvc-5.3.6.jar:5.3.6]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:962) [spring-webmvc-5.3.6.jar:5.3.6]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) [spring-webmvc-5.3.6.jar:5.3.6]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) [spring-webmvc-5.3.6.jar:5.3.6]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626) [tomcat-embed-core-9.0.45.jar:4.0.FR]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) [spring-webmvc-5.3.6.jar:5.3.6]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733) [tomcat-embed-core-9.0.45.jar:4.0.FR]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) [tomcat-embed-websocket-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) [spring-web-5.3.6.jar:5.3.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.6.jar:5.3.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) [spring-web-5.3.6.jar:5.3.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.6.jar:5.3.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:93) [spring-boot-actuator-2.4.5.jar:2.4.5]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.6.jar:5.3.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) [spring-web-5.3.6.jar:5.3.6]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) [spring-web-5.3.6.jar:5.3.6]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_202]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.45.jar:9.0.45]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_202]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: user-consumer
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.3.0.jar:2.3.0]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]2

</code></pre><p>问题原因：找不到服务</p><p>解决：手动配置 url 映射。<span class="exturl" data-url="aHR0cHM6Ly93d3cucGlhbnNoZW4uY29tL2FydGljbGUvMjE5NTEyMDI1Ny8=">参考</span></p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#服务的路径，path 可自定义，如 /xx/**，只要下面的服务 url 正确即可</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">zuul.routes.user-consumer.path</span><span class="token punctuation">=</span><span class="token attr-value">/user-consumer/**</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#以上服务的路径对应的实际 URL。单个服务的 url 映射</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token comment">#zuul.routes.user-consumer.url=http://localhost:96</span></pre></td></tr><tr><td data-num="5"></td><td><pre><span class="token comment">#多个服务的 url 映射</span></pre></td></tr><tr><td data-num="6"></td><td><pre><span class="token attr-name">user-consumer.ribbon.listOfServers</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:96,http://localhost:97</span></pre></td></tr><tr><td data-num="7"></td><td><pre></pre></td></tr><tr><td data-num="8"></td><td><pre><span class="token comment">#如果要直接访问服务提供方，也需要配置 url 映射</span></pre></td></tr><tr><td data-num="9"></td><td><pre><span class="token attr-name">zuul.routes.user-provider.path</span><span class="token punctuation">=</span><span class="token attr-value">/user-provider/**</span></pre></td></tr><tr><td data-num="10"></td><td><pre><span class="token attr-name">user-provider.ribbon.listOfServers</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:86,http://localhost:87</span></pre></td></tr></table></figure><p>测试：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo4MS91c2VyLWNvbnN1bWVyL2FsaXZlMg==">http://localhost:81/user-consumer/alive2</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210517151730482.png" alt="image-20210517151730482"></p><h3 id="负载均衡"><a class="anchor" href="#负载均衡">#</a> 负载均衡</h3><p>负载均衡策略修改，默认是轮询方式</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#修改访问指定服务的负载均衡策略，默认是轮询方式</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">user-consumer.ribbon.NFLoadBalancerRuleClassName</span><span class="token punctuation">=</span><span class="token attr-value">com.netflix.loadbalancer.RandomRule</span></pre></td></tr></table></figure><h3 id="路由端点"><a class="anchor" href="#路由端点">#</a> 路由端点</h3><p>调试的时候，看网关请求的地址，以及 映射是否正确。网关请求有误时，可以通过此处排查错误。</p><p>配置</p><pre><code>management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.health.enabled=true
management.endpoint.routes.enabled=true
</code></pre><h3 id="配置指定微服务的访问路径"><a class="anchor" href="#配置指定微服务的访问路径">#</a> 配置指定微服务的访问路径</h3><ol><li>通过服务名配置（虚拟主机名）</li></ol><pre><code class="language-sh">zuul.routes.user-consumer=/xxoo/**
</code></pre><p>2. 自定义映射</p><pre><code>zuul.routes.xx.path=/xx/**
zuul.routes.xx.url=http:localhost:96
</code></pre><ol start="3"><li>. 自定义下的负载均衡</li></ol><pre><code>zuul.routes.xx.path=/xx/**
zuul.routes.xx.service-id=cuid

cuid.ribbon.listOfServers=localhost:82,localhost:83
ribbon.eureka.enabled=false

</code></pre><h3 id="忽略微服务"><a class="anchor" href="#忽略微服务">#</a> 忽略微服务</h3><p>配置</p><pre><code>zuul.ignored-services=user-provider
</code></pre><h3 id="前缀"><a class="anchor" href="#前缀">#</a> 前缀</h3><pre><code>zuul.prefix=/api/v1
</code></pre><p>是否带上前缀请求</p><pre><code>zuul.strip-prefix=false
</code></pre><h3 id="高可用"><a class="anchor" href="#高可用">#</a> 高可用</h3><p>Nginx</p><h2 id="链路追踪"><a class="anchor" href="#链路追踪">#</a> 链路追踪</h2><p><img data-src="../../../../../../Do/InternetArchitect-master/InternetArchitect-master/20%20SpringCloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/images/5?lastModify=1621237324" alt="img"></p><h3 id="分布式计算八大误区"><a class="anchor" href="#分布式计算八大误区">#</a> 分布式计算八大误区</h3><p>网络可靠。</p><p>延迟为零。</p><p>带宽无限。</p><p>网络绝对安全。</p><p>网络拓扑不会改变。</p><p>必须有一名管理员。</p><p>传输成本为零。</p><p>网络同质化。（操作系统，协议）</p><h3 id="链路追踪的必要性"><a class="anchor" href="#链路追踪的必要性">#</a> 链路追踪的必要性</h3><p>如果能跟踪每个请求，中间请求经过哪些微服务，请求耗时，网络延迟，业务逻辑耗时等。我们就能更好地分析系统瓶颈、解决系统问题。因此链路跟踪很重要。</p><p>我们自己思考解决方案：在调用前后加时间戳。捕获异常。</p><p>链路追踪目的：解决错综复杂的服务调用中链路的查看。排查慢服务。</p><p>市面上链路追踪产品，大部分基于 google 的 Dapper 论文。</p><pre><code class="language-sh">zipkin,twitter开源的。是严格按照谷歌的Dapper论文来的。

pinpoint 韩国的 Naver公司的。

Cat 美团点评的

EagleEye 淘宝的
</code></pre><h3 id="链路追踪要考虑的几个问题"><a class="anchor" href="#链路追踪要考虑的几个问题">#</a> 链路追踪要考虑的几个问题</h3><ol><li>探针的性能消耗。尽量不影响 服务本尊。</li><li>易用。开发可以很快接入，别浪费太多精力。</li><li>数据分析。要实时分析。维度足够。</li></ol><h3 id="sleuth"><a class="anchor" href="#sleuth">#</a> sleuth</h3><p>Sleuth 是 Spring cloud 的分布式跟踪解决方案。</p><ol><li><p>span (跨度)，基本工作单元。一次链路调用，创建一个 span，</p><p>span 用一个 64 位 id 唯一标识。包括：id，描述，时间戳事件，spanId,span 父 id。</p><p>span 被启动和停止时，记录了时间信息，初始化 span 叫：root span，它的 span id 和 trace id 相等。</p></li><li><p>trace (跟踪)，一组共享 “root span” 的 span 组成的树状结构 称为 trace，trace 也有一个 64 位 ID，trace 中所有 span 共享一个 trace id。类似于一颗 span 树。</p></li><li><p>annotation（标签），annotation 用来记录事件的存在，其中，核心 annotation 用来定义请求的开始和结束。</p><ul><li>CS (Client Send 客户端发起请求)。客户端发起请求描述了 span 开始。</li><li>SR (Server Received 服务端接到请求)。服务端获得请求并准备处理它。SR-CS = 网络延迟。</li><li>SS（Server Send 服务器端处理完成，并将结果发送给客户端）。表示服务器完成请求处理，响应客户端时。SS-SR = 服务器处理请求的时间。</li><li>CR（Client Received 客户端接受服务端信息）。span 结束的标识。客户端接收到服务器的响应。CR-CS = 客户端发出请求到服务器响应的总时间。</li></ul></li></ol><p>sleuth 使用：</p><p>给需要链路追踪的服务中引入依赖</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-sleuth<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure><p>启动项目可以发现，日志打印中多了 [user-consumer] 的一些日志</p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210517155741197.png" alt="image-20210517155741197"></p><p>这些日志表达上不是很好懂，为此可以加入 zipkin 来得到一个链路追踪的图形化界面</p><h3 id="zipkin"><a class="anchor" href="#zipkin">#</a> zipkin</h3><p>zipkin 是 twitter 开源的分布式跟踪系统。原理收集系统的时序数据，从而追踪微服务架构中系统延时等问题，并生成一个图形化界面。zipkin 由 Collector、Storage、Restful API、Web UI 组成，即采集器，存储器，接口，UI。</p><p>原理：</p><p>sleuth 收集跟踪信息通过 http 请求发送给 zipkin server，zipkin 将跟踪信息存储，以及提供 RESTful API 接口，zipkin ui 通过调用 api 进行数据展示。默认内存存储，可以用 mysql，ES 等存储。</p><p>使用方式：</p><ol><li><p>需要监听的服务中添加依赖（我这里在 eureka 服务注册中心中加入依赖以及配置才成功）</p><figure class="highlight xml"><figcaption data-lang="XML"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="2"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="3"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-zipkin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="4"></td><td><pre>			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.8.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span></pre></td></tr><tr><td data-num="5"></td><td><pre>		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span></pre></td></tr></table></figure></li><li><p>需要监听的服务中添加配置</p><figure class="highlight properties"><figcaption data-lang=".properties"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token comment">#zipkin 的 UI 地址</span></pre></td></tr><tr><td data-num="2"></td><td><pre><span class="token attr-name">spring.zipkin.base-url</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:9411</span></pre></td></tr><tr><td data-num="3"></td><td><pre><span class="token comment">#采样比例</span></pre></td></tr><tr><td data-num="4"></td><td><pre><span class="token attr-name">spring.sleuth.sampler.rate</span><span class="token punctuation">=</span><span class="token attr-value">1</span></pre></td></tr></table></figure></li><li><p>下载 zipkin 并启动</p><p>zipkin 官网：<span class="exturl" data-url="aHR0cHM6Ly96aXBraW4uaW8=">https://zipkin.io</span></p><p><span class="exturl" data-url="aHR0cHM6Ly9zZWFyY2gubWF2ZW4ub3JnL3JlbW90ZV9jb250ZW50P2c9aW8uemlwa2luJmFtcDthPXppcGtpbi1zZXJ2ZXImYW1wO3Y9TEFURVNUJmFtcDtjPWV4ZWM=">点此下载 zipkin 最新版本</span></p><p>Linux 中下载</p><figure class="highlight shell"><figcaption data-lang="Bash"></figcaption><table><tr><td data-num="1"></td><td><pre><span class="token function">curl</span> -sSL https://zipkin.io/quickstart.sh <span class="token operator">|</span> <span class="token function">bash</span> -s</pre></td></tr></table></figure><p>先运行 zipkin：java -jar zipkin-server-2.23.2-exec.jar</p><p>之后再启动微服务项目并访问地址：<span class="exturl" data-url="aHR0cDovL2xvY2FsaG9zdDo5NDExLw==">http://localhost:9411/</span></p><p><img data-src="https://gitee.com/bfanfanfan/img/raw/master/docsify/20210517221705.png" alt="image-20210517221702724"></p></li></ol><div class="tags"><a href="/tags/Java/" rel="tag"><i class="ic i-tag"></i> Java</a> <a href="/tags/SpringCloud/" rel="tag"><i class="ic i-tag"></i> SpringCloud</a> <a href="/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/" rel="tag"><i class="ic i-tag"></i> 微服务</a> <a href="/tags/%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/" rel="tag"><i class="ic i-tag"></i> 配置中心</a> <a href="/tags/Zuul/" rel="tag"><i class="ic i-tag"></i> Zuul</a> <a href="/tags/%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/" rel="tag"><i class="ic i-tag"></i> 注册中心</a> <a href="/tags/Hystrix/" rel="tag"><i class="ic i-tag"></i> Hystrix</a> <a href="/tags/Netflix/" rel="tag"><i class="ic i-tag"></i> Netflix</a> <a href="/tags/Eureka/" rel="tag"><i class="ic i-tag"></i> Eureka</a> <a href="/tags/Ribbon/" rel="tag"><i class="ic i-tag"></i> Ribbon</a> <a href="/tags/Feign/" rel="tag"><i class="ic i-tag"></i> Feign</a> <a href="/tags/Actuator/" rel="tag"><i class="ic i-tag"></i> Actuator</a> <a href="/tags/RestTemplate/" rel="tag"><i class="ic i-tag"></i> RestTemplate</a> <a href="/tags/Sleuth/" rel="tag"><i class="ic i-tag"></i> Sleuth</a> <a href="/tags/Ziplin/" rel="tag"><i class="ic i-tag"></i> Ziplin</a> <a href="/tags/%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA/" rel="tag"><i class="ic i-tag"></i> 链路追踪</a></div></div><footer><div class="meta"><span class="item"><span class="icon"><i class="ic i-calendar-check"></i> </span><span class="text">更新于</span> <time title="修改时间：2021-12-24 13:57:05" itemprop="dateModified" datetime="2021-12-24T13:57:05+08:00">2021-12-24</time></span></div><div class="reward"><button><i class="ic i-heartbeat"></i> 赞赏</button><p>请我喝[茶]~(￣▽￣)~*</p><div id="qr"><div><img data-src="/images/wechatpay.png" alt="fanfanfan 微信支付"><p>微信支付</p></div><div><img data-src="/images/alipay.png" alt="fanfanfan 支付宝"><p>支付宝</p></div><div><img data-src="/images/paypal.png" alt="fanfanfan PayPal"><p>PayPal</p></div></div></div><div id="copyright"><ul><li class="author"><strong>本文作者： </strong>fanfanfan <i class="ic i-at"><em>@</em></i></li><li class="link"><strong>本文链接：</strong> <a href="https://baiyezi.vip/SpringCloud-Netflix%E4%BD%93%E7%B3%BB" title="SpringCloud-Netflix体系">https://baiyezi.vip/SpringCloud-Netflix体系</a></li><li class="license"><strong>版权声明： </strong>本站所有文章除特别声明外，均采用 <span class="exturl" data-url="aHR0cHM6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzQuMC9kZWVkLnpo"><i class="ic i-creative-commons"><em>(CC)</em></i>BY-NC-SA</span> 许可协议。转载请注明出处！</li></ul></div></footer></article></div><div class="post-nav"><div class="item left"><a href="/JVM-%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD" itemprop="url" rel="prev" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;bfanfanfan&#x2F;img&#x2F;raw&#x2F;master&#x2F;guzhuang&#x2F;20211225105422.jpg" title="JVM-类的加载"><span class="type">上一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>JVM-类的加载</h3></a></div><div class="item right"><a href="/%E5%BA%8F%E5%88%97%E5%8C%96" itemprop="url" rel="next" data-background-image="https:&#x2F;&#x2F;gitee.com&#x2F;bfanfanfan&#x2F;img&#x2F;raw&#x2F;master&#x2F;guzhuang&#x2F;20211225105422.jpg" title="序列化"><span class="type">下一篇</span> <span class="category"><i class="ic i-flag"></i> Java</span><h3>序列化</h3></a></div></div><div class="wrap" id="comments"></div></div><div id="sidebar"><div class="inner"><div class="panels"><div class="inner"><div class="contents panel pjax" data-title="文章目录"><ol class="toc"><li class="toc-item toc-level-2"><a class="toc-link" href="#springcloud%E7%94%9F%E6%80%81"><span class="toc-number">1.</span> <span class="toc-text">SpringCloud 生态</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#springcloud-netflix"><span class="toc-number">1.1.</span> <span class="toc-text">SpringCloud Netflix</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#springcloud-alibaba"><span class="toc-number">1.2.</span> <span class="toc-text">SpringCloud Alibaba</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#springcloud-apache"><span class="toc-number">1.3.</span> <span class="toc-text">SpringCloud Apache</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#eureka"><span class="toc-number">2.</span> <span class="toc-text">Eureka</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AE%A2%E6%88%B7%E7%AB%AF"><span class="toc-number">2.1.</span> <span class="toc-text">客户端</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF"><span class="toc-number">2.2.</span> <span class="toc-text">服务端</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#register"><span class="toc-number">2.3.</span> <span class="toc-text">Register</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#renew"><span class="toc-number">2.4.</span> <span class="toc-text">Renew</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#fetch-registry"><span class="toc-number">2.5.</span> <span class="toc-text">Fetch Registry</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#cancel"><span class="toc-number">2.6.</span> <span class="toc-text">Cancel</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#time-lag"><span class="toc-number">2.7.</span> <span class="toc-text">Time Lag</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#communication-mechanism"><span class="toc-number">2.8.</span> <span class="toc-text">Communication mechanism</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eureka-server%E6%90%AD%E5%BB%BA"><span class="toc-number">2.9.</span> <span class="toc-text">Eureka-Server 搭建</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eureka%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA"><span class="toc-number">2.10.</span> <span class="toc-text">Eureka 高可用集群搭建</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eureka%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C"><span class="toc-number">2.11.</span> <span class="toc-text">Eureka 服务注册</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eureka-rest"><span class="toc-number">2.12.</span> <span class="toc-text">Eureka Rest</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%B3%A8%E5%86%8C%E5%88%B0eureka%E7%9A%84%E6%9C%8D%E5%8A%A1%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B"><span class="toc-number">2.12.1.</span> <span class="toc-text">注册到 eureka 的服务信息查看</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%B3%A8%E5%86%8C%E5%88%B0eureka%E7%9A%84%E5%85%B7%E4%BD%93%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%9F%A5%E7%9C%8B"><span class="toc-number">2.12.2.</span> <span class="toc-text">注册到 eureka 的具体的服务查看</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%8D%E5%8A%A1%E7%BB%AD%E7%BA%A6"><span class="toc-number">2.12.3.</span> <span class="toc-text">服务续约</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9B%B4%E6%94%B9%E6%9C%8D%E5%8A%A1%E7%8A%B6%E6%80%81"><span class="toc-number">2.12.4.</span> <span class="toc-text">更改服务状态</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%88%A0%E9%99%A4%E7%8A%B6%E6%80%81%E6%9B%B4%E6%96%B0"><span class="toc-number">2.12.5.</span> <span class="toc-text">删除状态更新</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%88%A0%E9%99%A4%E6%9C%8D%E5%8A%A1"><span class="toc-number">2.12.6.</span> <span class="toc-text">删除服务</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#eureka%E5%85%83%E6%95%B0%E6%8D%AE"><span class="toc-number">2.12.7.</span> <span class="toc-text">Eureka 元数据</span></a><ol class="toc-child"><li class="toc-item toc-level-5"><a class="toc-link" href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF"><span class="toc-number">2.12.7.1.</span> <span class="toc-text">自定义元数据信息</span></a></li></ol></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eurekaclient"><span class="toc-number">2.13.</span> <span class="toc-text">EurekaClient</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eureka%E8%87%AA%E6%88%91%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6"><span class="toc-number">2.14.</span> <span class="toc-text">Eureka 自我保护机制</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%9C%BA%E5%88%B6"><span class="toc-number">2.14.1.</span> <span class="toc-text">机制</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%87%AA%E6%88%91%E4%BF%9D%E6%8A%A4%E8%A7%A6%E5%8F%91"><span class="toc-number">2.14.2.</span> <span class="toc-text">自我保护触发</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%85%B3%E9%97%AD"><span class="toc-number">2.14.3.</span> <span class="toc-text">关闭</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%B8%85%E7%90%86%E6%97%B6%E9%97%B4"><span class="toc-number">2.14.4.</span> <span class="toc-text">清理时间</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#actuator"><span class="toc-number">2.15.</span> <span class="toc-text">Actuator</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#health"><span class="toc-number">2.15.1.</span> <span class="toc-text">Health</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#shutdown"><span class="toc-number">2.15.2.</span> <span class="toc-text">shutdown</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#autoconfig"><span class="toc-number">2.15.3.</span> <span class="toc-text">autoconfig</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#configprops"><span class="toc-number">2.15.4.</span> <span class="toc-text">configprops</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#env"><span class="toc-number">2.15.5.</span> <span class="toc-text">env</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#mappings"><span class="toc-number">2.15.6.</span> <span class="toc-text">Mappings</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#info"><span class="toc-number">2.15.7.</span> <span class="toc-text">info</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#metrics"><span class="toc-number">2.15.8.</span> <span class="toc-text">metrics</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#threaddump"><span class="toc-number">2.15.9.</span> <span class="toc-text">Threaddump</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#eureka-%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5"><span class="toc-number">2.15.10.</span> <span class="toc-text">Eureka 健康检查</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#eureka%E5%AE%89%E5%85%A8%E9%85%8D%E7%BD%AE"><span class="toc-number">2.16.</span> <span class="toc-text">Eureka 安全配置</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#ribbon"><span class="toc-number">3.</span> <span class="toc-text">Ribbon</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#ribbon%E7%BB%84%E6%88%90"><span class="toc-number">3.1.</span> <span class="toc-text">Ribbon 组成</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#ribbon%E7%9A%84%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AE%97%E6%B3%95"><span class="toc-number">3.2.</span> <span class="toc-text">Ribbon 的负载均衡算法</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%87%E6%8D%A2%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5"><span class="toc-number">3.3.</span> <span class="toc-text">切换负载均衡策略</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#ribbon%E8%84%B1%E7%A6%BBeureka"><span class="toc-number">3.4.</span> <span class="toc-text">Ribbon 脱离 Eureka</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%85%B3%E4%BA%8Eurl%E6%8B%BC%E6%8E%A5"><span class="toc-number">3.5.</span> <span class="toc-text">关于 URL 拼接</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1"><span class="toc-number">3.6.</span> <span class="toc-text">客户端负载均衡</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1"><span class="toc-number">3.7.</span> <span class="toc-text">服务端负载均衡</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#resttemplate"><span class="toc-number">4.</span> <span class="toc-text">RestTemplate</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5"><span class="toc-number">4.1.</span> <span class="toc-text">依赖注入</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#get-%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86"><span class="toc-number">4.2.</span> <span class="toc-text">get 请求处理</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#getforentity"><span class="toc-number">4.2.1.</span> <span class="toc-text">getForEntity</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%BF%94%E5%9B%9E%E4%B8%80%E4%B8%AAmap"><span class="toc-number">4.2.2.</span> <span class="toc-text">返回一个 Map</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1"><span class="toc-number">4.2.3.</span> <span class="toc-text">返回对象</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E4%BC%A0%E5%8F%82%E8%B0%83%E7%94%A8"><span class="toc-number">4.2.4.</span> <span class="toc-text">传参调用</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E8%BF%94%E5%9B%9E%E5%AF%B9%E8%B1%A1-2"><span class="toc-number">4.2.5.</span> <span class="toc-text">返回对象</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#post-%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86"><span class="toc-number">4.3.</span> <span class="toc-text">post 请求处理</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#postforlocation"><span class="toc-number">4.4.</span> <span class="toc-text">postForLocation</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#exchange"><span class="toc-number">4.5.</span> <span class="toc-text">exchange</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%8B%A6%E6%88%AA%E5%99%A8"><span class="toc-number">4.6.</span> <span class="toc-text">拦截器</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#feign"><span class="toc-number">5.</span> <span class="toc-text">Feign</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#feign%E5%92%8Copenfeign%E7%9A%84%E5%85%B3%E7%B3%BB"><span class="toc-number">5.1.</span> <span class="toc-text">Feign 和 OpenFeign 的关系</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#openfeign%E7%9A%84%E4%BD%BF%E7%94%A8"><span class="toc-number">5.2.</span> <span class="toc-text">OpenFeign 的使用</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%8E%9F%E7%90%86"><span class="toc-number">5.2.1.</span> <span class="toc-text">原理</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E5%9F%BA%E7%A1%80%E7%94%A8%E6%B3%95"><span class="toc-number">5.2.2.</span> <span class="toc-text">基础用法</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#api%E9%9B%86%E6%88%90"><span class="toc-number">5.2.3.</span> <span class="toc-text">API 集成</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#get%E5%92%8Cpost"><span class="toc-number">5.2.4.</span> <span class="toc-text">Get 和 Post</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%8E%8B%E7%BC%A9"><span class="toc-number">5.3.</span> <span class="toc-text">压缩</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E6%9D%83%E9%99%90"><span class="toc-number">5.4.</span> <span class="toc-text">权限</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%B1%9E%E6%80%A7%E5%AE%9A%E4%B9%89"><span class="toc-number">5.5.</span> <span class="toc-text">属性定义</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E8%B6%85%E6%97%B6%E4%BB%A5%E5%8F%8A%E9%87%8D%E8%AF%95"><span class="toc-number">5.6.</span> <span class="toc-text">超时以及重试</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#hystrix"><span class="toc-number">6.</span> <span class="toc-text">Hystrix</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#hystrix%E5%8D%95%E7%8B%AC%E4%BD%BF%E7%94%A8"><span class="toc-number">6.1.</span> <span class="toc-text">Hystrix 单独使用</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%B8%8Eresttemplate%E6%95%B4%E5%90%88"><span class="toc-number">6.2.</span> <span class="toc-text">与 RestTemplate 整合</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%B8%8Efeign%E6%95%B4%E5%90%88"><span class="toc-number">6.3.</span> <span class="toc-text">与 Feign 整合</span></a><ol class="toc-child"><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%96%B9%E5%BC%8F%E4%B8%80"><span class="toc-number">6.3.1.</span> <span class="toc-text">方式一</span></a></li><li class="toc-item toc-level-4"><a class="toc-link" href="#%E6%96%B9%E5%BC%8F%E4%BA%8C"><span class="toc-number">6.3.2.</span> <span class="toc-text">方式二</span></a></li></ol></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E4%BF%A1%E5%8F%B7%E9%87%8F%E9%9A%94%E7%A6%BB%E4%B8%8E%E7%BA%BF%E7%A8%8B%E9%9A%94%E7%A6%BB"><span class="toc-number">6.4.</span> <span class="toc-text">信号量隔离与线程隔离</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%BC%80%E5%90%AFdashboard"><span class="toc-number">6.5.</span> <span class="toc-text">开启 dashboard</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#zuul"><span class="toc-number">7.</span> <span class="toc-text">Zuul</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%90%AF%E7%94%A8%E7%BD%91%E5%85%B3"><span class="toc-number">7.1.</span> <span class="toc-text">启用网关</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1"><span class="toc-number">7.2.</span> <span class="toc-text">负载均衡</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E8%B7%AF%E7%94%B1%E7%AB%AF%E7%82%B9"><span class="toc-number">7.3.</span> <span class="toc-text">路由端点</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%85%8D%E7%BD%AE%E6%8C%87%E5%AE%9A%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E8%AE%BF%E9%97%AE%E8%B7%AF%E5%BE%84"><span class="toc-number">7.4.</span> <span class="toc-text">配置指定微服务的访问路径</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%BF%BD%E7%95%A5%E5%BE%AE%E6%9C%8D%E5%8A%A1"><span class="toc-number">7.5.</span> <span class="toc-text">忽略微服务</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%89%8D%E7%BC%80"><span class="toc-number">7.6.</span> <span class="toc-text">前缀</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%AB%98%E5%8F%AF%E7%94%A8"><span class="toc-number">7.7.</span> <span class="toc-text">高可用</span></a></li></ol></li><li class="toc-item toc-level-2"><a class="toc-link" href="#%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA"><span class="toc-number">8.</span> <span class="toc-text">链路追踪</span></a><ol class="toc-child"><li class="toc-item toc-level-3"><a class="toc-link" href="#%E5%88%86%E5%B8%83%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%85%AB%E5%A4%A7%E8%AF%AF%E5%8C%BA"><span class="toc-number">8.1.</span> <span class="toc-text">分布式计算八大误区</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E7%9A%84%E5%BF%85%E8%A6%81%E6%80%A7"><span class="toc-number">8.2.</span> <span class="toc-text">链路追踪的必要性</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E8%A6%81%E8%80%83%E8%99%91%E7%9A%84%E5%87%A0%E4%B8%AA%E9%97%AE%E9%A2%98"><span class="toc-number">8.3.</span> <span class="toc-text">链路追踪要考虑的几个问题</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#sleuth"><span class="toc-number">8.4.</span> <span class="toc-text">sleuth</span></a></li><li class="toc-item toc-level-3"><a class="toc-link" href="#zipkin"><span class="toc-number">8.5.</span> <span class="toc-text">zipkin</span></a></li></ol></li></ol></div><div class="related panel pjax" data-title="系列文章"><ul><li><a href="/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%A5%E5%8F%8A%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95" rel="bookmark" title="微服务以及架构发展">微服务以及架构发展</a></li><li class="active"><a href="/SpringCloud-Netflix%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Netflix体系">SpringCloud-Netflix体系</a></li><li><a href="/SpringCloud-Alibaba%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-Alibaba体系">SpringCloud-Alibaba体系</a></li><li><a href="/SpringCloud-SpringCloud%E4%BD%93%E7%B3%BB" rel="bookmark" title="SpringCloud-SpringCloud体系">SpringCloud-SpringCloud体系</a></li><li><a href="/Apollo" rel="bookmark" title="Apollo">Apollo</a></li></ul></div><div class="overview panel" data-title="站点概览"><div class="author" itemprop="author" itemscope itemtype="http://schema.org/Person"><img class="image" itemprop="image" alt="fanfanfan" data-src="/images/avatar.png"><p class="name" itemprop="name">fanfanfan</p><div class="description" itemprop="description">花有重开日，人无再少年</div></div><nav class="state"><div class="item posts"><a href="/archives/"><span class="count">73</span> <span class="name">文章</span></a></div><div class="item categories"><a href="/categories/"><span class="count">3</span> <span class="name">分类</span></a></div><div class="item tags"><a href="/tags/"><span class="count">77</span> <span class="name">标签</span></a></div></nav><div class="social"></div><ul class="menu"><li class="item"><a href="/" rel="section"><i class="ic i-home"></i>首页</a></li><li class="item dropdown"><a href="javascript:void(0);"><i class="ic i-feather"></i>文章</a><ul class="submenu"><li class="item"><a href="/archives/" rel="section"><i class="ic i-list-alt"></i>归档</a></li><li class="item"><a href="/categories/" rel="section"><i class="ic i-th"></i>分类</a></li><li class="item"><a href="/tags/" rel="section"><i class="ic i-tags"></i>标签</a></li></ul></li><li class="item"><a href="/friends/" rel="section"><i class="ic i-magic"></i>友链</a></li><li class="item"><a href="/about/" rel="section"><i class="ic i-user"></i>关于</a></li></ul></div></div></div><ul id="quick"><li class="prev pjax"><a href="/JVM-%E7%B1%BB%E7%9A%84%E5%8A%A0%E8%BD%BD" rel="prev" title="上一篇"><i class="ic i-chevron-left"></i></a></li><li class="up"><i class="ic i-arrow-up"></i></li><li class="down"><i class="ic i-arrow-down"></i></li><li class="next pjax"><a href="/%E5%BA%8F%E5%88%97%E5%8C%96" rel="next" title="下一篇"><i class="ic i-chevron-right"></i></a></li><li class="percent"></li></ul></div></div><div class="dimmer"></div></div></main><footer id="footer"><div class="inner"><div class="widgets"><div class="rpost pjax"><h2>随机文章</h2><ul><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1" title="RocketMQ-消息、事务">RocketMQ-消息、事务</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringBoot%E5%85%A5%E9%97%A8" title="SpringBoot入门">SpringBoot入门</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/shiro%E6%95%B4%E5%90%88SpringBoot" title="shiro整合SpringBoot">shiro整合SpringBoot</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringMVC-REST%E9%A3%8E%E6%A0%BC" title="SpringMVC-REST风格">SpringMVC-REST风格</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E7%BA%BF%E7%A8%8B%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86" title="线程基础知识">线程基础知识</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/SpringMVC%E6%BA%90%E7%A0%81%E6%80%BB%E7%BB%93" title="SpringMVC源码总结">SpringMVC源码总结</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E5%AE%B9%E5%99%A8%E4%B8%8E%E7%BA%BF%E7%A8%8B%E6%B1%A0" title="容器与线程池">容器与线程池</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/HTTPS" title="HTTPS">HTTPS</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/AOP" title="AOP">AOP</a></span></li><li class="item"><div class="breadcrumb"><a href="/categories/java/" title="分类于 Java">Java</a></div><span><a href="/%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95" title="单点登录">单点登录</a></span></li></ul></div><div><h2>最新评论</h2><ul class="leancloud-recent-comment"></ul></div></div><div class="status"><div class="copyright">&copy; 2010 – <span itemprop="copyrightYear">2021</span> <span class="with-love"><i class="ic i-sakura rotate"></i> </span><span class="author" itemprop="copyrightHolder">fanfanfan @</span></div><div class="count"><span class="post-meta-item-icon"><i class="ic i-chart-area"></i> </span><span title="站点总字数">1.3m 字</span> <span class="post-meta-divider">|</span> <span class="post-meta-item-icon"><i class="ic i-coffee"></i> </span><span title="站点阅读时长">20:22</span></div><div class="powered-by">基于 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">Hexo</span> & Theme.<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==">Shoka</span></div></div></div></footer></div><script data-config type="text/javascript">var LOCAL={path:"/SpringCloud-Netflix体系",favicon:{show:"书院十四先生",hide:"书院十四先生"},search:{placeholder:"文章搜索",empty:"关于 「 ${query} 」，什么也没搜到",stats:"${time} ms 内找到 ${hits} 条结果"},valine:!0,fancybox:!0,copyright:'复制成功，转载请遵守 <i class="ic i-creative-commons"></i>BY-NC-SA 协议。',ignores:[function(e){return e.includes("#")},function(e){return new RegExp(LOCAL.path+"$").test(e)}]}</script><script src="https://cdn.polyfill.io/v2/polyfill.js"></script><script src="//cdn.jsdelivr.net/combine/npm/pace-js@1.0.2/pace.min.js,npm/pjax@0.2.8/pjax.min.js,npm/whatwg-fetch@3.4.0/dist/fetch.umd.min.js,npm/animejs@3.2.0/lib/anime.min.js,npm/algoliasearch@4/dist/algoliasearch-lite.umd.js,npm/instantsearch.js@4/dist/instantsearch.production.min.js,npm/lozad@1/dist/lozad.min.js,npm/quicklink@2/dist/quicklink.umd.js"></script><script src="/js/app.js?v=0.2.5"></script></body></html><!-- rebuild by hrmmi -->