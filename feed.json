{
    "version": "https://jsonfeed.org/version/1",
    "title": "书院十四先生",
    "subtitle": null,
    "icon": "https://www.baiyezi.vip/images/favicon.ico",
    "description": "花有重开日，人无再少年",
    "home_page_url": "https://www.baiyezi.vip",
    "items": [
        {
            "id": "https://www.baiyezi.vip/title/",
            "url": "https://www.baiyezi.vip/title/",
            "title": "",
            "date_published": "2021-12-24T13:31:48.145Z",
            "content_html": "<p>在结构不变的情况下动态改变对于内部元素的动作</p>\n",
            "tags": []
        },
        {
            "id": "https://www.baiyezi.vip/title/",
            "url": "https://www.baiyezi.vip/title/",
            "title": "",
            "date_published": "2021-12-24T13:31:48.138Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://www.baiyezi.vip/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%B5%8B%E8%AF%95",
            "url": "https://www.baiyezi.vip/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%B5%8B%E8%AF%95",
            "title": "大数据测试",
            "date_published": "2021-12-24T01:30:17.000Z",
            "content_html": "",
            "tags": [
                "大数据",
                "大数据"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95",
            "url": "https://www.baiyezi.vip/%E5%89%8D%E7%AB%AF%E6%B5%8B%E8%AF%95",
            "title": "前端测试",
            "date_published": "2021-12-24T01:30:17.000Z",
            "content_html": "",
            "tags": [
                "前端",
                "前端"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/%E5%9F%BA%E4%BA%8ETypora%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE%E5%88%B6%E4%BD%9C",
            "url": "https://www.baiyezi.vip/%E5%9F%BA%E4%BA%8ETypora%E7%9A%84%E6%B5%81%E7%A8%8B%E5%9B%BE%E5%88%B6%E4%BD%9C",
            "title": "基于Typora的流程图制作",
            "date_published": "2021-12-24T01:30:17.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdXBwb3J0LnR5cG9yYS5pby9EcmF3LURpYWdyYW1zLVdpdGgtTWFya2Rvd24v\">官网</span></p>\n<h2 id=\"sequence\"><a class=\"anchor\" href=\"#sequence\">#</a> Sequence</h2>\n<pre><code class=\"language-cmd\">Title:标题\nA-&gt;B:hello\nB--&gt;C:虚线\nNote right of B:注释\nB-&gt;A:hhhhh\nC-&gt;&gt;A:空心箭头\nNote left of A:A左边的注释\\n换行\nNote right of A:A右边的注释\nNote over B:B中间的注释\nNote over A,C:横跨A、C的注释\n</code></pre>\n<pre><code class=\"language-sequence\">Title:标题\nA-&gt;B:hello\nB--&gt;C:虚线\nNote right of B:注释\nB-&gt;A:hhhhh\nC-&gt;&gt;A:空心箭头\nNote left of A:A左边的注释\\n换行\nNote right of A:A右边的注释\nNote over B:B中间的注释\nNote over A,C:横跨A、C的注释\n\n</code></pre>\n<h2 id=\"flow\"><a class=\"anchor\" href=\"#flow\">#</a> Flow</h2>\n<pre><code class=\"language-cmd\">st=&gt;start: 开始\nop=&gt;operation: 你好吗\nsub=&gt;subroutine: 真的不好吗\ncond=&gt;condition: 好还是不好\nio=&gt;inputoutput: 那就好\npara=&gt;parallel: 再次确定\ne=&gt;end\n# 规定以上组件的指向以及连接线方向\nst-&gt;op-&gt;cond\ncond(yes)-&gt;io-&gt;e\ncond(no)-&gt;sub(right)-&gt;para-&gt;op\npara(path1, right)-&gt;op\n</code></pre>\n<figure class=\"highlight flow\"><figcaption data-lang=\"flow\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>st<span class=\"token operator\">=></span>start<span class=\"token operator\">:</span> 开始</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>op<span class=\"token operator\">=></span>operation<span class=\"token operator\">:</span> 你好吗</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sub<span class=\"token operator\">=></span>subroutine<span class=\"token operator\">:</span> 真的不好吗</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cond<span class=\"token operator\">=></span>condition<span class=\"token operator\">:</span> 好还是不好</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>io<span class=\"token operator\">=></span>inputoutput<span class=\"token operator\">:</span> 那就好</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>para<span class=\"token operator\">=></span>parallel<span class=\"token operator\">:</span> 再次确定</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e<span class=\"token operator\">=></span>end</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>st<span class=\"token operator\">-</span><span class=\"token operator\">></span>op<span class=\"token operator\">-</span><span class=\"token operator\">></span>cond</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">cond</span><span class=\"token punctuation\">(</span>yes<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>io<span class=\"token operator\">-</span><span class=\"token operator\">></span>e</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">cond</span><span class=\"token punctuation\">(</span>no<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>right<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>para<span class=\"token operator\">-</span><span class=\"token operator\">></span>op</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">para</span><span class=\"token punctuation\">(</span>path1<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>op</pre></td></tr></table></figure><h2 id=\"mermaid\"><a class=\"anchor\" href=\"#mermaid\">#</a> Mermaid</h2>\n<h3 id=\"sequence-diagrams\"><a class=\"anchor\" href=\"#sequence-diagrams\">#</a> Sequence Diagrams</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvc2VxdWVuY2VEaWFncmFt\">序列图官网</span></p>\n<p>虚线、实线、箭头</p>\n<pre><code class=\"language-cmd\">sequenceDiagram #需要申明图表类型\nparticipant A as Alice #声名A代表Alice\nparticipant  B as Bluence #声名B代表Bluence\nA-&gt;&gt;B: 你好吗 #实线有箭头\nB--&gt;&gt;A: 不是很好 #虚线有箭头\nB-&gt; A: 断线了... #实线无箭头\nA--&gt;A: 连线中... #虚线无箭头\nA--&gt;B: 无法连接 #指向自己\nB-&gt;&gt;A: 你的网络不好，先不说了！\nA-xB: 我的网络似乎断了\nA--xB: 你还在吗？\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">participant</span> A as Alice</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">participant</span>  B as Bluence</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>A<span class=\"token arrow operator\">->></span>B<span class=\"token operator\">:</span> 你好吗</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>B<span class=\"token arrow operator\">-->></span>A<span class=\"token operator\">:</span> 不是很好</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>B<span class=\"token arrow operator\">-></span> A<span class=\"token operator\">:</span> 断线了...</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>A<span class=\"token arrow operator\">--></span>A<span class=\"token operator\">:</span> 连线中...</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>A<span class=\"token arrow operator\">--></span>B<span class=\"token operator\">:</span> 无法连接</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>B<span class=\"token arrow operator\">->></span>A<span class=\"token operator\">:</span> 你的网络不好，先不说了！</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>A<span class=\"token arrow operator\">-x</span>B<span class=\"token operator\">:</span> 我的网络似乎断了</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>A<span class=\"token arrow operator\">--x</span>B<span class=\"token operator\">:</span> 你还在吗？</pre></td></tr></table></figure><p>注释</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\nNote left of A: 我是A左边的注释\nNote over A: 我A是中间的注释\nNote right of A: 我是右A边的注释\nNote over A,B: 我是横跨A、B之间的注释\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">Note left of</span> A<span class=\"token operator\">:</span> 我是A左边的注释</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Note over</span> A<span class=\"token operator\">:</span> 我A是中间的注释</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">Note right of</span> A<span class=\"token operator\">:</span> 我是右A边的注释</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">Note over</span> A,B<span class=\"token operator\">:</span> 我是横跨A、B之间的注释</pre></td></tr></table></figure><p>循环语句</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\nA--&gt;&gt;B: 你好吗？\nloop 我代表循环\n\tB--&gt;&gt;A: 我很好！\nend\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">-->></span>B<span class=\"token operator\">:</span> 你好吗？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">loop</span> 我代表循环</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tB<span class=\"token arrow operator\">-->></span>A<span class=\"token operator\">:</span> 我很好！</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>判断语句</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\nA-&gt;&gt;B: 你好吗？\nalt 如果B很好，那么B会对A说：\n\tB-&gt;&gt;A: 我很好！\nelse 否则B会对A说：\n\tB-&gt;&gt;A: 我不是很好！\nend\nopt 简单的回应  # 如果没有else，那么可以使用opt来代替if\n B-&gt;&gt;A: 谢谢你的关心！\nend\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">-->></span>B<span class=\"token operator\">:</span> 你好吗？</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">alt</span> 如果B很好，那么B会对A说：</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\tB<span class=\"token arrow operator\">->></span>A<span class=\"token operator\">:</span> 我很好！</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> 否则B会对A说：</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tB<span class=\"token arrow operator\">->></span>A<span class=\"token operator\">:</span> 我不是很好！</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">opt</span> 简单的回应</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> B<span class=\"token arrow operator\">->></span>A<span class=\"token operator\">:</span> 谢谢你的关心！</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>平级表示</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\npar A对B说\nA-&gt;&gt;B: 你好吗\nand A对C说\nA-&gt;&gt;C: 你好吗\nend\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">par</span> A对B说</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>A<span class=\"token arrow operator\">->></span>B<span class=\"token operator\">:</span> 你好吗</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">and</span> A对C说</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>A<span class=\"token arrow operator\">->></span>C<span class=\"token operator\">:</span> 你好吗</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>背景高亮</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\nrect rgb(0,245,255)\nA-&gt;&gt;B: 你好吗\nend\nrect rgb(255,246,143)\nB-&gt;&gt;A: 我很好！\nend\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">rect</span> rgb<span class=\"token text string\">(0,245,255)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>A<span class=\"token arrow operator\">->></span>B<span class=\"token operator\">:</span> 你好吗</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">rect</span> rgb<span class=\"token text string\">(255,246,143)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>B<span class=\"token arrow operator\">->></span>A<span class=\"token operator\">:</span> 我很好！</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>代码注释</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\n%% 我是注释，不会被显示\nA-&gt;&gt;B: 你好吗\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">%% 我是注释</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>A<span class=\"token arrow operator\">->></span>B<span class=\"token operator\">:</span> 你好吗</pre></td></tr></table></figure><p>特殊符号</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\n    A-&gt;&gt;B: I #9829; you!\n    B-&gt;&gt;A: I #9829; you #infin; times more!\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A<span class=\"token arrow operator\">->></span>B<span class=\"token operator\">:</span> I <span class=\"token entity\" title=\"#9829;\">#9829;</span> you!</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    B<span class=\"token arrow operator\">->></span>A<span class=\"token operator\">:</span> I <span class=\"token entity\" title=\"#9829;\">#9829;</span> you <span class=\"token entity\" title=\"#infin;\">#infin;</span> times more!</pre></td></tr></table></figure><p>有序序号</p>\n<pre><code class=\"language-cmd\">sequenceDiagram\n    autonumber\n    Alice-&gt;&gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&gt;&gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John--&gt;&gt;Alice: Great!\n    John-&gt;&gt;Bob: How about you?\n    Bob--&gt;&gt;John: Jolly good!\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">sequenceDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">autonumber</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Alice<span class=\"token arrow operator\">->></span>John<span class=\"token operator\">:</span> Hello John, how are you?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">loop</span> Healthcheck</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        John<span class=\"token arrow operator\">->></span>John<span class=\"token operator\">:</span> Fight against hypochondria</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">Note right of</span> John<span class=\"token operator\">:</span> Rational thoughts!</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    John<span class=\"token arrow operator\">-->></span>Alice<span class=\"token operator\">:</span> Great!</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    John<span class=\"token arrow operator\">->></span>Bob<span class=\"token operator\">:</span> How about you?</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Bob<span class=\"token arrow operator\">-->></span>John<span class=\"token operator\">:</span> Jolly good!</pre></td></tr></table></figure><h3 id=\"flowcharts\"><a class=\"anchor\" href=\"#flowcharts\">#</a> Flowcharts</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvZmxvd2NoYXJ0\">流程图官网</span></p>\n<h4 id=\"方向\"><a class=\"anchor\" href=\"#方向\">#</a> 方向</h4>\n<p>TD、TB、LR、RL、BT 表示方向</p>\n<pre><code class=\"language-cmd\">graph TD  #TD或TB表示从上到下\n开始--&gt;结束\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>开始<span class=\"token arrow operator\">--></span>结束</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR #从左到右\n开始--&gt;结束\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>开始<span class=\"token arrow operator\">--></span>结束</pre></td></tr></table></figure><h4 id=\"节点\"><a class=\"anchor\" href=\"#节点\">#</a> 节点</h4>\n<pre><code class=\"language-cmd\">graph LR\n单个节点\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>单个节点</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nid1[单个节点]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">[单个节点]</span></pre></td></tr></table></figure><h4 id=\"圆形边缘节点\"><a class=\"anchor\" href=\"#圆形边缘节点\">#</a> 圆形边缘节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1(圆形边缘节点)\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">(圆形边缘节点)</span></pre></td></tr></table></figure><h4 id=\"椭圆形节点\"><a class=\"anchor\" href=\"#椭圆形节点\">#</a> 椭圆形节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1([椭圆形节点])\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">([椭圆形节点])</span></pre></td></tr></table></figure><h4 id=\"子节点\"><a class=\"anchor\" href=\"#子节点\">#</a> 子节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1[[子节点]]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">[[子节点]]</span></pre></td></tr></table></figure><h4 id=\"圆柱形节点\"><a class=\"anchor\" href=\"#圆柱形节点\">#</a> 圆柱形节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1[(圆柱形节点)]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">[(圆柱形节点)]</span></pre></td></tr></table></figure><h4 id=\"圆形节点\"><a class=\"anchor\" href=\"#圆形节点\">#</a> 圆形节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1((圆形节点))\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">((圆形节点))</span></pre></td></tr></table></figure><h4 id=\"非对称节点\"><a class=\"anchor\" href=\"#非对称节点\">#</a> 非对称节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1&gt;非对称节点]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">>非对称节点]</span></pre></td></tr></table></figure><h4 id=\"菱形节点\"><a class=\"anchor\" href=\"#菱形节点\">#</a> 菱形节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1&#123;菱形节点&#125;\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">&#123;菱形节点&#125;</span></pre></td></tr></table></figure><h4 id=\"六角节点\"><a class=\"anchor\" href=\"#六角节点\">#</a> 六角节点</h4>\n<pre><code class=\"language-cmd\">graph LR\nid1&#123;&#123;六角节点&#125;&#125;\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1&lt;!<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span><span class=\"token label property\">swig￼1</span><span class=\"token arrow operator\">--></span></span></pre></td></tr></table></figure><h4 id=\"平行四边形节点\"><a class=\"anchor\" href=\"#平行四边形节点\">#</a> 平行四边形节点</h4>\n<pre><code class=\"language-cmd\">graph TD\nid1[/平行四边形节点/]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">[/平行四边形节点/]</span></pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph TD\nid1[\\平行四边形节点\\]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>id1<span class=\"token text string\">[\\平行四边形节点\\]</span></pre></td></tr></table></figure><h4 id=\"梯形节点\"><a class=\"anchor\" href=\"#梯形节点\">#</a> 梯形节点</h4>\n<pre><code class=\"language-cmd\">graph TD\nA[/梯形节点\\]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token text string\">[/梯形节点\\]</span></pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph TD\nB[\\梯形节点/]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TD</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>B<span class=\"token text string\">[\\梯形节点/]</span></pre></td></tr></table></figure><h4 id=\"节点连接\"><a class=\"anchor\" href=\"#节点连接\">#</a> 节点连接</h4>\n<pre><code class=\"language-cmd\">graph LR\nA--&gt;B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">--></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA---B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">---</span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA--说明---B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span><span class=\"token label property\">说明</span><span class=\"token arrow operator\">---</span></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA---|说明|B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">---</span><span class=\"token label property\">|说明|</span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA--&gt;|说明|B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">--></span><span class=\"token label property\">|说明|</span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA--说明--&gt;B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span><span class=\"token label property\">说明</span><span class=\"token arrow operator\">--></span></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR;\nA-.-&gt;B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">-.-></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA-.说明.-&gt;B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">-.</span><span class=\"token label property\">说明</span><span class=\"token arrow operator\">.-></span></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA==&gt;B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">==></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA==说明==&gt;B\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">==</span><span class=\"token label property\">说明</span><span class=\"token arrow operator\">==></span></span>B</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA--说明--&gt;B--说明--&gt;C\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span><span class=\"token label property\">说明</span><span class=\"token arrow operator\">--></span></span>B<span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span><span class=\"token label property\">说明</span><span class=\"token arrow operator\">--></span></span>C</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\nA--&gt;B &amp; C--&gt;D\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A<span class=\"token arrow operator\">--></span>B <span class=\"token operator\">&amp;</span> C<span class=\"token arrow operator\">--></span>D</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph TB\nA &amp; B--&gt;C &amp; D\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>A <span class=\"token operator\">&amp;</span> B<span class=\"token arrow operator\">--></span>C <span class=\"token operator\">&amp;</span> D</pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph TB\n    A --&gt; C\n    A --&gt; D\n    B --&gt; C\n    B --&gt; D\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A <span class=\"token arrow operator\">--></span> C</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    A <span class=\"token arrow operator\">--></span> D</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    B <span class=\"token arrow operator\">--></span> C</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    B <span class=\"token arrow operator\">--></span> D</pre></td></tr></table></figure><pre><code class=\"language-cmd\">flowchart LR\n    A --o B\n    B --x C\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">flowchart</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A <span class=\"token arrow operator\">--o</span> B</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    B <span class=\"token arrow operator\">--x</span> C</pre></td></tr></table></figure><pre><code class=\"language-cmd\">flowchart LR\n    A o--o B\n    B &lt;--&gt; C\n    C x--x D\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">flowchart</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A <span class=\"token arrow operator\">o--o</span> B</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    B <span class=\"token arrow operator\">&lt;--></span> C</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    C <span class=\"token arrow operator\">x--x</span> D</pre></td></tr></table></figure><h4 id=\"箭头总结\"><a class=\"anchor\" href=\"#箭头总结\">#</a> 箭头总结</h4>\n<table>\n<thead>\n<tr>\n<th>Length</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Normal</td>\n<td><code>---</code></td>\n<td><code>----</code></td>\n<td><code>-----</code></td>\n</tr>\n<tr>\n<td>Normal with arrow</td>\n<td><code>--&gt;</code></td>\n<td><code>---&gt;</code></td>\n<td><code>----&gt;</code></td>\n</tr>\n<tr>\n<td>Thick</td>\n<td><code>===</code></td>\n<td><code>====</code></td>\n<td><code>=====</code></td>\n</tr>\n<tr>\n<td>Thick with arrow</td>\n<td><code>==&gt;</code></td>\n<td><code>===&gt;</code></td>\n<td><code>====&gt;</code></td>\n</tr>\n<tr>\n<td>Dotted</td>\n<td><code>-.-</code></td>\n<td><code>-..-</code></td>\n<td><code>-...-</code></td>\n</tr>\n<tr>\n<td>Dotted with arrow</td>\n<td><code>-.-&gt;</code></td>\n<td><code>-..-&gt;</code></td>\n<td><code>-...-&gt;</code></td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"特殊字符\"><a class=\"anchor\" href=\"#特殊字符\">#</a> 特殊字符</h4>\n<pre><code class=\"language-cmd\">graph LR\n        A[&quot;A double quote:#quot;&quot;] --&gt;B[&quot;A dec char:#9829;&quot;]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        A<span class=\"token text string\">[\"A double quote:#quot;\"]</span> <span class=\"token arrow operator\">--></span>B<span class=\"token text string\">[\"A dec char:#9829;\"]</span></pre></td></tr></table></figure><h4 id=\"子图\"><a class=\"anchor\" href=\"#子图\">#</a> 子图</h4>\n<pre><code class=\"language-cmd\">graph TB\n    c1--&gt;a2\n    subgraph one\n    a1--&gt;a2\n    end\n    subgraph two\n    b1--&gt;b2\n    end\n    subgraph three\n    c1--&gt;c2\n    end\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    c1<span class=\"token arrow operator\">--></span>a2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> one</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    a1<span class=\"token arrow operator\">--></span>a2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> two</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    b1<span class=\"token arrow operator\">--></span>b2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> three</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    c1<span class=\"token arrow operator\">--></span>c2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph TB\n    c1--&gt;a2\n    subgraph ide1 [one]\n    a1--&gt;a2\n    end\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> TB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    c1<span class=\"token arrow operator\">--></span>a2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> ide1 <span class=\"token text string\">[one]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    a1<span class=\"token arrow operator\">--></span>a2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr></table></figure><pre><code class=\"language-cmd\">flowchart TB\n    c1--&gt;a2\n    subgraph one\n    a1--&gt;a2\n    end\n    subgraph two\n    b1--&gt;b2\n    end\n    subgraph three\n    c1--&gt;c2\n    end\n    one --&gt; two\n    three --&gt; two\n    two --&gt; c2\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">flowchart</span> TB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    c1<span class=\"token arrow operator\">--></span>a2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> one</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    a1<span class=\"token arrow operator\">--></span>a2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> two</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    b1<span class=\"token arrow operator\">--></span>b2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">subgraph</span> three</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    c1<span class=\"token arrow operator\">--></span>c2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">end</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    one <span class=\"token arrow operator\">--></span> two</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    three <span class=\"token arrow operator\">--></span> two</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    two <span class=\"token arrow operator\">--></span> c2</pre></td></tr></table></figure><h4 id=\"注释\"><a class=\"anchor\" href=\"#注释\">#</a> 注释</h4>\n<pre><code class=\"language-cmd\">graph LR\n%% this is a comment A -- text --&gt; B&#123;node&#125;\n   A -- text --&gt; B -- text2 --&gt; C\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">%% this is a comment A -- text --> B&#123;node&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   A <span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span> <span class=\"token label property\">text</span> <span class=\"token arrow operator\">--></span></span> B <span class=\"token inter-arrow-label\"><span class=\"token arrow-head arrow operator\">--</span> <span class=\"token label property\">text2</span> <span class=\"token arrow operator\">--></span></span> C</pre></td></tr></table></figure><h4 id=\"节点样式\"><a class=\"anchor\" href=\"#节点样式\">#</a> 节点样式</h4>\n<pre><code class=\"language-cmd\">graph LR\n    id1(Start)--&gt;id2(Stop)\n    style id1 fill:#f9f,stroke:#333,stroke-width:4px\n    style id2 fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5 5\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    id1<span class=\"token text string\">(Start)</span><span class=\"token arrow operator\">--></span>id2<span class=\"token text string\">(Stop)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">style</span> id1 <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#f9f<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#333<span class=\"token punctuation\">,</span><span class=\"token property\">stroke-width</span><span class=\"token operator\">:</span>4px</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">style</span> id2 <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#bbf<span class=\"token punctuation\">,</span><span class=\"token property\">stroke</span><span class=\"token operator\">:</span>#f66<span class=\"token punctuation\">,</span><span class=\"token property\">stroke-width</span><span class=\"token operator\">:</span>2px<span class=\"token punctuation\">,</span><span class=\"token property\">color</span><span class=\"token operator\">:</span>#fff<span class=\"token punctuation\">,</span><span class=\"token property\">stroke-dasharray</span><span class=\"token operator\">:</span> 5 5</span></pre></td></tr></table></figure><pre><code class=\"language-cmd\">graph LR\n    A:::someclass --&gt; B\n    classDef someclass fill:#f96;\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">graph</span> LR</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    A<span class=\"token operator\">:::</span>someclass <span class=\"token arrow operator\">--></span> B</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">classDef</span> someclass <span class=\"token style\"><span class=\"token property\">fill</span><span class=\"token operator\">:</span>#f96</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"gantt-charts\"><a class=\"anchor\" href=\"#gantt-charts\">#</a> Gantt Charts</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvZ2FudHQ=\">甘特图官网</span></p>\n<pre><code class=\"language-cmd\">gantt\n    title 甘特图\n    dateFormat  YYYY-MM-DD\n    section 第一节\n    第一节任务1           :a1, 2021-04-03, 20d\n    第一节任务2    :after a1  , 5d\n    section 第二节\n    第二节任务1    :2021-03-12  , 12d\n    第二节任务2      : 24d\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">gantt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    title 甘特图</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    dateFormat  YYYY-MM-DD</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    section 第一节</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    第一节任务1           <span class=\"token operator\">:</span>a1, 2021-04-03, 20d</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    第一节任务2    <span class=\"token operator\">:</span>after a1  , 5d</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    section 第二节</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    第二节任务1    <span class=\"token operator\">:</span>2021-03-12  , 12d</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    第二节任务2      <span class=\"token operator\">:</span> 24d</pre></td></tr></table></figure><pre><code class=\"language-cmd\">gantt\n    dateFormat  YYYY-MM-DD\n    title       Adding GANTT diagram functionality to mermaid\n    excludes    weekends\n    %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (&quot;sunday&quot;) or &quot;weekends&quot;, but not the word &quot;weekdays&quot;.)\n\n    section A section\n    Completed task            :done,    des1, 2014-01-06,2014-01-08\n    Active task               :active,  des2, 2014-01-09, 3d\n    Future task               :         des3, after des2, 5d\n    Future task2              :         des4, after des3, 5d\n\n    section Critical tasks\n    Completed task in the critical line :crit, done, 2014-01-06,24h\n    Implement parser and jison          :crit, done, after des1, 2d\n    Create tests for parser             :crit, active, 3d\n    Future task in critical line        :crit, 5d\n    Create tests for renderer           :2d\n    Add to mermaid                      :1d\n\n    section Documentation\n    Describe gantt syntax               :active, a1, after des1, 3d\n    Add gantt diagram to demo page      :after a1  , 20h\n    Add another diagram to demo page    :doc1, after a1  , 48h\n\n    section Last section\n    Describe gantt syntax               :after doc1, 3d\n    Add gantt diagram to demo page      :20h\n    Add another diagram to demo page    :48h\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">gantt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    dateFormat  YYYY-MM-DD</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    title       Adding GANTT diagram functionality to mermaid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    excludes    weekends</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token comment\">%% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    section A section</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Completed task            <span class=\"token operator\">:</span>done,    des1, 2014-01-06,2014-01-08</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    Active task               <span class=\"token operator\">:</span>active,  des2, 2014-01-09, 3d</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Future task               <span class=\"token operator\">:</span>         des3, after des2, 5d</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Future task2              <span class=\"token operator\">:</span>         des4, after des3, 5d</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    section Critical tasks</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    Completed task in the critical line <span class=\"token operator\">:</span>crit, done, 2014-01-06,24h</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    Implement parser and jison          <span class=\"token operator\">:</span>crit, done, after des1, 2d</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    Create tests for parser             <span class=\"token operator\">:</span>crit, active, 3d</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    Future task in critical line        <span class=\"token operator\">:</span>crit, 5d</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Create tests for renderer           <span class=\"token operator\">:</span>2d</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Add to mermaid                      <span class=\"token operator\">:</span>1d</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    section Documentation</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    Describe gantt syntax               <span class=\"token operator\">:</span>active, a1, after des1, 3d</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    Add gantt diagram to demo page      <span class=\"token operator\">:</span>after a1  , 20h</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    Add another diagram to demo page    <span class=\"token operator\">:</span>doc1, after a1  , 48h</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    section Last section</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    Describe gantt syntax               <span class=\"token operator\">:</span>after doc1, 3d</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    Add gantt diagram to demo page      <span class=\"token operator\">:</span>20h</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    Add another diagram to demo page    <span class=\"token operator\">:</span>48h</pre></td></tr></table></figure><pre><code class=\"language-cmd\"> gantt\n        apple :a, 2017-07-20, 1w\n        banana :crit, b, 2017-07-23, 1d\n        cherry :active, c, after b a, 1d\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">gantt</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        apple <span class=\"token operator\">:</span>a, 2017-07-20, 1w</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        banana <span class=\"token operator\">:</span>crit, b, 2017-07-23, 1d</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        cherry <span class=\"token operator\">:</span>active, c, after b a, 1d</pre></td></tr></table></figure><h4 id=\"输入日期\"><a class=\"anchor\" href=\"#输入日期\">#</a> 输入日期</h4>\n<pre><code class=\"language-cmd\">dateFormat YYYY-MM-DD\n</code></pre>\n<p>日期格式</p>\n<pre><code class=\"language-cmd\">Input       Example             Description:\nYYYY        2014                4 digit year\nYY          14                  2 digit year\nQ           1..4                Quarter of year. Sets month to first month in quarter.\nM MM        1..12               Month number\nMMM MMMM    January..Dec        Month name in locale set by moment.locale()\nD DD        1..31               Day of month\nDo          1st..31st           Day of month with ordinal\nDDD DDDD    1..365              Day of year\nX           1410715640.579      Unix timestamp\nx           1410715640579       Unix ms timestamp\nH HH        0..23               24 hour time\nh hh        1..12               12 hour time used with a A.\na A         am pm               Post or ante meridiem\nm mm        0..59               Minutes\ns ss        0..59               Seconds\nS           0..9                Tenths of a second\nSS          0..99               Hundreds of a second\nSSS         0..999              Thousandths of a second\nZ ZZ        +12:00              Offset from UTC as +-HH:mm, +-HHmm, or Z\nMore info in: http://momentjs.com/docs/#/parsing/string-format/\n</code></pre>\n<h4 id=\"输出日期\"><a class=\"anchor\" href=\"#输出日期\">#</a> 输出日期</h4>\n<pre><code class=\"language-cmd\">axisFormat  %Y-%m-%d\n</code></pre>\n<p>日期格式</p>\n<pre><code class=\"language-cmd\">%a - abbreviated weekday name.\n%A - full weekday name.\n%b - abbreviated month name.\n%B - full month name.\n%c - date and time, as &quot;%a %b %e %H:%M:%S %Y&quot;.\n%d - zero-padded day of the month as a decimal number [01,31].\n%e - space-padded day of the month as a decimal number [ 1,31]; equivalent to %_d.\n%H - hour (24-hour clock) as a decimal number [00,23].\n%I - hour (12-hour clock) as a decimal number [01,12].\n%j - day of the year as a decimal number [001,366].\n%m - month as a decimal number [01,12].\n%M - minute as a decimal number [00,59].\n%L - milliseconds as a decimal number [000, 999].\n%p - either AM or PM.\n%S - second as a decimal number [00,61].\n%U - week number of the year (Sunday as the first day of the week) as a decimal number [00,53].\n%w - weekday as a decimal number [0(Sunday),6].\n%W - week number of the year (Monday as the first day of the week) as a decimal number [00,53].\n%x - date, as &quot;%m/%d/%Y&quot;.\n%X - time, as &quot;%H:%M:%S&quot;.\n%y - year without century as a decimal number [00,99].\n%Y - year with century as a decimal number.\n%Z - time zone offset, such as &quot;-0700&quot;.\n%% - a literal &quot;%&quot; character.\nMore info in: https://github.com/mbostock/d3/wiki/Time-Formatting\n</code></pre>\n<h3 id=\"state-diagrams\"><a class=\"anchor\" href=\"#state-diagrams\">#</a> State Diagrams</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvc3RhdGVEaWFncmFt\">状态图官网</span></p>\n<pre><code class=\"language-cmd\">stateDiagram\n    [*] --&gt; Still\n    Still --&gt; [*]\n\n    Still --&gt; Moving\n    Moving --&gt; Still\n    Moving --&gt; Crash\n    Crash --&gt; [*]\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">stateDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token text string\">[*]</span> <span class=\"token arrow operator\">--></span> Still</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Still <span class=\"token arrow operator\">--></span> <span class=\"token text string\">[*]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    Still <span class=\"token arrow operator\">--></span> Moving</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    Moving <span class=\"token arrow operator\">--></span> Still</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    Moving <span class=\"token arrow operator\">--></span> Crash</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    Crash <span class=\"token arrow operator\">--></span> <span class=\"token text string\">[*]</span></pre></td></tr></table></figure><h3 id=\"pie-chart-diagrams\"><a class=\"anchor\" href=\"#pie-chart-diagrams\">#</a> Pie chart diagrams</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvcGll\">饼图官网</span></p>\n<pre><code class=\"language-cmd\">pie title 动物世界\n    &quot;Dogs&quot; : 386\n    &quot;Cats&quot; : 85\n    &quot;Rats&quot; : 15\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">pie</span> title 动物世界</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string\">\"Dogs\"</span> <span class=\"token operator\">:</span> 386</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token string\">\"Cats\"</span> <span class=\"token operator\">:</span> 85</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token string\">\"Rats\"</span> <span class=\"token operator\">:</span> 15</pre></td></tr></table></figure><h3 id=\"user-journey-diagram\"><a class=\"anchor\" href=\"#user-journey-diagram\">#</a> User Journey Diagram</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvdXNlci1qb3VybmV5\">用户之旅图官网</span></p>\n<pre><code class=\"language-cmd\">journey\n    title 我的一天\n    section Go to work\n      Make tea: 5: Me\n      Go upstairs: 3: Me\n      Do work: 1: Me, Cat\n    section Go home\n      Go downstairs: 5: Me\n      Sit down: 5: Me\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">journey</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    title 我的一天</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    section Go to work</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      Make tea<span class=\"token operator\">:</span> 5<span class=\"token operator\">:</span> Me</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Go upstairs<span class=\"token operator\">:</span> 3<span class=\"token operator\">:</span> Me</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      Do work<span class=\"token operator\">:</span> 1<span class=\"token operator\">:</span> Me, Cat</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    section Go home</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      Go downstairs<span class=\"token operator\">:</span> 5<span class=\"token operator\">:</span> Me</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      Sit down<span class=\"token operator\">:</span> 5<span class=\"token operator\">:</span> Me</pre></td></tr></table></figure><h3 id=\"entity-relationship-diagram\"><a class=\"anchor\" href=\"#entity-relationship-diagram\">#</a> Entity Relationship Diagram</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvZW50aXR5UmVsYXRpb25zaGlwRGlhZ3JhbQ==\">实体关联图官网</span></p>\n<pre><code class=\"language-cmd\">erDiagram\n    CUSTOMER ||--o&#123; ORDER : places\n    ORDER ||--|&#123; LINE-ITEM : contains\n    CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : uses\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">erDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    CUSTOMER <span class=\"token arrow operator\">||--o&#123;</span> ORDER <span class=\"token operator\">:</span> places</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ORDER <span class=\"token arrow operator\">||--|&#123;</span> LINE-ITEM <span class=\"token operator\">:</span> contains</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    CUSTOMER <span class=\"token arrow operator\">&#125;|..|&#123;</span> DELIVERY-ADDRESS <span class=\"token operator\">:</span> uses</pre></td></tr></table></figure><h3 id=\"class-diagram\"><a class=\"anchor\" href=\"#class-diagram\">#</a> Class Diagram</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJtYWlkLWpzLmdpdGh1Yi5pby9tZXJtYWlkLyMvY2xhc3NEaWFncmFt\">类图官网</span></p>\n<pre><code class=\"language-cmd\">classDiagram\n      Animal &lt;|-- Duck\n      Animal &lt;|-- Fish\n      Animal &lt;|-- Zebra\n      Animal : +int age\n      Animal : +String gender\n      Animal: +isMammal()\n      Animal: +mate()\n      class Duck&#123;\n          +String beakColor\n          +swim()\n          +quack()\n      &#125;\n      class Fish&#123;\n          -int sizeInFeet\n          -canEat()\n      &#125;\n      class Zebra&#123;\n          +bool is_wild\n          +run()\n      &#125;\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      Animal <span class=\"token arrow operator\">&lt;|--</span> Duck</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      Animal <span class=\"token arrow operator\">&lt;|--</span> Fish</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      Animal <span class=\"token arrow operator\">&lt;|--</span> Zebra</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      Animal <span class=\"token operator\">:</span> +int age</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      Animal <span class=\"token operator\">:</span> +String gender</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      Animal<span class=\"token operator\">:</span> +isMammal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      Animal<span class=\"token operator\">:</span> +mate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token keyword\">class</span> Duck<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>          +String beakColor</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>          +swim<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          +quack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token keyword\">class</span> Fish<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          -int sizeInFeet</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          -canEat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token keyword\">class</span> Zebra<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          +bool is_wild</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          +run<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"成员属性类型\"><a class=\"anchor\" href=\"#成员属性类型\">#</a> 成员属性类型</h4>\n<pre><code class=\"language-cmd\">+ Public\n- Private\n# Protected\n~ Package/Internal\n* Abstract e.g.: someAbstractMethod()*\n$ Static e.g.: someStaticMethod()$\n</code></pre>\n<h4 id=\"定义类的两种方式\"><a class=\"anchor\" href=\"#定义类的两种方式\">#</a> 定义类的两种方式</h4>\n<pre><code class=\"language-cmd\">classDiagram\n    class Animal\n    Vehicle &lt;|-- Car\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">class</span> Animal</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Vehicle <span class=\"token arrow operator\">&lt;|--</span> Car</pre></td></tr></table></figure><h4 id=\"定义类的成员\"><a class=\"anchor\" href=\"#定义类的成员\">#</a> 定义类的成员</h4>\n<pre><code class=\"language-cmd\">classDiagram\nclass BankAccount\n BankAccount : +String owner\n BankAccount : +BigDecimal balance\n BankAccount : +deposit(amount)\n BankAccount : +withdrawal(amount)\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> BankAccount</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> BankAccount <span class=\"token operator\">:</span> +String owner</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> BankAccount <span class=\"token operator\">:</span> +BigDecimal balance</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> BankAccount <span class=\"token operator\">:</span> +deposit<span class=\"token text string\">(amount)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> BankAccount <span class=\"token operator\">:</span> +withdrawal<span class=\"token text string\">(amount)</span></pre></td></tr></table></figure><pre><code class=\"language-cmd\">classDiagram\nclass BankAccount&#123;\n    +String owner\n    +BigDecimal balance\n    +deposit(amount) bool\n    +withdrawl(amount) int\n&#125;\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> BankAccount<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    +String owner</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    +BigDecimal balance</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    +deposit<span class=\"token text string\">(amount)</span> bool</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    +withdrawl<span class=\"token text string\">(amount)</span> int</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"泛型类型\"><a class=\"anchor\" href=\"#泛型类型\">#</a> 泛型类型</h4>\n<pre><code class=\"language-cmd\">classDiagram\nclass Square~Shape~&#123;\n    int id\n    List~int~ position\n    setPoints(List~int~ points)\n    getPoints() List~int~\n&#125;\n\nSquare : -List~string~ messages\nSquare : +setMessages(List~string~ messages)\nSquare : +getMessages() List~string~\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> Square~Shape~<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    int id</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    List~int~ position</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    setPoints<span class=\"token text string\">(List~int~ points)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    getPoints<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> List~int~</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Square <span class=\"token operator\">:</span> -List~string~ messages</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Square <span class=\"token operator\">:</span> +setMessages<span class=\"token text string\">(List~string~ messages)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Square <span class=\"token operator\">:</span> +getMessages<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> List~string~</pre></td></tr></table></figure><h4 id=\"类或接口之间的关联\"><a class=\"anchor\" href=\"#类或接口之间的关联\">#</a> 类或接口之间的关联</h4>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;|--</td>\n<td>Inheritance</td>\n</tr>\n<tr>\n<td>*--</td>\n<td>Composition</td>\n</tr>\n<tr>\n<td>o--</td>\n<td>Aggregation</td>\n</tr>\n<tr>\n<td>--&gt;</td>\n<td>Association</td>\n</tr>\n<tr>\n<td>--</td>\n<td>Link (Solid)</td>\n</tr>\n<tr>\n<td>..&gt;</td>\n<td>Dependency</td>\n</tr>\n<tr>\n<td>..|&gt;</td>\n<td>Realization</td>\n</tr>\n<tr>\n<td>..</td>\n<td>Link (Dashed)</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"language-cmd\">classDiagram\nclassA --|&gt; classB : Inheritance\nclassC --* classD : Composition\nclassE --o classF : Aggregation\nclassG --&gt; classH : Association\nclassI -- classJ : Link(Solid)\nclassK ..&gt; classL : Dependency\nclassM ..|&gt; classN : Realization\nclassO .. classP : Link(Dashed)\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>classA <span class=\"token arrow operator\">--|></span> classB <span class=\"token operator\">:</span> Inheritance</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>classC <span class=\"token arrow operator\">--*</span> classD <span class=\"token operator\">:</span> Composition</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>classE <span class=\"token arrow operator\">--o</span> classF <span class=\"token operator\">:</span> Aggregation</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>classG <span class=\"token arrow operator\">--></span> classH <span class=\"token operator\">:</span> Association</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>classI <span class=\"token arrow operator\">--</span> classJ <span class=\"token operator\">:</span> Link<span class=\"token text string\">(Solid)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>classK <span class=\"token arrow operator\">..></span> classL <span class=\"token operator\">:</span> Dependency</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>classM <span class=\"token arrow operator\">..|></span> classN <span class=\"token operator\">:</span> Realization</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>classO <span class=\"token arrow operator\">..</span> classP <span class=\"token operator\">:</span> Link<span class=\"token text string\">(Dashed)</span></pre></td></tr></table></figure><ul>\n<li><code>1</code>  Only 1</li>\n<li><code>0..1</code>  Zero or One</li>\n<li><code>1..*</code>  One or more</li>\n<li><code>*</code>  Many</li>\n<li where=\"\" n1=\"\"><code>n</code>  n</li>\n<li where=\"\" n1=\"\"><code>0..n</code>  zero to n</li>\n<li where=\"\" n1=\"\"><code>1..n</code>  one to n</li>\n</ul>\n<pre><code class=\"language-cmd\">classDiagram\n    Customer &quot;1&quot; --&gt; &quot;*&quot; Ticket\n    Student &quot;1&quot; --&gt; &quot;1..*&quot; Course\n    Galaxy --&gt; &quot;many&quot; Star : Contains\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    Customer <span class=\"token string\">\"1\"</span> <span class=\"token arrow operator\">--></span> <span class=\"token string\">\"*\"</span> Ticket</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    Student <span class=\"token string\">\"1\"</span> <span class=\"token arrow operator\">--></span> <span class=\"token string\">\"1..*\"</span> Course</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    Galaxy <span class=\"token arrow operator\">--></span> <span class=\"token string\">\"many\"</span> Star <span class=\"token operator\">:</span> Contains</pre></td></tr></table></figure><h4 id=\"标明类或接口\"><a class=\"anchor\" href=\"#标明类或接口\">#</a> 标明类或接口</h4>\n<ul>\n<li><code>&lt;&lt;Interface&gt;&gt;</code>  To represent an Interface class</li>\n<li><code>&lt;&lt;abstract&gt;&gt;</code>  To represent an abstract class</li>\n<li><code>&lt;&lt;Service&gt;&gt;</code>  To represent a service class</li>\n<li><code>&lt;&lt;enumeration&gt;&gt;</code>  To represent an enum</li>\n</ul>\n<pre><code class=\"language-cmd\">classDiagram\nclass Shape&#123;\n    &lt;&lt;interface&gt;&gt;\n    noOfVertices\n    draw()\n&#125;\nclass Color&#123;\n    &lt;&lt;enumeration&gt;&gt;\n    RED\n    BLUE\n    GREEN\n    WHITE\n    BLACK\n&#125;\n</code></pre>\n<figure class=\"highlight mermaid\"><figcaption data-lang=\"mermaid\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">classDiagram</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> Shape<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token annotation important\">&lt;&lt;interface>></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    noOfVertices</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    draw<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> Color<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation important\">&lt;&lt;enumeration>></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    RED</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    BLUE</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    GREEN</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    WHITE</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    BLACK</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "工具",
                "工具",
                "流程图"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/Java%E5%92%8C%E4%B8%B2%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%80%9A%E4%BF%A1",
            "url": "https://www.baiyezi.vip/Java%E5%92%8C%E4%B8%B2%E5%8F%A3%E8%BF%9B%E8%A1%8C%E9%80%9A%E4%BF%A1",
            "title": "Java和串口进行通信",
            "date_published": "2021-12-24T01:30:17.000Z",
            "content_html": "<h2 id=\"背景\"><a class=\"anchor\" href=\"#背景\">#</a> 背景</h2>\n<p>使用 Java 进行串口通信，前置知识点：RXTX 的 API、SpringBoot、Thymeleaf、ElementUI、WebSocket。</p>\n<p>实现的功能：可以对指定串口进行数据的收发</p>\n<p>RXTX 官网：<span class=\"exturl\" data-url=\"aHR0cDovL3J4dHgucWJhbmcub3JnL3dpa2kvaW5kZXgucGhwL01haW5fUGFnZQ==\">http://rxtx.qbang.org/wiki/index.php/Main_Page</span></p>\n<p>开发依赖官网提供的 dll 库去跟串口 交互，但是从官网直接下载的 dll 是 32 位的，以下提供 32 位和 64 位的下载地址</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2ZpenplZC5jb20vb3NzL3J4dHgtZm9yLWphdmE=\">http://fizzed.com/oss/rxtx-for-java</span></p>\n<p>或者网盘地址：</p>\n<p>链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTlKUTRGdXBvTlEzYms2LWdicDIzLXc=\">https://pan.baidu.com/s/19JQ4FupoNQ3bk6-gbp23-w</span><br />\n 提取码：bruc</p>\n<p>下载完成后将两个 dll 库放在 jdk/jre/bin 目录下，至于 RXTXcomm.jar 可以放在 jdk/jre/lib/ext 目录下，也可以直接通过 maven 引入</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.bidib.jbidib.org.qbang.rxtx<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>rxtxcomm<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717153502.png\" alt=\"image-20210717153500559\" /></p>\n<h2 id=\"整体效果\"><a class=\"anchor\" href=\"#整体效果\">#</a> 整体效果</h2>\n<p>项目访问地址：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDo4MDgwL3NlcmlhbC8=\">http://localhost:8080/serial/</span></p>\n<p>打开串口：</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717153900.png\" alt=\"image-20210717153858961\" /></p>\n<p>给串口发送信息：</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717153947.png\" alt=\"image-20210717153945679\" /></p>\n<p>后台日志：</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717154016.png\" alt=\"image-20210717154015449\" /></p>\n<p>串口工具接收到串口数据：（可以事先使用虚拟串口驱动工具生成虚拟串口来模拟。已经上传到文章开头的网盘。）</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717154512.png\" alt=\"image-20210717154510444\" /></p>\n<p>虚拟串口：</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717154656.png\" alt=\"image-20210717154654667\" /></p>\n<p>关闭串口：</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717154922.png\" alt=\"image-20210717154921032\" /></p>\n<h2 id=\"实现思路\"><a class=\"anchor\" href=\"#实现思路\">#</a> 实现思路</h2>\n<ol>\n<li>获取可用的串口</li>\n<li>打开串口</li>\n<li>对串口进行读写</li>\n<li>将串口读取到的内容使用 WebSocket 实施推送给前端</li>\n</ol>\n<p>RXTX 官网提供了一系列的 API，使用频率较高的有 CommPort、SerialPort、SerialPortEvent</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717152924.png\" alt=\"image-20210717152819650\" /></p>\n<h3 id=\"获取正在使用的串口\"><a class=\"anchor\" href=\"#获取正在使用的串口\">#</a> 获取正在使用的串口</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 查找当前正在使用的所有串口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/listPorts\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">ModelMap</span> <span class=\"token function\">listPorts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">ModelMap</span> modelMap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ModelMap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">CommPortIdentifier</span> commPortIdentifier<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Enumeration</span> ports <span class=\"token operator\">=</span> <span class=\"token class-name\">CommPortIdentifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPortIdentifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> portList <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ports<span class=\"token punctuation\">.</span><span class=\"token function\">hasMoreElements</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            commPortIdentifier <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CommPortIdentifier</span><span class=\"token punctuation\">)</span> ports<span class=\"token punctuation\">.</span><span class=\"token function\">nextElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>commPortIdentifier<span class=\"token punctuation\">.</span><span class=\"token function\">getPortType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">CommPortIdentifier</span><span class=\"token punctuation\">.</span>PORT_SERIAL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                portList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>commPortIdentifier<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前正在使用的串口有：&#123;&#125;\"</span><span class=\"token punctuation\">,</span> commPortIdentifier<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        modelMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span> portList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> modelMap<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"打开串口\"><a class=\"anchor\" href=\"#打开串口\">#</a> 打开串口</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 打开指定端口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @param serialDO 串口参数对象</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @return 串口的对象</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/openPort\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">openPort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialDO</span> serialDO<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口参数：&#123;&#125;\"</span><span class=\"token punctuation\">,</span> serialDO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">SerialPort</span> serialPort <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 获取指定端口对象</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">CommPortIdentifier</span> portIdentifier <span class=\"token operator\">=</span> <span class=\"token class-name\">CommPortIdentifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPortIdentifier</span><span class=\"token punctuation\">(</span>serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getPortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token comment\">// 打开指定端口，同时指定超时时间</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">CommPort</span> commPort <span class=\"token operator\">=</span> portIdentifier<span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span>serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getPortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 判断端口是否是串口</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>commPort <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SerialPort</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打开串口:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getPortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                serialPort <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialPort</span><span class=\"token punctuation\">)</span> commPort<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                serialMap<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getPortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> serialPort<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                globalPortName <span class=\"token operator\">=</span> serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getPortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token comment\">// 添加串口监听事件</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">SerialPortListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token comment\">// 设置串口参数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">setSerialPortParams</span><span class=\"token punctuation\">(</span>serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getBaudrate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getDataBits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getStopBits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getParity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token comment\">// 当有数据到达时唤醒数据接收线程</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">notifyOnDataAvailable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token comment\">// 当串口连接中断时唤醒中断线程</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">notifyOnBreakInterrupt</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">notifyOnCarrierDetect</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">notifyOnDSR</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功打开串口\"</span> <span class=\"token operator\">+</span> serialDO<span class=\"token punctuation\">.</span><span class=\"token function\">getPortName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未找到指定串口！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoSuchPortException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">NoSuchPortException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未找到指定串口！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未找到指定串口！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PortInUseException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口被占用！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口被占用！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">UnsupportedCommOperationException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打开串口出错！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"打开串口出错！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">TooManyListenersException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口监听实例过多！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口监听实例过多！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"给串口发送消息\"><a class=\"anchor\" href=\"#给串口发送消息\">#</a> 给串口发送消息</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 发送消息给指定串口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @param portName 串口名</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @param msg      接收前端消息</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/sendMsgToPort\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">sendMsgToPort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> portName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">SerialPort</span> serialPort <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialPort</span><span class=\"token punctuation\">)</span> serialMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>portName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">OutputStream</span> outputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            outputStream <span class=\"token operator\">=</span> serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StandardCharsets</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息给串口&#123;&#125;:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> portName<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息异常！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息异常！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                outputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息关闭流异常！\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"从串口读取数据\"><a class=\"anchor\" href=\"#从串口读取数据\">#</a> 从串口读取数据</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 从指定串口读取数据</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @param portName 串口名</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/readMsgFromPort\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">readMsgFromPort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> portName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">SerialPort</span> serialPort <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialPort</span><span class=\"token punctuation\">)</span> serialMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>portName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> msgBytes <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            inputStream <span class=\"token operator\">=</span> serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">int</span> msgLength <span class=\"token operator\">=</span> inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                msgBytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span>msgLength<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>msgBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                msgLength <span class=\"token operator\">=</span> inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">available</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> msgBytes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从串口&#123;&#125;接收到数据:&#123;&#125;\"</span><span class=\"token punctuation\">,</span> portName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msgBytes<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GBK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功接受到数据！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msgBytes<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GBK\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取数据异常！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取数据异常！&#123;&#125;\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取数据时输入流关闭失败！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"读取数据时输入流关闭失败！&#123;&#125;\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息接收中...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"关闭串口\"><a class=\"anchor\" href=\"#关闭串口\">#</a> 关闭串口</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 关闭串口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * @param portName</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/closePort\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">closePort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> portName<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">SerialPort</span> serialPort <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialPort</span><span class=\"token punctuation\">)</span> serialMap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>portName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span> <span class=\"token operator\">!=</span> serialPort<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            serialPort<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口&#123;&#125;已关闭！\"</span><span class=\"token punctuation\">,</span> portName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口\"</span> <span class=\"token operator\">+</span> portName <span class=\"token operator\">+</span> <span class=\"token string\">\"已关闭！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"串口错误，未找到指定串口&#123;&#125;\"</span><span class=\"token punctuation\">,</span> portName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setCode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StateCodeEnum</span><span class=\"token punctuation\">.</span>FAIL<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            result<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"未找到指定串口\"</span><span class=\"token operator\">+</span>portName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"串口事件\"><a class=\"anchor\" href=\"#串口事件\">#</a> 串口事件</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>listener</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Result</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SerialController</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CustomerWebSocketServer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">gnu<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">gnu<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SerialPortEventListener</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>java_websocket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>java_websocket<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSocketServer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * 串口事件监听</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> * @Description:</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * @Author: Fan</pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * @Date: 2021/7/11 20:27</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"26\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SerialPortListener</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">SerialPortEventListener</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> LOGGER <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialPortListener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token class-name\">Result</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">SerialPortListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token annotation punctuation\">@Autowired</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token class-name\">WebSocketServer</span> webSocketServer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">serialEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialPortEvent</span> serialPortEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>serialPortEvent<span class=\"token punctuation\">.</span><span class=\"token function\">getEventType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token comment\">// 监听串口，当接收到数据时触发</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>DATA_AVAILABLE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                result <span class=\"token operator\">=</span> <span class=\"token class-name\">SerialController</span><span class=\"token punctuation\">.</span><span class=\"token function\">readMsgFromPort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SerialController</span><span class=\"token punctuation\">.</span>globalPortName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token comment\">// TODO 推送给前端</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                webSocketServer<span class=\"token punctuation\">.</span><span class=\"token function\">broadcast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>OUTPUT_BUFFER_EMPTY<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"发送消息缓冲区为空！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>CTS<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"待发送数据已清除！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>DSR<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"待发送数据已就绪！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>RI<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"振铃指示！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>CD<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"载波检测！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>OE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"位溢出！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>PE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"奇偶校验错误！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>FE<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"帧错误！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token keyword\">case</span> <span class=\"token class-name\">SerialPortEvent</span><span class=\"token punctuation\">.</span>BI<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"通讯中断!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"websocket服务端创建\"><a class=\"anchor\" href=\"#websocket服务端创建\">#</a> WebSocket 服务端创建</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>websocket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>java_websocket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>java_websocket<span class=\"token punctuation\">.</span>handshake<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ClientHandshake</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>java_websocket<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSocketServer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Logger</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>slf4j<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Autowired</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * websocket 服务器</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Description:</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @Author: Fan</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @Date: 2021/7/13 0:46</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CustomerWebSocketServer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebSocketServer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Logger</span> LOGGER <span class=\"token operator\">=</span> <span class=\"token class-name\">LoggerFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogger</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CustomerWebSocketServer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">WebSocket</span> webSocket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CustomerWebSocketServer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InetSocketAddress</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onOpen</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocket</span> conn<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ClientHandshake</span> handshake<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token comment\">// 点对点发送消息</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        conn<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to the server!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setWebSocket</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token comment\">// 广播消息</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">broadcast</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"new connection: \"</span> <span class=\"token operator\">+</span> handshake<span class=\"token punctuation\">.</span><span class=\"token function\">getResourceDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"与客户端&#123;&#125;建立了连接\"</span><span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onClose</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocket</span> conn<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> code<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> reason<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> remote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"客户端&#123;&#125;断开连接，错误码=&#123;&#125;，原因：&#123;&#125;\"</span><span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> reason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocket</span> conn<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从客户端&#123;&#125;接收到消息&#123;&#125;\"</span><span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMessage</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">WebSocket</span> conn<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ByteBuffer</span> message <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"从客户端&#123;&#125;接收到消息&#123;&#125;\"</span><span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocket</span> conn<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket连接错误：&#123;&#125;\"</span><span class=\"token punctuation\">,</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        LOGGER<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"成功开启socket服务端！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">WebSocket</span> <span class=\"token function\">getWebSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">return</span> webSocket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWebSocket</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WebSocket</span> webSocket<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>webSocket <span class=\"token operator\">=</span> webSocket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>     * 测试</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>     * @param args</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token class-name\">String</span> host <span class=\"token operator\">=</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">8887</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token class-name\">WebSocketServer</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomerWebSocketServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        server<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>实例化 WebSocket 服务端实例</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>websocket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>websocket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CustomerWebSocketServer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>java_websocket<span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebSocketServer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>beans<span class=\"token punctuation\">.</span>factory<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configurable</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * 初始化 websocket 服务器</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @Description:</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @Author: Fan</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Date: 2021/7/12 0:14</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WebSocketConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">WebSocketServer</span> <span class=\"token function\">webSocketServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">String</span> host <span class=\"token operator\">=</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">8887</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">WebSocketServer</span> webSocketServer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CustomerWebSocketServer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        webSocketServer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">return</span> webSocketServer<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"前端实现\"><a class=\"anchor\" href=\"#前端实现\">#</a> 前端实现</h3>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>th</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://www.thymeleaf.org<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>include :: header(<span class=\"token punctuation\">'</span>Love And Peace Serial Tool<span class=\"token punctuation\">'</span>)<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-row</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-tooltip</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">manual</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_show<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">effect</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dark<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placement</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:hide-after</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5000<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-button</span> <span class=\"token attr-name\">icon</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-search<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>success<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">plain</span> <span class=\"token attr-name\"><span class=\"token namespace\">v-on:</span>click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>selectSerials<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>查询<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>(item, index) in serials<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>index<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                    <span class=\"token comment\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-tooltip</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_show?false:true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>查询系统当前正在使用的串口！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-row</span> <span class=\"token attr-name\">:gutter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>row<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请输入要打开或者关闭的串口！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>只需输入数字即可，如1、2、3...<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                          <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_port<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                          <span class=\"token attr-name\">clearable</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">slot</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>prepend<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>COM<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请输入波特率！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-input</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                        <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>如115200、9600<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                        <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_baudrate<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                        <span class=\"token attr-name\">clearable</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-input</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请选择数据位！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-select</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_databits<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">clearable</span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请选择数据位<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-option</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                            <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in serial_databits_select<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                            <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.value<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            <span class=\"token attr-name\">:label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.label<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                            <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请选择停止位！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-select</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_stopbits<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">clearable</span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请选择停止位<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-option</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                            <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in serial_stopbits_select<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                            <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.value<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                            <span class=\"token attr-name\">:label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.label<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                            <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>font<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>i</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>请选择校验位！<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>i</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-select</span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_parity<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">clearable</span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请选择校验位<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-option</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                            <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item in serial_parity_select<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                            <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.value<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                            <span class=\"token attr-name\">:label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.label<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                            <span class=\"token attr-name\">:value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item.value<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-option</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-select</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>openButton<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>!serial_state<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-button</span> <span class=\"token attr-name\">icon</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-circle-check<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">plain</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                               <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>openOrCloseSerial<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>打开串口<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">v-show</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_state<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-button</span> <span class=\"token attr-name\">icon</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-circle-close<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>warning<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">plain</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                               <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>openOrCloseSerial<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>关闭串口<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid-content bg-purple-light<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_send_content<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>请输入要发送的内容<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>primary<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">round</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serialSend<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">icon</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>el-icon-check<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>发送<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>el-col</span> <span class=\"token attr-name\">:span</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid-content bg-purple-light<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">v-model</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>serial_receive_content<span class=\"token punctuation\">\"</span></span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>接收到的内容为<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-col</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>el-row</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">th:</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">th:</span>include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>include :: footer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">var</span> prefix <span class=\"token operator\">=</span> ctx <span class=\"token operator\">+</span> <span class=\"token string\">\"serial\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        el<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token function-variable function\">data</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                serials<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                serial_show<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                serial_state<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                serial_port<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                serial_baudrate<span class=\"token operator\">:</span> <span class=\"token string\">'9600'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                serial_databits<span class=\"token operator\">:</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>                serial_stopbits<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                serial_parity<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                serial_send_content<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                serial_receive_content<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                serial_databits_select<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'8bit'</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'7bit'</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'6bit'</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'5bit'</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                serial_stopbits_select<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'1bit'</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'1.5'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'1.5bit'</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'2bit'</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                serial_parity_select<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'不校验'</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'奇校验'</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'偶校验'</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'校验位始终为1'</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>                    value<span class=\"token operator\">:</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>                    label<span class=\"token operator\">:</span> <span class=\"token string\">'校验位始终为0'</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        methods<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>            <span class=\"token comment\">/* 查询当前系统正在使用的串口 */</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>            <span class=\"token function\">selectSerials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>                <span class=\"token keyword\">var</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>                $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>                    url<span class=\"token operator\">:</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">\"/listPorts\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>                    type<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>                    dataType<span class=\"token operator\">:</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>                    contentType<span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>                    async<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>                    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>                        res <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>                    <span class=\"token comment\">/*complete: function (xmlhttp) &#123;</pre></td></tr><tr><td data-num=\"163\"></td><td><pre>                        if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>                        &#123;</pre></td></tr><tr><td data-num=\"165\"></td><td><pre>                            console.log(xmlhttp.responseText);</pre></td></tr><tr><td data-num=\"166\"></td><td><pre>                        &#125;</pre></td></tr><tr><td data-num=\"167\"></td><td><pre>                    &#125;*/</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serials <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_show <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>                <span class=\"token comment\">/*var xmlhttp = xmlhttp=new XMLHttpRequest();</pre></td></tr><tr><td data-num=\"172\"></td><td><pre>                xmlhttp.open(\"GET\",prefix + \"/listPorts\",false);</pre></td></tr><tr><td data-num=\"173\"></td><td><pre>                xmlhttp.send();</pre></td></tr><tr><td data-num=\"174\"></td><td><pre>                this.serials = JSON.parse(xmlhttp.responseText).data;</pre></td></tr><tr><td data-num=\"175\"></td><td><pre>                this.serial_show = true;</pre></td></tr><tr><td data-num=\"176\"></td><td><pre>                console.log(xmlhttp.responseText);</pre></td></tr><tr><td data-num=\"177\"></td><td><pre>                console.log(this.serials );*/</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"179\"></td><td><pre></pre></td></tr><tr><td data-num=\"180\"></td><td><pre>            <span class=\"token comment\">/* 打开或关闭串口 */</span></pre></td></tr><tr><td data-num=\"181\"></td><td><pre>            <span class=\"token function\">openOrCloseSerial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre>                <span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$createElement<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_port <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"185\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'端口号不能为空！'</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"188\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_baudrate <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"193\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'请选择波特率！'</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"196\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_databits <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"200\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'请选择数位！'</span></pre></td></tr><tr><td data-num=\"201\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"204\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_stopbits <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"205\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'请选择停止位！'</span></pre></td></tr><tr><td data-num=\"208\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"209\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_parity <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'请选择校验位！'</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"216\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre>                <span class=\"token keyword\">var</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"219\"></td><td><pre>                <span class=\"token keyword\">var</span> send_data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre>                    url <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">'/openPort'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre>                    send_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre>                        <span class=\"token string\">\"portName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'COM'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_port<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"224\"></td><td><pre>                        <span class=\"token string\">\"baudrate\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_baudrate<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre>                        <span class=\"token string\">\"dataBits\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_databits<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre>                        <span class=\"token string\">\"stopBits\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_stopbits<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre>                        <span class=\"token string\">\"parity\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_parity</pre></td></tr><tr><td data-num=\"228\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"230\"></td><td><pre>                    url <span class=\"token operator\">=</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">'/closePort'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"231\"></td><td><pre>                    send_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"232\"></td><td><pre>                        <span class=\"token string\">\"portName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'COM'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_port</pre></td></tr><tr><td data-num=\"233\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"234\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"235\"></td><td><pre>                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>send_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"236\"></td><td><pre>                <span class=\"token keyword\">let</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"237\"></td><td><pre>                $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"238\"></td><td><pre>                    url<span class=\"token operator\">:</span> url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"239\"></td><td><pre>                    type<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"240\"></td><td><pre>                    dataType<span class=\"token operator\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"241\"></td><td><pre>                    data<span class=\"token operator\">:</span> send_data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"242\"></td><td><pre>                    async<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"243\"></td><td><pre>                    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"244\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">startSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"245\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"246\"></td><td><pre>                            that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"247\"></td><td><pre>                                title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"248\"></td><td><pre>                                message<span class=\"token operator\">:</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>style<span class=\"token operator\">:</span> <span class=\"token string\">'color: teal'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"249\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"250\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"251\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"252\"></td><td><pre>                    <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"253\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"254\"></td><td><pre>                            that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"255\"></td><td><pre>                                title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"256\"></td><td><pre>                                message<span class=\"token operator\">:</span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>style<span class=\"token operator\">:</span> <span class=\"token string\">'color: teal'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"257\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"258\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"259\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"260\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"261\"></td><td><pre>                <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_state <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_state<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"262\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"263\"></td><td><pre></pre></td></tr><tr><td data-num=\"264\"></td><td><pre>            <span class=\"token comment\">/* 给串口发送消息 */</span></pre></td></tr><tr><td data-num=\"265\"></td><td><pre>            <span class=\"token function\">serialSend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"266\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>portName <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"267\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"268\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"269\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'端口号不能为空！'</span></pre></td></tr><tr><td data-num=\"270\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"271\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"272\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"273\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_send_content <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"274\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"275\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"276\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'发送内容不能为空！'</span></pre></td></tr><tr><td data-num=\"277\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"278\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"279\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"280\"></td><td><pre>                <span class=\"token keyword\">let</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"281\"></td><td><pre>                $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"282\"></td><td><pre>                    url<span class=\"token operator\">:</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">'/sendMsgToPort'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"283\"></td><td><pre>                    type<span class=\"token operator\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"284\"></td><td><pre>                    dataType<span class=\"token operator\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"285\"></td><td><pre>                    async<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"286\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"287\"></td><td><pre>                        <span class=\"token string\">\"portName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'COM'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_port<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"288\"></td><td><pre>                        <span class=\"token string\">\"msg\"</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_send_content</pre></td></tr><tr><td data-num=\"289\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"290\"></td><td><pre>                    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"291\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"292\"></td><td><pre>                            title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"293\"></td><td><pre>                            message<span class=\"token operator\">:</span> result<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"294\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'success'</span></pre></td></tr><tr><td data-num=\"295\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"296\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"297\"></td><td><pre>                        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_receive_content <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"298\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"299\"></td><td><pre>                    <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"300\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"301\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"302\"></td><td><pre>                            title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"303\"></td><td><pre>                            message<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"304\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'error'</span></pre></td></tr><tr><td data-num=\"305\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"306\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"307\"></td><td><pre>                    <span class=\"token comment\">/*complete() &#123;</pre></td></tr><tr><td data-num=\"308\"></td><td><pre>                        that.serialReceive();</pre></td></tr><tr><td data-num=\"309\"></td><td><pre>                    &#125;*/</span></pre></td></tr><tr><td data-num=\"310\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"311\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"312\"></td><td><pre></pre></td></tr><tr><td data-num=\"313\"></td><td><pre>            <span class=\"token comment\">/* 从串口接收消息 */</span></pre></td></tr><tr><td data-num=\"314\"></td><td><pre>            <span class=\"token function\">serialReceive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"315\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>portName <span class=\"token operator\">==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"316\"></td><td><pre>                    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$notify<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"317\"></td><td><pre>                        title<span class=\"token operator\">:</span> <span class=\"token string\">'错误'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"318\"></td><td><pre>                        message<span class=\"token operator\">:</span> <span class=\"token string\">'端口号不能为空！'</span></pre></td></tr><tr><td data-num=\"319\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"320\"></td><td><pre>                    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"321\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"322\"></td><td><pre>                <span class=\"token keyword\">let</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"323\"></td><td><pre>                $<span class=\"token punctuation\">.</span><span class=\"token function\">ajax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"324\"></td><td><pre>                    url<span class=\"token operator\">:</span> prefix <span class=\"token operator\">+</span> <span class=\"token string\">'/readMsgFromPort'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"325\"></td><td><pre>                    type<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"326\"></td><td><pre>                    dataType<span class=\"token operator\">:</span> <span class=\"token string\">'json'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"327\"></td><td><pre>                    async<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"328\"></td><td><pre>                    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"329\"></td><td><pre>                        <span class=\"token string\">\"portName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">'COM'</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_port</pre></td></tr><tr><td data-num=\"330\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"331\"></td><td><pre>                    <span class=\"token function-variable function\">success</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"332\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"333\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>data <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"334\"></td><td><pre>                            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serial_receive_content <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"335\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"336\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"337\"></td><td><pre>                    <span class=\"token function-variable function\">error</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"338\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"339\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"340\"></td><td><pre>                            title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"341\"></td><td><pre>                            message<span class=\"token operator\">:</span> err<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"342\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'error'</span></pre></td></tr><tr><td data-num=\"343\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"344\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"345\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"346\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"347\"></td><td><pre></pre></td></tr><tr><td data-num=\"348\"></td><td><pre>            <span class=\"token comment\">/* 建立 socket 连接 */</span></pre></td></tr><tr><td data-num=\"349\"></td><td><pre>            <span class=\"token function\">startSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"350\"></td><td><pre>                <span class=\"token keyword\">let</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"351\"></td><td><pre>                <span class=\"token keyword\">var</span> socket<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"352\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token punctuation\">(</span>WebSocket<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"undefined\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"353\"></td><td><pre>                    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" 您的浏览器不支持 WebSocket\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"354\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"355\"></td><td><pre>                    socket <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebSocket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ws://localhost:8887\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"356\"></td><td><pre>                    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onopen</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"357\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"358\"></td><td><pre>                            title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"359\"></td><td><pre>                            message<span class=\"token operator\">:</span> <span class=\"token string\">\"socket已连接！\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"360\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'success'</span></pre></td></tr><tr><td data-num=\"361\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"362\"></td><td><pre>                        socket<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"来自客户端的消息 \"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"-\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"363\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"364\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"365\"></td><td><pre>                    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onmessage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">msg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"366\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"接收到服务端消息：\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"367\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"368\"></td><td><pre>                    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onclose</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"369\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"370\"></td><td><pre>                            title<span class=\"token operator\">:</span> <span class=\"token string\">'温馨提示！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"371\"></td><td><pre>                            message<span class=\"token operator\">:</span> <span class=\"token string\">\"socket连接已断开！\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"372\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span></pre></td></tr><tr><td data-num=\"373\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"374\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"375\"></td><td><pre>                    socket<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onerror</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"376\"></td><td><pre>                        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket错误：\"</span> <span class=\"token operator\">+</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"377\"></td><td><pre>                        that<span class=\"token punctuation\">.</span><span class=\"token function\">$notify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"378\"></td><td><pre>                            title<span class=\"token operator\">:</span> <span class=\"token string\">'警告！'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"379\"></td><td><pre>                            message<span class=\"token operator\">:</span> <span class=\"token string\">\"socket已断开，请刷新页面！\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"380\"></td><td><pre>                            type<span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span></pre></td></tr><tr><td data-num=\"381\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"382\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"383\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"384\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"385\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"386\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"387\"></td><td><pre></pre></td></tr><tr><td data-num=\"388\"></td><td><pre></pre></td></tr><tr><td data-num=\"389\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"390\"></td><td><pre></pre></td></tr><tr><td data-num=\"391\"></td><td><pre><span class=\"token comment\">&lt;!-- 连接 socket 服务器 --></span></pre></td></tr><tr><td data-num=\"392\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"393\"></td><td><pre></pre></td></tr><tr><td data-num=\"394\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"395\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"396\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"></pre></td></tr><tr><td data-num=\"397\"></td><td><pre>    <span class=\"token selector\">.all</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"398\"></td><td><pre>        <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"399\"></td><td><pre>        <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 50px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"400\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"401\"></td><td><pre></pre></td></tr><tr><td data-num=\"402\"></td><td><pre>    <span class=\"token selector\">.row</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"403\"></td><td><pre>        <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> 60px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"404\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"405\"></td><td><pre></pre></td></tr><tr><td data-num=\"406\"></td><td><pre>    <span class=\"token selector\">.font</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"407\"></td><td><pre>        <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"408\"></td><td><pre>        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"409\"></td><td><pre>        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #C0C4CC<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"410\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"411\"></td><td><pre></pre></td></tr><tr><td data-num=\"412\"></td><td><pre>    <span class=\"token selector\">.bg-purple-light</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"413\"></td><td><pre>        <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #303133<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"414\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"415\"></td><td><pre></pre></td></tr><tr><td data-num=\"416\"></td><td><pre>    <span class=\"token selector\">.grid-content</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"417\"></td><td><pre>        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> white<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"418\"></td><td><pre>        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Arial Narrow\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"419\"></td><td><pre>        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"420\"></td><td><pre>        <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"421\"></td><td><pre>        <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"422\"></td><td><pre>        <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"423\"></td><td><pre>        <span class=\"token property\">min-width</span><span class=\"token punctuation\">:</span> 378.13px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"424\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"425\"></td><td><pre></pre></td></tr><tr><td data-num=\"426\"></td><td><pre>    <span class=\"token selector\">.openButton</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"427\"></td><td><pre>        <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"428\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"429\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"430\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"代码地址\"><a class=\"anchor\" href=\"#代码地址\">#</a> 代码地址</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYmZhbmZhbmZhbi9zZXJpYWwtZ28=\">https://gitee.com/bfanfanfan/serial-go</span></p>\n<p>个人博客：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iZmFuZmFuZmFuLmdpdGVlLmlvL2ZhbmZhbmZhbg==\">书院十四先生</span></p>\n<p>微信公众号：一只小白猿</p>\n<p>微信表情：文字有声</p>\n<p>唱吧：bf19960618</p>\n<h2 id=\"遗留的问题\"><a class=\"anchor\" href=\"#遗留的问题\">#</a> 遗留的问题</h2>\n<p>在测试时发现，串口监听事件类中注入的 WebSocketServer 实例位空，也就是说该实例并没有初始化成功，导致无法调用该实例的发送方法向前端去实施推送接收到的串口消息。该问题目前仍无法解决，如果有解决方法的同学，记得留言！</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210717163115.png\" alt=\"image-20210717163113839\" /></p>\n<h2 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h2>\n<pre><code>【1】https://blog.csdn.net/wu_boy/article/details/112062071\n【2】https://blog.csdn.net/qq_32523587/article/details/73605751?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-1&amp;spm=1001.2101.3001.4242\n</code></pre>\n",
            "tags": [
                "工具",
                "Java",
                "前端",
                "工具",
                "Java",
                "Vue",
                "WebSocket"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89",
            "url": "https://www.baiyezi.vip/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89",
            "title": "手动实现翻译小工具（一）",
            "date_published": "2021-12-24T01:30:17.000Z",
            "content_html": "<p>第一次推文，就先写写最近在做的翻译小工具。通过调用有道云 API 或者百度翻译的 API 来获得翻译资源。</p>\n<h5 id=\"注册有道智云或者百度翻译开放平台\"><a class=\"anchor\" href=\"#注册有道智云或者百度翻译开放平台\">#</a> 🥗 注册有道智云或者百度翻译开放平台：</h5>\n<p>有道智云：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9haS55b3VkYW8uY29tL3JlZ2lzdGVyLnM=\">https://ai.youdao.com/register.s</span></p>\n<p>百度翻译开放平台：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYW55aS1hcGkuYmFpZHUuY29tLw==\">https://fanyi-api.baidu.com/</span></p>\n<p>以下例程将以有道智云为例展开。</p>\n<h5 id=\"注册成功后首先创建一个实例\"><a class=\"anchor\" href=\"#注册成功后首先创建一个实例\">#</a> 🐤 注册成功后首先创建一个实例：</h5>\n<p><img data-src=\"%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200815114216458.png\" alt=\"image-20200815114216458\" /></p>\n<h5 id=\"紧接着创建一个应用注意接入方式选择api\"><a class=\"anchor\" href=\"#紧接着创建一个应用注意接入方式选择api\">#</a> 🌛 紧接着创建一个应用，注意接入方式选择 API：</h5>\n<p><img data-src=\"%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200815121700345.png\" alt=\"image-20200815121700345\" /></p>\n<h5 id=\"应用创建好之后需要绑定刚才创建的实例\"><a class=\"anchor\" href=\"#应用创建好之后需要绑定刚才创建的实例\">#</a> 👱‍♀ 应用创建好之后需要绑定刚才创建的实例：</h5>\n<p><img data-src=\"%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200815122030635.png\" alt=\"image-20200815122030635\" /></p>\n<p>之后便可以通过 API 来进行编程了，有道云官方文档提供了几种编程语言的 demo，这里将以前端调用 API 为例展开讲解。</p>\n<p>官方文档：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9haS55b3VkYW8uY29tL0RPQ1NJUk1BL2h0bWwv\">https://ai.youdao.com/DOCSIRMA/html/</span></p>\n<h5 id=\"此次功能以前端框架vue以及前端样式组件element-ui来进行实现-整体效果如下\"><a class=\"anchor\" href=\"#此次功能以前端框架vue以及前端样式组件element-ui来进行实现-整体效果如下\">#</a> 🌾 此次功能以前端框架 vue 以及前端样式组件 element-ui 来进行实现。整体效果如下：</h5>\n<p><img data-src=\"%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200815145557509.png\" alt=\"image-20200815145557509\" /></p>\n<p>其中应用 ID 以及应用密钥可以在刚才创建的应用中找到：</p>\n<p><img data-src=\"%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200815145900909.png\" alt=\"image-20200815145900909\" /></p>\n<p>目前整体功能还在进一步完善，有时间再写后续！</p>\n<h6 id=\"整体代码如下\"><a class=\"anchor\" href=\"#整体代码如下\">#</a> 📑 整体代码如下：</h6>\n<pre><code class=\"language-vue\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Translate&lt;/title&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/element-ui@2.13.1/lib/theme-chalk/index.css&quot;&gt;\n    &lt;link rel=&quot;stylesheet&quot; href=&quot;../resources/css/animate.css&quot;&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=&quot;app&quot;&gt;\n&lt;template&gt;\n    &lt;el-row style=&quot;margin-bottom: 10px&quot;&gt;\n        &lt;el-col :span=&quot;24&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;el-radio v-model=&quot;radio&quot; label=&quot;1&quot; @change=&quot;radioLabelValue&quot;&gt;有道云翻译&lt;/el-radio&gt;\n            &lt;el-radio v-model=&quot;radio&quot; label=&quot;2&quot; @change=&quot;radioLabelValue&quot;&gt;百度翻译&lt;/el-radio&gt;\n        &lt;/el-col&gt;\n    &lt;/el-row&gt;\n    &lt;el-row :gutter=&quot;10&quot; style=&quot;margin: 15px 0&quot;&gt;\n        &lt;el-col :span=&quot;12&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;el-input\n                    placeholder=&quot;请输入应用ID&quot;\n                    prefix-icon=&quot;el-icon-edit&quot;\n                    v-model=&quot;input_appKey&quot;\n                    clearable\n                    &gt;\n                &lt;template slot=&quot;prepend&quot;&gt;应用ID&lt;/template&gt;\n            &lt;/el-input&gt;\n        &lt;/el-col&gt;\n        &lt;el-col :span=&quot;12&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;el-input\n                    placeholder=&quot;请输入应用密钥&quot;\n                    prefix-icon=&quot;el-icon-edit&quot;\n                    v-model=&quot;input_key&quot;\n                    clearable\n                    &gt;\n                &lt;template slot=&quot;prepend&quot;&gt;应用密钥&lt;/template&gt;\n            &lt;/el-input&gt;\n        &lt;/el-col&gt;\n    &lt;/el-row&gt;\n    &lt;el-row&gt;\n        &lt;el-col :span=&quot;12&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;el-tag type=&quot;success&quot; &gt;源语言：&lt;/el-tag&gt;\n            &lt;el-select v-model=&quot;selectSrcValue==''?'auto':selectSrcValue&quot; clearable filterable placeholder=&quot;请选择&quot; @change=&quot;selectValue_src&quot;&gt;\n                &lt;el-option\n                        v-for=&quot;item in options&quot;\n                        :key=&quot;item.value&quot;\n                        :label=&quot;item.label&quot;\n                        :value=&quot;item.value&quot;&gt;\n                    &lt;span style=&quot;float: left&quot;&gt;&#123;&#123; item.label &#125;&#125;&lt;/span&gt;\n                    &lt;span style=&quot;float: right; color: #8492a6; font-size: 13px&quot;&gt;&#123;&#123; item.value &#125;&#125;&lt;/span&gt;\n                &lt;/el-option&gt;\n            &lt;/el-select&gt;\n        &lt;/el-col&gt;\n        &lt;el-col :span=&quot;12&quot; :offset=&quot;1&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;el-tag type=&quot;success&quot; &gt;目标语言：&lt;/el-tag&gt;\n            &lt;el-select v-model=&quot;selectDistValue==''?'en':selectDistValue&quot; clearable filterable placeholder=&quot;请选择&quot; @change=&quot;selectValue_dist&quot;&gt;\n                &lt;el-option\n                        v-for=&quot;item in options&quot;\n                        :key=&quot;item.value&quot;\n                        :label=&quot;item.label&quot;\n                        :value=&quot;item.value&quot;&gt;\n                    &lt;span style=&quot;float: left&quot;&gt;&#123;&#123; item.label &#125;&#125;&lt;/span&gt;\n                    &lt;span style=&quot;float: right; color: #8492a6; font-size: 13px&quot;&gt;&#123;&#123; item.value &#125;&#125;&lt;/span&gt;\n                &lt;/el-option&gt;\n            &lt;/el-select&gt;\n        &lt;/el-col&gt;\n    &lt;/el-row&gt;\n    &lt;el-row &gt;\n        &lt;el-col :span=&quot;12&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;textarea class=&quot;grid-content bg-purple-light&quot; v-model=&quot;trans_source&quot; placeholder=&quot;请输入要翻译的词或语句！&quot;&gt;&lt;/textarea&gt;\n        &lt;/el-col&gt;\n        &lt;el-col :span=&quot;12&quot; :offset=&quot;1&quot; :xs=&quot;4&quot; :sm=&quot;6&quot; :md=&quot;8&quot; :lg=&quot;9&quot; :xl=&quot;11&quot;&gt;\n            &lt;el-row style=&quot;margin-top:50px; width: 80px&quot;&gt;\n\n                &lt;el-tooltip  v-model=&quot;translation_show&quot; manual class=&quot;item&quot; effect=&quot;dark&quot;  placement=&quot;right-end&quot;&gt;\n                    &lt;div&gt;\n                        &lt;el-tag type=&quot;info&quot; v-show=&quot;translation_show&quot; class=&quot;animated bounceInDown&quot;&gt;结果：&lt;/el-tag&gt;\n                    &lt;/div&gt;\n                    &lt;div slot=&quot;content&quot; v-for=&quot;(item, index) in translation&quot; :key=&quot;index&quot;&gt;\n                        &#123;&#123;item&#125;&#125;&lt;/br&gt;\n                    &lt;/div&gt;\n                &lt;/el-tooltip&gt;\n\n            &lt;/el-row&gt;\n            &lt;el-row style=&quot;margin-top:50px; width: 80px&quot;&gt;\n                &lt;el-tooltip  v-model=&quot;basic_show&quot; manual class=&quot;item&quot; effect=&quot;dark&quot;  placement=&quot;right-end&quot;&gt;\n                    &lt;div&gt;\n                        &lt;el-tag type=&quot;warning&quot; v-show=&quot;basic_show&quot; class=&quot;animated bounceInDown&quot;&gt;基础词典：&lt;/el-tag&gt;\n                    &lt;/div&gt;\n                    &lt;div slot=&quot;content&quot; v-for=&quot;(item, index) in basic&quot; :key=&quot;index&quot;&gt;\n                        &#123;&#123;item&#125;&#125;&lt;/br&gt;\n                    &lt;/div&gt;\n                &lt;/el-tooltip&gt;\n            &lt;/el-row&gt;\n            &lt;el-row style=&quot;margin-top:50px; width: 80px&quot;&gt;\n                &lt;el-tooltip v-model=&quot;web_show&quot; manual class=&quot;item&quot; effect=&quot;dark&quot;  placement=&quot;right-end&quot;&gt;\n                    &lt;div&gt;\n                        &lt;el-tag type=&quot;danger&quot; v-show=&quot;web_show&quot; class=&quot;animated bounceInDown&quot;&gt;网络解释：&lt;/el-tag&gt;\n                    &lt;/div&gt;\n                    &lt;div  slot=&quot;content&quot; v-for=&quot;(item, index) in web&quot; :key=&quot;index&quot;&gt;\n                        &#123;&#123;item.key&#125;&#125;：\n                        &lt;span v-for=&quot;(item1, index1) in item.value&quot; :key=&quot;index1&quot;&gt;\n                            &#123;&#123;item1&#125;&#125;；\n                        &lt;/span&gt;\n                        &lt;/br&gt;\n                    &lt;/div&gt;\n                &lt;/el-tooltip&gt;\n            &lt;/el-row&gt;\n            &lt;!--&lt;textarea disabled class=&quot;grid-content bg-purple-light&quot;&gt;\n                基本词典：&#123;&#123;trans_result&#125;&#125;，\n                网络解释：hello\n            &lt;/textarea&gt;--&gt;\n        &lt;/el-col&gt;\n    &lt;/el-row&gt;\n    &lt;el-button type=&quot;success&quot;  round v-on:click=&quot;doTranslate&quot;&gt;Go&lt;/el-button&gt;\n\n&lt;/template&gt;\n&lt;/div&gt;\n\n&lt;!--vue-resource.min.js需在vue之后引用--&gt;\n&lt;!--&lt;script src=&quot;../resources/js/vue.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;../resources/js/vue-resource.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;../resources/js/crypto-js4.0.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;../resources/js/element-ui@2.13.1_lib_index.js&quot;&gt;&lt;/script&gt;--&gt;\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;../resources/js/vue-resource.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/crypto-js/4.0.0/crypto-js.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://cdn.jsdelivr.net/npm/element-ui@2.13.1/lib/index.js&quot;&gt;&lt;/script&gt;\n&lt;!--\n&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;\n--&gt;\n&lt;script&gt;\n    new Vue(&#123;\n        el: '#app',\n        data: function () &#123;\n            return &#123;\n                radio: '1',\n                options: [&#123;\n                    value: 'auto',\n                    label: '自动识别'\n                &#125;, &#123;\n                    value: 'zh-CHS',\n                    label: '中文'\n                &#125;, &#123;\n                    value: 'en',\n                    label: '英文'\n                &#125;, &#123;\n                    value: 'ja',\n                    label: '日文'\n                &#125;, &#123;\n                    value: 'ko',\n                    label: '韩文'\n                &#125;, &#123;\n                    value: 'fr',\n                    label: '法文'\n                &#125;, &#123;\n                    value: 'es',\n                    label: '西班牙文'\n                &#125;, &#123;\n                    value: 'pt',\n                    label: '葡萄牙文'\n                &#125;, &#123;\n                    value: 'it',\n                    label: '意大利文'\n                &#125;, &#123;\n                    value: 'ru',\n                    label: '俄文'\n                &#125;, &#123;\n                    value: 'vi',\n                    label: '越南文'\n                &#125;, &#123;\n                    value: 'de',\n                    label: '德文'\n                &#125;, &#123;\n                    value: 'ar',\n                    label: '阿拉伯文'\n                &#125;, &#123;\n                    value: 'id',\n                    label: '印尼文'\n                &#125;, &#123;\n                    value: 'af',\n                    label: '南非荷兰语'\n                &#125;, &#123;\n                    value: 'bs',\n                    label: '波斯尼亚语'\n                &#125;, &#123;\n                    value: 'bg',\n                    label: '保加利亚语'\n                &#125;, &#123;\n                    value: 'yue',\n                    label: '粤语'\n                &#125;, &#123;\n                    value: 'ca',\n                    label: '加泰隆语'\n                &#125;, &#123;\n                    value: 'hr',\n                    label: '克罗地亚语'\n                &#125;, &#123;\n                    value: 'cs',\n                    label: '捷克语'\n                &#125;, &#123;\n                    value: 'da',\n                    label: '丹麦语'\n                &#125;, &#123;\n                    value: 'nl',\n                    label: '荷兰语'\n                &#125;, &#123;\n                    value: 'et',\n                    label: '爱沙尼亚语'\n                &#125;, &#123;\n                    value: 'fj',\n                    label: '斐济语'\n                &#125;, &#123;\n                    value: 'fi',\n                    label: '芬兰语'\n                &#125;, &#123;\n                    value: 'el',\n                    label: '希腊语'\n                &#125;, &#123;\n                    value: 'ht',\n                    label: '海地克里奥尔语'\n                &#125;, &#123;\n                    value: 'he',\n                    label: '希伯来语'\n                &#125;, &#123;\n                    value: 'hi',\n                    label: '印地语'\n                &#125;, &#123;\n                    value: 'mww',\n                    label: '白苗语'\n                &#125;, &#123;\n                    value: 'hu',\n                    label: '匈牙利语'\n                &#125;, &#123;\n                    value: 'sw',\n                    label: '斯瓦希里语'\n                &#125;, &#123;\n                    value: 'tlh',\n                    label: '克林贡语'\n                &#125;, &#123;\n                    value: 'lv',\n                    label: '拉脱维亚语'\n                &#125;, &#123;\n                    value: 'lt',\n                    label: '立陶宛语'\n                &#125;, &#123;\n                    value: 'ms',\n                    label: '马来语'\n                &#125;, &#123;\n                    value: 'mt',\n                    label: '马耳他语'\n                &#125;, &#123;\n                    value: 'no',\n                    label: '挪威语'\n                &#125;, &#123;\n                    value: 'fa',\n                    label: '波斯语'\n                &#125;, &#123;\n                    value: 'pl',\n                    label: '波兰语'\n                &#125;, &#123;\n                    value: 'otq',\n                    label: '克雷塔罗奥托米语'\n                &#125;, &#123;\n                    value: 'ro',\n                    label: '罗马尼亚语'\n                &#125;, &#123;\n                    value: 'sr-Cyrl',\n                    label: '塞尔维亚语(西里尔文)'\n                &#125;, &#123;\n                    value: 'sr-Latn',\n                    label: '塞尔维亚语(拉丁文)'\n                &#125;, &#123;\n                    value: 'sk',\n                    label: '斯洛伐克语'\n                &#125;, &#123;\n                    value: 'sl',\n                    label: '斯洛文尼亚语'\n                &#125;, &#123;\n                    value: 'sv',\n                    label: '瑞典语'\n                &#125;, &#123;\n                    value: 'ty',\n                    label: '塔希提语'\n                &#125;, &#123;\n                    value: 'th',\n                    label: '泰语'\n                &#125;, &#123;\n                    value: 'to',\n                    label: '汤加语'\n                &#125;, &#123;\n                    value: 'tr',\n                    label: '土耳其语'\n                &#125;, &#123;\n                    value: 'uk',\n                    label: '乌克兰语'\n                &#125;, &#123;\n                    value: 'ur',\n                    label: '乌尔都语'\n                &#125;, &#123;\n                    value: 'cy',\n                    label: '威尔士语'\n                &#125;, &#123;\n                    value: 'yua',\n                    label: '尤卡坦玛雅语'\n                &#125;, &#123;\n                    value: 'sq',\n                    label: '阿尔巴尼亚语'\n                &#125;, &#123;\n                    value: 'am',\n                    label: '阿姆哈拉语'\n                &#125;, &#123;\n                    value: 'hy',\n                    label: '亚美尼亚语'\n                &#125;, &#123;\n                    value: 'az',\n                    label: '阿塞拜疆语'\n                &#125;, &#123;\n                    value: 'bn',\n                    label: '孟加拉语'\n                &#125;, &#123;\n                    value: 'eu',\n                    label: '巴斯克语'\n                &#125;, &#123;\n                    value: 'be',\n                    label: '白俄罗斯语'\n                &#125;, &#123;\n                    value: 'ceb',\n                    label: '宿务语'\n                &#125;, &#123;\n                    value: 'co',\n                    label: '科西嘉语'\n                &#125;, &#123;\n                    value: 'eo',\n                    label: '世界语'\n                &#125;, &#123;\n                    value: 'tl',\n                    label: '菲律宾语'\n                &#125;, &#123;\n                    value: 'fy',\n                    label: '弗里西语'\n                &#125;, &#123;\n                    value: 'gl',\n                    label: '加利西亚语'\n                &#125;, &#123;\n                    value: 'ka',\n                    label: '格鲁吉亚语'\n                &#125;, &#123;\n                    value: 'gu',\n                    label: '古吉拉特语'\n                &#125;, &#123;\n                    value: 'ha',\n                    label: '豪萨语'\n                &#125;, &#123;\n                    value: 'haw',\n                    label: '夏威夷语'\n                &#125;, &#123;\n                    value: 'is',\n                    label: '冰岛语'\n                &#125;, &#123;\n                    value: 'ig',\n                    label: '伊博语'\n                &#125;, &#123;\n                    value: 'ga',\n                    label: '爱尔兰语'\n                &#125;, &#123;\n                    value: 'jw',\n                    label: '爪哇语'\n                &#125;, &#123;\n                    value: 'kn',\n                    label: '卡纳达语'\n                &#125;, &#123;\n                    value: 'kk',\n                    label: '哈萨克语'\n                &#125;, &#123;\n                    value: 'km',\n                    label: '高棉语'\n                &#125;, &#123;\n                    value: 'ku',\n                    label: '库尔德语'\n                &#125;, &#123;\n                    value: 'ky',\n                    label: '柯尔克孜语'\n                &#125;, &#123;\n                    value: 'lo',\n                    label: '老挝语'\n                &#125;, &#123;\n                    value: 'la',\n                    label: '拉丁语'\n                &#125;, &#123;\n                    value: 'lb',\n                    label: '卢森堡语'\n                &#125;, &#123;\n                    value: 'mk',\n                    label: '马其顿语'\n                &#125;, &#123;\n                    value: 'mg',\n                    label: '马尔加什语'\n                &#125;, &#123;\n                    value: 'ml',\n                    label: '马拉雅拉姆语'\n                &#125;, &#123;\n                    value: 'mi',\n                    label: '毛利语'\n                &#125;, &#123;\n                    value: 'mr',\n                    label: '马拉地语'\n                &#125;, &#123;\n                    value: 'mn',\n                    label: '蒙古语'\n                &#125;, &#123;\n                    value: 'my',\n                    label: '缅甸语'\n                &#125;, &#123;\n                    value: 'ne',\n                    label: '尼泊尔语'\n                &#125;, &#123;\n                    value: 'ny',\n                    label: '齐切瓦语'\n                &#125;, &#123;\n                    value: 'ps',\n                    label: '普什图语'\n                &#125;, &#123;\n                    value: 'pa',\n                    label: '旁遮普语'\n                &#125;, &#123;\n                    value: 'sm',\n                    label: '萨摩亚语'\n                &#125;, &#123;\n                    value: 'gd',\n                    label: '苏格兰盖尔语'\n                &#125;, &#123;\n                    value: 'st',\n                    label: '塞索托语'\n                &#125;, &#123;\n                    value: 'sn',\n                    label: '修纳语'\n                &#125;, &#123;\n                    value: 'sd',\n                    label: '信德语'\n                &#125;, &#123;\n                    value: 'si',\n                    label: '僧伽罗语'\n                &#125;, &#123;\n                    value: 'so',\n                    label: '索马里语'\n                &#125;, &#123;\n                    value: 'su',\n                    label: '巽他语'\n                &#125;, &#123;\n                    value: 'tg',\n                    label: '塔吉克语'\n                &#125;, &#123;\n                    value: 'ta',\n                    label: '泰米尔语'\n                &#125;, &#123;\n                    value: 'te',\n                    label: '泰卢固语'\n                &#125;, &#123;\n                    value: 'uz',\n                    label: '乌兹别克语'\n                &#125;, &#123;\n                    value: 'xh',\n                    label: '南非科萨语'\n                &#125;, &#123;\n                    value: 'yi',\n                    label: '意第绪语'\n                &#125;, &#123;\n                    value: 'yo',\n                    label: '约鲁巴语'\n                &#125;, &#123;\n                    value: 'zu',\n                    label: '南非祖鲁语'\n                &#125;],\n                selectSrcValue: '',\n                selectDistValue: '',\n                input_appKey: '23059209eaca30b4',\n                input_key: 'S3eW0xliXFpnviLkhhnBym9TFYVDNzVz',\n                trans_source: '',\n                translation: [],\n                translation_show: false,\n                basic: [],\n                basic_show: false,\n                web: [],\n                web_show: false\n            &#125;\n        &#125;,\n        methods: &#123;\n            //单选按钮事件，得到下标值\n            radioLabelValue(value)&#123;\n            &#125;,\n            //下拉框事件，得到key值\n            selectValue_src(value)&#123;\n                this.selectSrcValue = value;\n                console.log(this.selectSrcValue);\n            &#125;,\n            selectValue_dist(value)&#123;\n                this.selectDistValue = value;\n                console.log(this.selectDistValue);\n            &#125;,\n            //输入框事件\n            appKeyInputValue(value)&#123;\n                this.input_appKey = value;\n            &#125;,\n            keyInputValue(value)&#123;\n                this.input_key = value;\n            &#125;,\n            truncate(q)&#123;\n                let len = q.length;\n                if(len&lt;=20) return q;\n                return q.substring(0, 10) + len + q.substring(len-10, len);\n            &#125;,\n            doTranslate()&#123;\n                console.log(this.input_appKey);\n                let salt = (new Date).getTime();\n                let currtime = Math.round(new Date().getTime()/1000);\n                // 多个query可以用\\n连接  如 query='apple\\norange\\nbanana\\npear'\n                let str1 = this.input_appKey + this.truncate(this.trans_source) + salt + currtime + this.input_key;\n                let sign = CryptoJS.SHA256(str1).toString(CryptoJS.enc.Hex);\n                this.$http.jsonp('http://openapi.youdao.com/api',&#123;\n                    params:&#123;\n                        q: this.trans_source,\n                        appKey: this.input_appKey,\n                        salt: salt,\n                        from: this.selectSrcValue,\n                        to: this.selectDistValue,\n                        sign: sign,\n                        signType: &quot;v3&quot;,\n                        curtime: currtime,\n                    &#125;\n                &#125;).then(function(res)&#123;\n                    console.log(res);\n                    console.log(res.body.translation);\n                    console.log(res.body.basic);\n                    if(res.body.translation != null &amp;&amp; res.body.translation.length &gt; 0)&#123;\n                        this.translation = res.body.translation;\n                        this.translation_show = true;\n                    &#125;else&#123;\n                        this.translation = [];\n                        this.translation_show = false;\n                    &#125;\n                    if(res.body.basic != null &amp;&amp; res.body.basic.explains.length &gt; 0)&#123;\n                        this.basic = res.body.basic.explains;\n                        this.basic_show = true;\n                    &#125;else&#123;\n                        this.basic = [];\n                        this.basic_show = false;\n                    &#125;\n                    if(res.body.web != null &amp;&amp; res.body.web.length &gt; 0)&#123;\n                        this.web = res.body.web;\n                        this.web_show = true;\n                    &#125;else&#123;\n                        this.web = [];\n                        this.web_show = false;\n                    &#125;\n                &#125;)\n                //axios本身不支持跨域请求,需要配置文件辅助\n                /*axios(&#123;\n                    url: 'http://openapi.youdao.com/api',\n                    method: 'post',\n                    data: &#123;\n                        q: this.trans_source,\n                        appKey: this.input_appKey,\n                        salt: salt,\n                        from: this.selectSrcValue,\n                        to: this.selectDistValue,\n                        sign: sign,\n                        signType: &quot;v3&quot;,\n                        curtime: currtime\n                    &#125;\n                &#125;).then(function(res)&#123;\n                    console.log(res);\n                &#125;)*/\n            &#125;\n        &#125;\n    &#125;);\n&lt;/script&gt;\n&lt;style&gt;\n\n    .bg-purple-light &#123;\n        background: #303133;\n    &#125;\n    .grid-content &#123;\n        color: white;\n        font-family: &quot;Arial Narrow&quot;;\n        margin-top: 5px;\n        border-radius: 10px;\n        min-height: 300px;\n        min-width: 478.13px;\n    &#125;\n&lt;/style&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>👊我是一只小白猿，下期见！</p>\n",
            "tags": [
                "工具",
                "前端",
                "工具",
                "Vue",
                "翻译"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%BA%8C%EF%BC%89",
            "url": "https://www.baiyezi.vip/%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%BA%8C%EF%BC%89",
            "title": "手动实现翻译小工具（二）",
            "date_published": "2021-12-24T01:30:17.000Z",
            "content_html": "<p>接着上期的内容来改进我们的翻译小工具。改进后的翻译小工具现在支持：</p>\n<p>🉑 英文音标的显示与播放（仅当查词为英文时支持，这是有道官方 API 的限制）</p>\n<p>💌接入了百度翻译的 API</p>\n<p>具体效果如下：</p>\n<p><img data-src=\"%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0%E7%BF%BB%E8%AF%91%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%88%E4%BA%8C%EF%BC%89.assets/QQ%E5%9B%BE%E7%89%8720200816181834-1597576605650.png\" alt=\"QQ图片20200816181834-1597576605650\" /></p>\n<p>📔 说明：</p>\n<ul>\n<li>\n<p>百度翻译 API 需要开通企业资质才能返回音标以及音标的播放链接。对于个人而言，其 API 只会返回一项基础的查询结果。</p>\n</li>\n<li>\n<p>有道云 API 规定，需要开通 TTS 语音服务才能返回语音链接</p>\n</li>\n<li>\n<p>源码已上传 Github 以及 Gitee，欢迎大家 issue 以及 fork，共同参与改进小工具！</p>\n</li>\n<li>\n<p>Gitee：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYmZhbmZhbmZhbi90cmFuc2xhdGlvbl90b29scy90cmVlL21hc3Rlcg==\">https://gitee.com/bfanfanfan/translation_tools/tree/master</span></p>\n</li>\n<li>\n<p>Github：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3l1YW4xOTk2OTYvdHJhbnNsYXRpb25fdG9vbHM=\">https://github.com/yuan199696/translation_tools</span></p>\n</li>\n</ul>\n<p>💌 我是一只小白猿，下期见！</p>\n",
            "tags": [
                "工具",
                "前端",
                "工具",
                "Vue",
                "翻译"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/java%E5%9B%BE%E7%89%87",
            "url": "https://www.baiyezi.vip/java%E5%9B%BE%E7%89%87",
            "title": "java图片",
            "date_published": "2021-12-23T14:57:31.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://www.baiyezi.vip/java%E5%A4%A7%E6%B3%95",
            "url": "https://www.baiyezi.vip/java%E5%A4%A7%E6%B3%95",
            "title": "java大法",
            "date_published": "2021-12-23T14:33:56.000Z",
            "content_html": "<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hello world</pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20211223224946.png\" alt=\"image-20211223224132698\" /></p>\n<p><img data-src=\"../../images/java%E5%A4%A7%E6%B3%95/image-20211223225226906.png\" alt=\"image-20211223225226906\" /></p>\n",
            "tags": [
                "java",
                "java",
                "后端"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/title/",
            "url": "https://www.baiyezi.vip/title/",
            "title": "java入门",
            "date_published": "2021-12-23T14:16:37.000Z",
            "content_html": "",
            "tags": [
                "java",
                "java",
                "后端"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/title/",
            "url": "https://www.baiyezi.vip/title/",
            "title": "Hello World",
            "date_published": "2021-12-23T13:39:38.219Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo new <span class=\"token string\">\"My New Post\"</span></pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo server</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo generate</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"><span>h</span></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ hexo deploy</pre></td></tr></table></figure><p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        },
        {
            "id": "https://www.baiyezi.vip/nginx%E5%AE%9E%E6%88%98",
            "url": "https://www.baiyezi.vip/nginx%E5%AE%9E%E6%88%98",
            "title": "nginx实战",
            "date_published": "2021-09-15T12:12:01.000Z",
            "content_html": "<h2 id=\"nginx衍生版本\"><a class=\"anchor\" href=\"#nginx衍生版本\">#</a> Nginx 衍生版本</h2>\n<p>Nginx plus 商业版 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubmdpbnguY29tLw==\">https://www.nginx.com/</span></p>\n<p>Nginx 开源版 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueC5vcmcv\">https://nginx.org/</span></p>\n<p>OpenResty</p>\n<p>Tengine</p>\n<h3 id=\"其他web服务器\"><a class=\"anchor\" href=\"#其他web服务器\">#</a> 其他 web 服务器</h3>\n<p>IIS、Apache Httpd1/2、lighttpd</p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG93bmxvYWQuaHRtbA==\">https://nginx.org/en/download.html</span></p>\n<pre><code class=\"language-sh\">tar -zxvf nginx-1.21.1.tar.gz \n\n[root@localhost nginx-1.21.1]# ./configure --prefix=/usr/local/nginx\n./configure: error: the HTTP rewrite module requires the PCRE library.\nYou can either disable the module by using --without-http_rewrite_module\noption, or install the PCRE library into the system, or build the PCRE library\nstatically from the source with nginx by using --with-pcre=&lt;path&gt; option.\n\n# 安装缺失的类库\n[root@localhost nginx-1.21.1]# yum install -y pcre pcre-devel\n#再次安装\n[root@localhost nginx-1.21.1]# ./configure --prefix=/usr/local/nginx\n./configure: error: the HTTP gzip module requires the zlib library.\nYou can either disable the module by using --without-http_gzip_module\noption, or install the zlib library into the system, or build the zlib library\nstatically from the source with nginx by using --with-zlib=&lt;path&gt; option.\n\n#暗转以上缺失的类库、\n[root@localhost nginx-1.21.1]# yum install -y zlib zlib-devel\n\n#再次安装\n[root@localhost nginx-1.21.1]# ./configure --prefix=/usr/local/nginx\nConfiguration summary\n  + using system PCRE library\n  + OpenSSL library is not used\n  + using system zlib library\n\n  nginx path prefix: &quot;/usr/local/nginx&quot;\n  nginx binary file: &quot;/usr/local/nginx/sbin/nginx&quot;\n  nginx modules path: &quot;/usr/local/nginx/modules&quot;\n  nginx configuration prefix: &quot;/usr/local/nginx/conf&quot;\n  nginx configuration file: &quot;/usr/local/nginx/conf/nginx.conf&quot;\n  nginx pid file: &quot;/usr/local/nginx/logs/nginx.pid&quot;\n  nginx error log file: &quot;/usr/local/nginx/logs/error.log&quot;\n  nginx http access log file: &quot;/usr/local/nginx/logs/access.log&quot;\n  nginx http client request body temporary files: &quot;client_body_temp&quot;\n  nginx http proxy temporary files: &quot;proxy_temp&quot;\n  nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;\n  nginx http uwsgi temporary files: &quot;uwsgi_temp&quot;\n  nginx http scgi temporary files: &quot;scgi_temp&quot;\n\n#编译\n[root@localhost nginx-1.21.1]# make\n[root@localhost nginx-1.21.1]# make install\n\n#启动nginx\n[root@localhost nginx-1.21.1]# cd /usr/local/nginx/\n[root@localhost nginx]# ls\nconf  html  logs  sbin\n[root@localhost nginx]# cd sbin/\n[root@localhost sbin]# ls\nnginx\n[root@localhost sbin]# ./nginx \n\n\n</code></pre>\n<p>需要关闭防火墙或者开启指定端口，之后访问浏览器测试是否安装成功</p>\n<pre><code class=\"language-sh\">#关闭防火墙\nsystemctl stop firewalld.service\n#禁止防火墙开机启动\nsystemctl disabled firewalld.service\n#将指定端口加入防火墙\nfirewall-cmd --zone=public --add-port=80/tcp --permanent \n#重启防火墙\nfirewall-cmd --reload\n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210726214357.png\" alt=\"image-20210726214355029\" /></p>\n<h3 id=\"将nginx安装为系统服务\"><a class=\"anchor\" href=\"#将nginx安装为系统服务\">#</a> 将 nginx 安装为系统服务</h3>\n<pre><code class=\"language-sh\">[root@localhost ~]# vim /usr/lib/systemd/system/nginx.service\n[Unit]\nDescription=nginx - web server\nAfter=network.target remote-fs.target nss-lookup.target\n\n[Service]\nType=forking\nPIDFile=/usr/local/nginx/logs/nginx.pid\nExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf\nExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\nExecReload=/usr/local/nginx/sbin/nginx -s reload\nExecStop=/usr/local/nginx/sbin/nginx -s stop\nExecQuit=/usr/local/nginx/sbin/nginx -s quit\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n\n#重新加载系统 服务\n[root@localhost ~]# systemctl daemon-reload\n\n#停止nginx服务\n[root@localhost ~]# ps -ef | grep nginx\nroot      35548      1  0 05:42 ?        00:00:00 nginx: master process ./nginx\nnobody    35549  35548  0 05:42 ?        00:00:00 nginx: worker process\nroot      35844   2300  0 06:12 pts/0    00:00:00 grep --color=auto nginx\n[root@localhost ~]# /usr/local/nginx/sbin/nginx -s stop\n[root@localhost ~]# ps -ef | grep nginx\nroot      35863   2300  0 06:13 pts/0    00:00:00 grep --color=auto nginx\n #使用命令启动\n [root@localhost ~]# systemctl  start nginx.service \n[root@localhost ~]# ps -ef | grep nginx\nroot      35907      1  0 06:14 ?        00:00:00 nginx: master process /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\nnobody    35908  35907  0 06:14 ?        00:00:00 nginx: worker process\nroot      35910   2300  0 06:14 pts/0    00:00:00 grep --color=auto nginx\n\n[root@localhost ~]# systemctl  status nginx.service \n● nginx.service - nginx - web server\n   Loaded: loaded (/usr/lib/systemd/system/nginx.service; disabled; vendor preset: disabled)\n   Active: active (running) since Tue 2021-07-27 06:14:51 CST; 1min 7s ago\n  Process: 35905 ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf (code=exited, status=0/SUCCESS)\n  Process: 35904 ExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.conf (code=exited, status=0/SUCCESS)\n Main PID: 35907 (nginx)\n    Tasks: 2 (limit: 23858)\n   Memory: 1.7M\n   CGroup: /system.slice/nginx.service\n           ├─35907 nginx: master process /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n           └─35908 nginx: worker process\n\n7月 27 06:14:51 localhost.localdomain systemd[1]: /usr/lib/systemd/system/nginx.service:12: Unknown lvalue 'ExecQuit' in section 'Service'\n7月 27 06:14:51 localhost.localdomain systemd[1]: Starting nginx - web server...\n7月 27 06:14:51 localhost.localdomain nginx[35904]: nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok\n7月 27 06:14:51 localhost.localdomain nginx[35904]: nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful\n7月 27 06:14:51 localhost.localdomain systemd[1]: nginx.service: Failed to parse PID from file /usr/local/nginx/logs/nginx.pid: Invalid argument\n7月 27 06:14:51 localhost.localdomain systemd[1]: Started nginx - web server.\n\n#开机自动启动nginx\n[root@localhost ~]# systemctl enable nginx.service \nCreated symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.\n\n</code></pre>\n<h2 id=\"域名解析\"><a class=\"anchor\" href=\"#域名解析\">#</a> 域名解析</h2>\n<p>域名 -&gt; 主机的 hosts 文件，如果有域名匹配到 ip，则直接返回 ip，如果没有就去本机物理网卡所配置的域名（DNS</p>\n<p>）服务器中找，如果找到则返回 ip，如果没有找到就去当前域名配置的 DNS 服务器找，如果找到就返回 ip。</p>\n<p>@解析的是顶级域名，如 666.com 是顶级域名，aa.666.com 就是顶级域名的二级域名，可以有多级域名。</p>\n<h2 id=\"简单网站搭建\"><a class=\"anchor\" href=\"#简单网站搭建\">#</a> 简单网站搭建</h2>\n<p>nginx 主要目录有 conf、html、logs、sbin，网站入口文件在 html 目录下，可以在该目录下新建 html 文件。</p>\n<p>这里我们在 html 目录下新建一个 html 目录，在该新建的 html 目录下新建两个目录 test1、test2，在这两个目录下各新建一个 index.html 文件</p>\n<pre><code class=\"language-sh\">[root@localhost html]# pwd\n/usr/local/nginx/html/html\n[root@localhost html]# ls\ntest1  test2\n</code></pre>\n<p>接下来更改 conf 目录下的配置文件 nginx.conf</p>\n<p>一个 server 包裹下的内容代表配置的是一台主机，意味着可以配置多台主机</p>\n<pre><code>\nserver &#123;\n        listen       81;\n        server_name  localhost; #可以自定义（域名或者主机名）\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            root   html/html/test1; #请求的入口\n            index  index.html index.htm; #index代表索引\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n\nserver &#123;\n        listen       82;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            root   html/html/test2;\n            index  index.html index.htm;\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n</code></pre>\n<p>重新加载 nginx 配置：systemctl reload nginx.service，或者重启 nginx：systemctl restart nginx.service。可以使用 systemctl status nginx.service -l 来输出错误信息。</p>\n<p>浏览器访问：<span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyODo4MS8=\">http://192.168.137.128:81/</span></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210802195840.png\" alt=\"image-20210802195837343\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210802195858.png\" alt=\"image-20210802195856610\" /></p>\n<p>也可以将 index 对应的 html 文件改名为其他名字，如 1.html</p>\n<pre><code>server &#123;\n        listen       81;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            root   html/html/test1;\n            index  1.html index.htm;\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n</code></pre>\n<pre><code class=\"language-sh\">[root@localhost test1]# mv index.html 1.html\n[root@localhost test1]# ls\n1.html\n</code></pre>\n<p>重启 nginx 访问</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210802223715.png\" alt=\"image-20210802223714004\" /></p>\n<p>也可以更改 server_name，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS02NjYtaGIwZTgxc3dsZzA3YzgwOWNldHIuY29t\">比如使用域名 666.com</span>，前提是要在本地 hosts 文件中添加该域名的解析，将 666.com 解析到本地</p>\n<pre><code>192.168.137.128 666.com\n</code></pre>\n<pre><code>server &#123;\n        listen       81;\n        server_name  666.com;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            root   html/html/test1;\n            index  1.html index.htm;\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210802225645.png\" alt=\"image-20210802225643759\" /></p>\n<h2 id=\"正向代理与反向代理\"><a class=\"anchor\" href=\"#正向代理与反向代理\">#</a> 正向代理与反向代理</h2>\n<p>查看 nginx 是否启动</p>\n<pre><code class=\"language-sh\">[root@localhost test1]# netstat -lnp|grep 80\ntcp        0      0 127.0.0.1:6380          0.0.0.0:*               LISTEN      1055/redis-server 1 \ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      45534/nginx: master \n\n[root@localhost test1]# netstat -lnp|grep nginx\ntcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      45534/nginx: master \ntcp        0      0 0.0.0.0:81              0.0.0.0:*               LISTEN      45534/nginx: master \ntcp        0      0 0.0.0.0:82              0.0.0.0:*               LISTEN      45534/nginx: master \n\n#停止某一个服务\nsystemctl stop nginx\n</code></pre>\n<p>反向代理，同样我们现在主机的 hosts 文件中将本机 ip 映射到一个自定义的域名，然后通过访问本机的 82 端口，该 82 端口将被我们自定义的域名代理</p>\n<pre><code>192.168.137.128 www.666.com\n</code></pre>\n<pre><code>server &#123;\n        listen       82;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            proxy_pass http://www.666.com; #反向代理\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n</code></pre>\n<p>重启 nginx 测试 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyODo4Mi8=\">http://192.168.137.128:82/</span></p>\n<p>也可以使用一台 nginx 代理多台 nginx，即负载均衡，这里以一台 nginx 代理两台 nginx 为例</p>\n<pre><code class=\"language-sh\">[root@localhost nginx]# cd conf/\n[root@localhost conf]# ls\nfastcgi.conf          fastcgi_params          koi-utf  mime.types          nginx.conf          scgi_params          uwsgi_params          win-utf\nfastcgi.conf.default  fastcgi_params.default  koi-win  mime.types.default  nginx.conf.default  scgi_params.default  uwsgi_params.default\n[root@localhost conf]# cp nginx.conf nginx-88.conf\n[root@localhost conf]# cp nginx.conf nginx-99.conf\n[root@localhost conf]# vim nginx-88.conf \n[root@localhost conf]# vim nginx-99.conf \n[root@localhost conf]# cd ..\n[root@localhost nginx]# cd html/\n[root@localhost html]# vim index-88.html\n[root@localhost html]# vim index-99.html\n\n</code></pre>\n<pre><code>server &#123;\n        listen       88;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            root   html;\n            index  index-88.html index.htm;\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n&#125;\n</code></pre>\n<pre><code> server &#123;\n        listen       99;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            root   html;\n            index  index-99.html index.htm;\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n&#125;\n</code></pre>\n<p>启动这两台 nginx</p>\n<pre><code class=\"language-sh\">[root@localhost nginx]# cd sbin/\n[root@localhost sbin]# ls\nnginx\n[root@localhost sbin]# ./nginx -c  conf/nginx-88.conf #nginx -s stop停止所有nginx服务\n[root@localhost sbin]# ./nginx -c  conf/nginx-99.conf\n\n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210803223157.png\" alt=\"image-20210803223154448\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210803223231.png\" alt=\"image-20210803223230428\" /></p>\n<p>接下来，使用另外的一台 nginx 代理 (作为反向代理服务器) 以上的两台 nginx</p>\n<pre><code>upstream test &#123;\n        server 192.168.137.128:88;\n        server 192.168.137.128:99;\n&#125;\n\nserver &#123;\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / &#123;\n            proxy_pass http://test; #test需要与以上upstream后面的名字要一致\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n</code></pre>\n<p>重启 nginx，此时重启后可能导致之前启动的两台 nginx 被关闭</p>\n<pre><code class=\"language-sh\">root@localhost nginx]# systemctl restart nginx.service \n[root@localhost nginx]# ps -ef | grep nginx\nroot      49296      1  0 22:30 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-88.conf\nnobody    49297  49296  0 22:30 ?        00:00:00 nginx: worker process\nroot      49838      1  0 23:19 ?        00:00:00 nginx: master process /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\nnobody    49839  49838  0 23:19 ?        00:00:00 nginx: worker process\nroot      49842  48245  0 23:19 pts/0    00:00:00 grep --color=auto nginx\n[root@localhost nginx]# cd sbin/\n[root@localhost sbin]# ./nginx -c conf/nginx-99.conf\n[root@localhost sbin]# ps -ef | grep nginx\nroot      49296      1  0 22:30 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-88.conf\nnobody    49297  49296  0 22:30 ?        00:00:00 nginx: worker process\nroot      49838      1  0 23:19 ?        00:00:00 nginx: master process /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\nnobody    49839  49838  0 23:19 ?        00:00:00 nginx: worker process\nroot      49853      1  0 23:20 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-99.conf\nnobody    49854  49853  0 23:20 ?        00:00:00 nginx: worker process\nroot      49856  48245  0 23:20 pts/0    00:00:00 grep --color=auto nginx\n\n</code></pre>\n<p>访问测试 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC8lRUYlQkMlOEMlRTUlOEYlQUYlRTQlQkIlQTUlRTclOUMlOEIlRTUlODglQjAlRTQlQjklOEIlRTUlODklOEQlRTUlOTAlQUYlRTUlOEElQTglRTclOUElODQlRTQlQjglQTQlRTUlOEYlQjBuZ2lueCVFNCVCQyU5QSVFOCVBMiVBQiVFNCVCQSVBNCVFNiU5QiVCRiVFOCVBRSVCRiVFOSU5NyVBRSVFNSU4OCVCMA==\">http://192.168.137.128/，可以看到之前启动的两台 nginx 会被交替访问到</span></p>\n<h3 id=\"权重\"><a class=\"anchor\" href=\"#权重\">#</a> 权重</h3>\n<p>此外，可以配置访问的权重</p>\n<pre><code>upstream test &#123;\n        server 192.168.137.128:88 weight=1;\n        server 192.168.137.128:99 weight=10;\n&#125;\n</code></pre>\n<h2 id=\"https配置\"><a class=\"anchor\" href=\"#https配置\">#</a> HTTPS 配置</h2>\n<p>在 nginx 中配置 HTTPS 需要 SSL 证书，我这里已经申请好了一个域名以及域名对应的证书，接下来把域名配置在本地主机的 hosts 文件中</p>\n<pre><code>192.168.137.128 www.baiyezi.vip\n</code></pre>\n<p>然后将申请好的 SSL 证书下载（我这里使用腾讯云的免费证书）并上传到 nginx 的 conf 目录下，最后需要配置 nginx.conf，并在 html 目录下创建一个 html，比如 index-https.html</p>\n<pre><code> # HTTPS server\n    server &#123;\n        listen       443 ssl;\n        server_name  www.baiyezi.vip;\n\n        ssl_certificate      www.baiyezi.vip.crt;\n        ssl_certificate_key  www.baiyezi.vip.key;\n\n        ssl_session_cache    shared:SSL:1m;\n        ssl_session_timeout  5m;\n\n        #ssl_ciphers  HIGH:!aNULL:!MD5;\n        #ssl_prefer_server_ciphers  on;\n\n        location / &#123;\n            root   html;\n            index  index-https.html;\n        &#125;\n    &#125;\n</code></pre>\n<p>测试配置文件是否成功</p>\n<pre><code class=\"language-sh\">[root@localhost conf]# ../sbin/nginx -t\nnginx: [emerg] the &quot;ssl&quot; parameter requires ngx_http_ssl_module in /usr/local/nginx/conf/nginx.conf:101\nnginx: configuration file /usr/local/nginx/conf/nginx.conf test failed\n\n</code></pre>\n<p>报错原因：缺少 SSL 模块</p>\n<pre><code class=\"language-sh\">[root@localhost conf]# cd ..\n[root@localhost nginx]# cd sbin/\n#查看安装nginx时安装的其他模块\n[root@localhost sbin]# ./nginx -V\nnginx version: nginx/1.21.1\nbuilt by gcc 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC) \nconfigure arguments: --prefix=/usr/local/nginx\n[root@localhost sbin]# cd ..\n[root@localhost nginx]# systemctl stop nginx.service \n[root@localhost nginx]# ps -ef | grep nginx\nroot      49296      1  0 19:09 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-88.conf\nnobody    49297  49296  0 19:09 ?        00:00:00 nginx: worker process\nroot      49853      1  0 19:58 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-99.conf\nnobody    49854  49853  0 19:58 ?        00:00:00 nginx: worker process\nroot      51885  50173  0 23:36 pts/1    00:00:00 grep --color=auto nginx\n[root@localhost nginx]# cd ~\n[root@localhost ~]# ls\n anaconda-ks.cfg  'index.html?id=498903'   java   mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz   nginx-1.21.1.tar.gz   test\n arthas-boot.jar   initial-setup-ks.cfg    logs   nginx-1.21.1                                 redis-6.0.9.tar.gz    testsocket\n[root@localhost ~]# cd nginx-1.21.1/\n[root@localhost nginx-1.21.1]# ls\nauto  CHANGES  CHANGES.ru  conf  configure  contrib  html  LICENSE  Makefile  man  objs  README  src\n#保证有OpenSSL库\n[root@localhost nginx-1.21.1]#yum -y install openssl openssl-devel\n#再次安装nginx时安装SSL模块\n[root@localhost nginx-1.21.1]# ./configure --prefix=/usr/local/nginx --with-http_ssl_module\n#编译。注意不要使用make install，否则会把之前的已有的配置全部覆盖掉\n[root@localhost nginx-1.21.1]# make\n#将编译好的nginx替换掉sbin目录下的nginx（此时，所有nginx服务要停掉）\n[root@localhost nginx-1.21.1]# cp ./objs/nginx /usr/local/nginx/sbin/\ncp：是否覆盖'/usr/local/nginx/sbin/nginx'？ y\ncp: 无法创建普通文件'/usr/local/nginx/sbin/nginx': 文本文件忙\n[root@localhost nginx-1.21.1]# ps -ef | grep nginx\nroot      49296      1  0 19:09 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-88.conf\nnobody    49297  49296  0 19:09 ?        00:00:00 nginx: worker process\nroot      49853      1  0 19:58 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-99.conf\nnobody    49854  49853  0 19:58 ?        00:00:00 nginx: worker process\nroot      89512  50173  0 23:52 pts/1    00:00:00 grep --color=auto nginx\n[root@localhost nginx-1.21.1]# kill -9 1\n[root@localhost nginx-1.21.1]# ps -ef | grep nginx\nroot      49296      1  0 19:09 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-88.conf\nnobody    49297  49296  0 19:09 ?        00:00:00 nginx: worker process\nroot      49853      1  0 19:58 ?        00:00:00 nginx: master process ./nginx -c conf/nginx-99.conf\nnobody    49854  49853  0 19:58 ?        00:00:00 nginx: worker process\nroot      89514  50173  0 23:52 pts/1    00:00:00 grep --color=auto nginx\n[root@localhost nginx-1.21.1]# kill -9 49296\n[root@localhost nginx-1.21.1]# kill -9 49853\n[root@localhost nginx-1.21.1]# ps -ef | grep nginx\nnobody    49297      1  0 19:09 ?        00:00:00 nginx: worker process\nnobody    49854      1  0 19:58 ?        00:00:00 nginx: worker process\nroot      89524  50173  0 23:52 pts/1    00:00:00 grep --color=auto nginx\n[root@localhost nginx-1.21.1]# kill -9 49297\n[root@localhost nginx-1.21.1]# kill -9 49854\n[root@localhost nginx-1.21.1]# ps -ef | grep nginx\nroot      89531  50173  0 23:53 pts/1    00:00:00 grep --color=auto nginx\n[root@localhost nginx-1.21.1]# cp ./objs/nginx /usr/local/nginx/sbin/\ncp：是否覆盖'/usr/local/nginx/sbin/nginx'？ y\n\n[root@localhost nginx-1.21.1]# cd /usr/local/nginx/sbin/\n[root@localhost sbin]# ./nginx -V\nnginx version: nginx/1.21.1\nbuilt by gcc 8.3.1 20191121 (Red Hat 8.3.1-5) (GCC) \nbuilt with OpenSSL 1.1.1g FIPS  21 Apr 2020\nTLS SNI support enabled\nconfigure arguments: --prefix=/usr/local/nginx --with-http_ssl_module\n#启动nginx\n[root@localhost sbin]# ./nginx\n[root@localhost sbin]# \n\n</code></pre>\n<p>访问测试 <a href=\"https://www.baiyezi.vip/\">https://www.baiyezi.vip/</a></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210805000216.png\" alt=\"image-20210805000213904\" /></p>\n<h2 id=\"部署项目\"><a class=\"anchor\" href=\"#部署项目\">#</a> 部署项目</h2>\n<p>这里将一个 SpringBoot 项目打包后上传到 linux 下，同时给主机配置我之前申请的域名，在 linux 下启动项目并访问</p>\n<pre><code>192.168.137.128 www.baiyezi.vip\n</code></pre>\n<pre><code class=\"language-sh\">[root@localhost local]# ls\napollo  bin  etc  games  include  lib  lib64  libexec  mysql5.7  nginx  redis-6.0.9  sbin  serial-go-0.0.1-SNAPSHOT.jar  share  src\n[root@localhost local]# java -jar serial-go-0.0.1-SNAPSHOT.jar \n\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.5.2)\n...\n</code></pre>\n<p><a href=\"http://www.baiyezi.vip:8080/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%8E%B0%E5%9C%A8%E5%8F%AA%E8%83%BD%E4%BB%A5http%E6%96%B9%E5%BC%8F%E8%AE%BF%E9%97%AE%E9%A1%B9%E7%9B%AE\">http://www.baiyezi.vip:8080/，可以看到现在只能以 http 方式访问项目</a></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210805223521.png\" alt=\"image-20210805223520396\" /></p>\n<p>SpringBoot 项目内置的是 Tomcat 服务器，我们可以通过 nginx 的反向代理来将请求代理到 nginx</p>\n<pre><code># HTTPS server\n    server &#123;\n        listen       443 ssl;\n        server_name  www.baiyezi.vip;\n\n        ssl_certificate      www.baiyezi.vip.crt;\n        ssl_certificate_key  www.baiyezi.vip.key;\n\n        #ssl_session_cache    shared:SSL:1m;\n        #ssl_session_timeout  5m;\n\n        #ssl_ciphers  HIGH:!aNULL:!MD5;\n        #ssl_prefer_server_ciphers  on;\n\n        location / &#123;\n            proxy_pass http://127.0.0.1:8080; #将请求反向代理到项目端口8080\n            #root   html;\n            #index  index-https.html;\n        &#125;\n    &#125;\n\n</code></pre>\n<p>此时，访问 <a href=\"https://www.baiyezi.vip/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E7%94%B1%E5%8E%9F%E6%9D%A5%E7%9A%84htpp%E8%AF%B7%E6%B1%82%E5%8F%98%E4%B8%BA%E4%BA%86%E5%AE%89%E5%85%A8%E7%9A%84https%E8%AF%B7%E6%B1%82%E3%80%82%E8%BF%99%E6%97%B6%E5%8F%AF%E4%BB%A5%E7%9B%B4%E6%8E%A5%E5%9C%A8%E9%98%B2%E7%81%AB%E5%A2%99%E5%B0%868080%E7%AB%AF%E5%8F%A3%E5%85%B3%E9%97%AD%EF%BC%8C%E9%98%B2%E6%AD%A2%E7%94%A8%E6%88%B7%E4%BB%A5http%E7%9A%848080%E7%AB%AF%E5%8F%A3%E8%AE%BF%E9%97%AE%E9%A1%B9%E7%9B%AE%E3%80%82%E8%BF%9B%E4%B8%80%E6%AD%A5%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8nginx%E4%BD%9C%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E3%80%82\">https://www.baiyezi.vip/，可以看到由原来的 htpp 请求变为了安全的 https 请求。这时可以直接在防火墙将 8080 端口关闭，防止用户以 http 的 8080 端口访问项目。进一步可以使用 nginx 作负载均衡。</a></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210805224408.png\" alt=\"image-20210805224405671\" /></p>\n<h2 id=\"动静分离\"><a class=\"anchor\" href=\"#动静分离\">#</a> 动静分离</h2>\n<p>项目中的 css、js、图片等静态资源在加载时总会拖慢项目的访问速度，所以有必要将静态资源的请求与后端业务分离开来，即访问静态资源不再通过 Tomcat，而是通过 nginx。</p>\n<p>首先配置项目的反向 代理，之后配置多个 location，用于访问单独的静态文件资源</p>\n<pre><code>server &#123;\n        listen       80;\n        server_name  localhost;\n\n        location / &#123;\n            proxy_pass http://127.0.0.1:8080; #项目的反向代理\n        &#125;\n        \n        location /css &#123; # /css的精准匹配优先于 / 的匹配\n        \troot /usr/local/nginx/static; #将项目中的css静态文件上传到该目录下\n        &#125;\n        \n        location /js &#123;\n        \troot /usr/local/nginx/static; #将项目中的js文件上传到该目录下\n        &#125;\n        \n        location /images &#123;\n        \troot /usr/local/nginx/static; #将项目中的图片上传到该目录下\n        &#125;\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html &#123;\n            root   html;\n        &#125;\n    &#125;\n</code></pre>\n<p>location 后面支持正则匹配</p>\n<pre><code>location ~*/(css|images|js) &#123;\n        \troot /usr/local/nginx/static; #将项目中的js文件上传到该目录下\n        &#125;\n</code></pre>\n<h3 id=\"location-前缀\"><a class=\"anchor\" href=\"#location-前缀\">#</a> location 前缀</h3>\n<hr />\n<p>没有前缀         匹配以指定模式开头的 location</p>\n<hr />\n<p>=              精准匹配，不是以指定模式开头</p>\n<hr />\n<p>~              正则匹配，区分大小写</p>\n<hr />\n<p>~*              正则匹配，不区分大小写</p>\n<hr />\n<p>^~              非正则匹配，匹配以指定模式开头的 location</p>\n<p><strong>location 匹配顺序</strong></p>\n<ul>\n<li>\n<p>多个正则 location 直接按书写顺序匹配，成功后就不会继续往后面匹配</p>\n</li>\n<li>\n<p>普通（非正则）location 会一直往下，直到找到匹配度最高的（最大前缀匹配）</p>\n</li>\n<li>\n<p>当普通 location 与正则 location 同时存在，如果正则匹配成功，则不会再执行普通匹配</p>\n</li>\n<li>\n<p>所有类型 location 存在时，“=” 匹配  &gt;  “^~” 匹配  &gt;  正则匹配  &gt;  普通（最大前缀匹配）</p>\n</li>\n</ul>\n<h3 id=\"alias与root\"><a class=\"anchor\" href=\"#alias与root\">#</a> alias 与 root</h3>\n<p>root 在匹配时会自动加上 location 后面的路径</p>\n<pre><code>location /css &#123;\n        \troot /usr/local/nginx/static; #实际访问的是/usr/local/nginx/static/css\n        &#125;\n</code></pre>\n<p>而 alias 不会加上 location 后面的路径，需要额外添加路径</p>\n<pre><code> location /css &#123;\n        alias /usr/local/nginx/static/css;\n    &#125;\n</code></pre>\n<p>1）alias 指定的目录是准确的，即 location 匹配访问的 path 目录下的文件直接是在 alias 目录下查找的；<br />\n2）root 指定的目录是 location 匹配访问的 path 目录的上一级目录，这个 path 目录一定要是真实存在 root 指定目录下的；<br />\n3）使用 alias 标签的目录块中不能使用 rewrite 的 break（具体原因不明）；另外，alias 指定的目录后面必须要加上 &quot;/&quot; 符\t\t号！！<br />\n4）alias 虚拟目录配置中，location 匹配的 path 目录如果后面不带 &quot;/&quot;，那么访问的 url 地址中这个 path 目录后面加不\t\t加 &quot;/&quot; 不影响访问，访问时它会自动加上 &quot;/&quot;；但是如果 location 匹配的 path 目录后面加上 &quot;/&quot;，那么访问的 url 地址中这个\t\tpath 目录必须要加上 &quot;/&quot;，访问时它不会自动加上 &quot;/&quot;。如果不加上 &quot;/&quot;，访问就会失败！<br />\n5）root 目录配置中，location 匹配的 path 目录后面带不带 &quot;/&quot;，都不会影响访问。</p>\n<h2 id=\"url重写\"><a class=\"anchor\" href=\"#url重写\">#</a> URL 重写</h2>\n<p>可以通过 nginx 配置文件的 rewrite 属性来实现。</p>\n<pre><code>rewrite是实现URL重写的关键指令，根据regex (正则表达式)部分内容，\n重定向到replacement，结尾是flag标记。\n\nrewrite    &lt;regex&gt;    &lt;replacement&gt;    [flag];\n关键字      正则        替代内容         flag标记\n\n关键字：其中关键字error_log不能改变\n正则：perl兼容正则表达式语句进行规则匹配，即请求的地址\n替代内容：将正则匹配的内容替换成replacement，即项目中真正存在的请求地址\nflag标记：rewrite支持的flag标记\n\nrewrite参数的标签段位置：\nserver,location,if\n\nflag标记说明：\nlast  #本条规则匹配完成后，继续向下匹配新的location URI规则\nbreak  #本条规则匹配完成即终止，不再匹配后面的任何规则\nredirect  #返回302临时重定向，浏览器地址会显示跳转后的URL地址\npermanent  #返回301永久重定向，浏览器地址栏会显示跳转后的URL地址\n</code></pre>\n<pre><code>#假地址中的正则需要用括号括起来\nserver &#123;\n\trewrite ^假地址$ 真地址 flag\n&#125;\n</code></pre>\n<pre><code>rewrite   ^/account/list-([0-9]+).html$  /account/list?pageNum=$1  last;\nrewrite   ^/account/(.+)/list-([0-9]+).html$     /account/list?pageNum=$1     last;\n</code></pre>\n<h3 id=\"短网址\"><a class=\"anchor\" href=\"#短网址\">#</a> 短网址</h3>\n<p>使用 nginx 的 rewrite 可以实现短网址的功能</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210807123150.png\" alt=\"image-20210807123148632\" /></p>\n<h2 id=\"站点搭建\"><a class=\"anchor\" href=\"#站点搭建\">#</a> 站点搭建</h2>\n<h3 id=\"php一站式环境\"><a class=\"anchor\" href=\"#php一站式环境\">#</a> PHP 一站式环境</h3>\n<p>一站式安装包下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vbmVpbnN0YWNrLmNvbS8=\">https://oneinstack.com/</span></p>\n<pre><code class=\"language-sh\">[root@localhost ~]# wget -c http://mirrors.linuxeye.com/oneinstack-full.tar.gz\n--2021-08-08 10:13:33--  http://mirrors.linuxeye.com/oneinstack-full.tar.gz\n正在解析主机 mirrors.linuxeye.com (mirrors.linuxeye.com)... 1.81.5.180, 1.81.5.177, 1.81.5.178, ...\n正在连接 mirrors.linuxeye.com (mirrors.linuxeye.com)|1.81.5.180|:80... 已连接。\n已发出 HTTP 请求，正在等待回应... 200 OK\n长度：345002307 (329M) [application/octet-stream]\n正在保存至: “oneinstack-full.tar.gz”\n\noneinstack-full.tar.gz                  100%[============================================================================&gt;] 329.02M  4.26MB/s  用时 1m 59s  \n\n2021-08-08 10:15:32 (2.76 MB/s) - 已保存 “oneinstack-full.tar.gz” [345002307/345002307])\n\n#删除原有的nginx（可以先做备份）\n[root@localhost ~]# rm -rf /usr/local/nginx/\n[root@localhost ~]# ls\n anaconda-ks.cfg  'index.html?id=498903'   java   mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz   nginx-1.21.1.tar.gz      redis-6.0.9.tar.gz   testsocket\n arthas-boot.jar   initial-setup-ks.cfg    logs   nginx-1.21.1                                 oneinstack-full.tar.gz   test\n #解压\n[root@localhost ~]# tar -zxvf oneinstack-full.tar.gz \n\n[root@localhost ~]# cd oneinstack/\n[root@localhost oneinstack]# ls\naddons.sh        backup.sh  include  install.sh  options.conf       README.md                  src    uninstall.sh  versions.txt\nbackup_setup.sh  config     init.d   LICENSE     pureftpd_vhost.sh  reset_db_root_password.sh  tools  upgrade.sh    vhost.sh\n#执行安装脚本\n[root@localhost oneinstack]# ./install.sh \nPlease input SSH port(Default: 22): \n\nDo you want to enable iptables? [y/n]: n\n\nDo you want to install Web server? [y/n]: y\n\nPlease select Nginx server:\n\t1. Install Nginx\n\t2. Install Tengine\n\t3. Install OpenResty\n\t4. Do not install\nPlease input a number:(Default 1 press Enter) \n#此处安装apache的原因一般是为了支持短网址，但是现在nginx的rewrite也可以实现短网址，所以不再安装apache\nDo you want to install Apache? [y/n]: n\n\nPlease select tomcat server:\n\t1. Install Tomcat-10\n\t2. Install Tomcat-9\n\t3. Install Tomcat-8\n\t4. Install Tomcat-7\n\t5. Do not install\nPlease input a number:(Default 5 press Enter) 5\n#我的linux上有数据库，所以不再安装\nDo you want to install Database? [y/n]: n\n\nDo you want to install PHP? [y/n]: y\n\nPlease select a version of the PHP:\n\t 1. Install php-5.3\n\t 2. Install php-5.4\n\t 3. Install php-5.5\n\t 4. Install php-5.6\n\t 5. Install php-7.0\n\t 6. Install php-7.1\n\t 7. Install php-7.2\n\t 8. Install php-7.3\n\t 9. Install php-7.4\n\t10. Install php-8.0\nPlease input a number:(Default 7 press Enter) \n\nDo you want to install opcode cache of the PHP? [y/n]: n\n\nPlease select PHP extensions:\n\t 0. Do not install\n\t 1. Install zendguardloader(PHP&lt;=5.6)\n\t 2. Install ioncube\n\t 3. Install sourceguardian(PHP&lt;=7.2)\n\t 4. Install imagick\n\t 5. Install gmagick\n\t 6. Install fileinfo\n\t 7. Install imap\n\t 8. Install ldap\n\t 9. Install phalcon(PHP&gt;=5.5)\n\t10. Install yaf(PHP&gt;=7.0)\n\t11. Install redis\n\t12. Install memcached\n\t13. Install memcache\n\t14. Install mongodb\n\t15. Install swoole\n\t16. Install xdebug(PHP&gt;=5.5)\nPlease input numbers:(Default '4 11 12' press Enter) \n\nDo you want to install Nodejs? [y/n]: n\n\nDo you want to install Pure-FTPd? [y/n]: n\n\nDo you want to install phpMyAdmin? [y/n]: y\n\nDo you want to install redis-server? [y/n]: n\n\nDo you want to install memcached-server? [y/n]: n\n\n#等待若干分钟后。。。\nBuild complete.\nDon't forget to run 'make test'.\n\nInstalling shared extensions:     /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/\nPHP Redis module installed successfully! \n[xprober.php] found\n####################Congratulations########################\nTotal OneinStack Install Time: 42 minutes\n\nNginx install dir:              /usr/local/nginx\n\nPHP install dir:                /usr/local/php\n\nphpMyAdmin dir:                 /data/wwwroot/default/phpMyAdmin\nphpMyAdmin Control Panel URL:   http://192.168.137.128/phpMyAdmin\n\nIndex URL:                      http://192.168.137.128/\n\nPlease restart the server and see if the services start up fine.\nDo you want to restart OS ? [y/n]: n\n\n#启动nginx\n[root@localhost oneinstack]# cd /usr/local/nginx/\n[root@localhost nginx]# ls\nclient_body_temp  conf  fastcgi_temp  html  logs  proxy_temp  sbin  scgi_temp  uwsgi_temp\n[root@localhost nginx]# cd sbin/\n[root@localhost sbin]# ls\nnginx\n[root@localhost sbin]# ./nginx \n\n</code></pre>\n<p>访问 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC8=\">http://192.168.137.128/</span></p>\n<p>phpMyAdmin 可以访问数据库并操作数据库</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808113846.png\" alt=\"image-20210808113838821\" /></p>\n<h3 id=\"bbs搭建\"><a class=\"anchor\" href=\"#bbs搭建\">#</a> BBS 搭建</h3>\n<p>有了以上环境后，我们可以简单的搭建一个 BBS 论坛，源码可以直接下载开源的 <span class=\"exturl\" data-url=\"aHR0cDovL2Rvd24uY2hpbmF6LmNvbS9zb2Z0LzM0MDk0Lmh0bQ==\">http://down.chinaz.com/soft/34094.htm</span></p>\n<p>下载完成之后将压缩包中的 upload 文件上传到  /data/wwwroot/default/</p>\n<pre><code class=\"language-sh\">[root@localhost sbin]# cd /data/wwwroot/default/\n[root@localhost default]# ls\nindex.html  phpinfo.php  phpMyAdmin  upload  xprober.php\n[root@localhost default]# mv upload bbs\n[root@localhost default]# ls\nbbs  index.html  phpinfo.php  phpMyAdmin  xprober.php\n# 将该源码目录赋予读写可执行权限，否则安装时报错\n[root@localhost default]# chmod -R 777 bbs/\n</code></pre>\n<p>直接访问 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC9iYnM=\">http://192.168.137.128/bbs</span> 按照提示安装即可</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808115046.png\" alt=\"image-20210808115044795\" /></p>\n<p>报错，提示一些目录不存在，原因是 Discuz 版本的问题，重新下载一个低版本即可，这里为 Discuz_X3.4_SC_UTF8_20210320</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808120045.png\" alt=\"image-20210808120042991\" /></p>\n<p>下一步，选择全新安装</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808120637.png\" alt=\"image-20210808120635416\" /></p>\n<p>填写数据库信息，会自动创建数据库</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808120757.png\" alt=\"image-20210808120754499\" /></p>\n<p>安装完成，访问测试</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808120819.png\" alt=\"image-20210808120818311\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808121041.png\" alt=\"image-20210808121039733\" /></p>\n<p><img data-src=\"C:/Users/samsung/Desktop/img/blog/20210808121136.png\" alt=\"image-20210808121134171\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808121221.png\" alt=\"image-20210808121220113\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808121236.png\" alt=\"image-20210808121234049\" /></p>\n<h3 id=\"博客搭建\"><a class=\"anchor\" href=\"#博客搭建\">#</a> 博客搭建</h3>\n<p>除了以上的 BBS 论坛搭建外，还可以进行博客搭建，这里使用 wordpress 博客搭建。</p>\n<p>wordpress 下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93b3JkcHJlc3Mub3JnL2Rvd25sb2FkLyNkb3dubG9hZC1pbnN0YWxs\">https://wordpress.org/download/#download-install</span></p>\n<p>将下载解压后的文件放在 /data/wwwroot/default/ 目录下</p>\n<pre><code class=\"language-sh\">[root@localhost default]# wget -c https://wordpress.org/latest.tar.gz\n[root@localhost default]# tar -zxvf latest.tar.gz\n[root@localhost default]# ls\nbbs  index.html  latest.tar.gz  phpinfo.php  phpMyAdmin  wordpress  xprober.php\n# wordpress默认用户是www，将wordpress目录权限赋予该用户。否则在界面下载插件时要求输入主机域名以及用户名密码\n[root@localhost default]# chown -R www:www wordpress/\n[root@localhost plugins]# ps -ef | grep &quot;php-fpm&quot;\nroot      25086      1  0 11:19 ?        00:00:00 php-fpm: master process (/usr/local/php/etc/php-fpm.conf)\nwww       74315  25086  0 11:34 ?        00:00:01 php-fpm: pool www\nwww       74316  25086  0 11:34 ?        00:00:01 php-fpm: pool www\nwww       74317  25086  0 11:34 ?        00:00:01 php-fpm: pool www\nwww       74318  25086  0 11:34 ?        00:00:01 php-fpm: pool www\n\n</code></pre>\n<p>直接访问 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC93b3JkcHJlc3M=\">http://192.168.137.128/wordpress</span> 进行安装</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808141238.png\" alt=\"image-20210808141237585\" /></p>\n<p>这里的数据库不会自动创建，需要事先创建好，可以直接通过以上的 phpMyAdmin 操作</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808141855.png\" alt=\"image-20210808141853483\" /></p>\n<p>提示缺少一个 php 配置文件 wp-config.php，需要手动创建并写入提示的内容</p>\n<pre><code class=\"language-sh\">[root@localhost wordpress]# ls\nindex.php    wp-activate.php     wp-comments-post.php  wp-cron.php        wp-load.php   wp-settings.php   xmlrpc.php\nlicense.txt  wp-admin            wp-config-sample.php  wp-includes        wp-login.php  wp-signup.php\nreadme.html  wp-blog-header.php  wp-content            wp-links-opml.php  wp-mail.php   wp-trackback.php\n[root@localhost wordpress]# vim wp-config.php\n&lt;?php\n/**\n * The base configuration for WordPress\n *\n * The wp-config.php creation script uses this file during the installation.\n * You don't have to use the web site, you can copy this file to &quot;wp-config.php&quot;\n * and fill in the values.\n *\n * This file contains the following configurations:\n *\n * * MySQL settings\n * * Secret keys\n * * Database table prefix\n * * ABSPATH\n *\n * @link https://wordpress.org/support/article/editing-wp-config-php/\n *\n * @package WordPress\n */\n\n// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for WordPress */\ndefine( 'DB_NAME', 'wordpress' );\n\n/** MySQL database username */\ndefine( 'DB_USER', 'root' );\n\n/** MySQL database password */\ndefine( 'DB_PASSWORD', '123456' );\n\n/** MySQL hostname */\ndefine( 'DB_HOST', 'localhost' );\n\n/** Database charset to use in creating database tables. */\ndefine( 'DB_CHARSET', 'utf8mb4' );\n\n/** The database collate type. Don't change this if in doubt. */\ndefine( 'DB_COLLATE', '' );\n\n/**#@+\n * Authentication unique keys and salts.\n *\n * Change these to different unique phrases! You can generate these using\n * the &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service&#125;.\n *\n * You can change these at any point in time to invalidate all existing cookies.\n * This will force all users to have to log in again.\n *\n * @since 2.6.0\n */\ndefine( 'AUTH_KEY',         ';CP*TiW,p(];LIEdQwLR%?)Um+F?ME2BVpJ%99`)lSQrran+jdrSr?-~J.bf0JHo' );\ndefine( 'SECURE_AUTH_KEY',  'V3lV&#123;z(X%a)JCEoN1XR0&#123;^^Im|pK&amp;jr^%e90&#125;2:Wj-_J:q41;-yHr=IAX-!/EaYA' );\ndefine( 'LOGGED_IN_KEY',    'Xkoq-*Hc8WH|46z$4FW^yTnBGeNcG[%~k~A$?+%Y_SA`-C9W95v,*= oW &lt;L=y)]' );\ndefine( 'NONCE_KEY',        ',Byfk==+l]4s~ )&lt;%iUiB 5lIZ%1eu4&lt;!$wXk7EujwHC)x)~vt@Uk1^U8StFtaBy' );\ndefine( 'AUTH_SALT',        'z&#125;7Iq3E&#125;VL4B&#125;#kU&gt;2|4Y36^[xJPxR.l&#123;t2aUlAn@qx;Vqv~t`!e&#125;.YY:HuMuBu=' );\ndefine( 'SECURE_AUTH_SALT', '`p7cL6DpIWfFs%fhGGF;@sn|3mm*&#123;jM9=)PH|X^jYtG&gt;[&gt;?oL^9+N]!#Yk!g78p@' );\ndefine( 'LOGGED_IN_SALT',   '1|M&#123;bK6JD[F/=A/ ?!YP*q-K(Y~+?7JeJ$C_i%fXs%2Mx;1a~&gt;K8)%&lt;k.8b#32f(' );\ndefine( 'NONCE_SALT',       '6:Pqb,WgNs6U.pOs=I0zcYk?=:]0i*nr^Q(vBOYNLzla`V3#Al) 7EJb@oEzDT?!' );\n\n/**#@-*/\n\n/**\n * WordPress database table prefix.\n *\n * You can have multiple installations in one database if you give each\n * a unique prefix. Only numbers, letters, and underscores please!\n */\n$table_prefix = 'wp_';\n\n/**\n * For developers: WordPress debugging mode.\n *\n * Change this to true to enable the display of notices during development.\n * It is strongly recommended that plugin and theme developers use WP_DEBUG\n * in their development environments.\n *\n * For information on other constants that can be used for debugging,\n * visit the documentation.\n *\n * @link https://wordpress.org/support/article/debugging-in-wordpress/\n */\ndefine( 'WP_DEBUG', false );\n\n/* Add any custom values between this line and the &quot;stop editing&quot; line. */\n\n\n\n/* That's all, stop editing! Happy publishing. */\n\n/** Absolute path to the WordPress directory. */\nif ( ! defined( 'ABSPATH' ) ) &#123;\n\tdefine( 'ABSPATH', __DIR__ . '/' );\n&#125;\n\n/** Sets up WordPress vars and included files. */\nrequire_once ABSPATH . 'wp-settings.php';\n\n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808142616.png\" alt=\"image-20210808142612882\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808142850.png\" alt=\"image-20210808142848720\" /></p>\n<p>登录测试</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808142940.png\" alt=\"image-20210808142937065\" /></p>\n<p>可以在配置文件中添加一行，这样在界面就可以选择默认语言为简体中文</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'WPLANG'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'zh_CN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808153910.png\" alt=\"image-20210808153906961\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808152700.png\" alt=\"image-20210808152654223\" /></p>\n<p><img data-src=\"C:/Users/samsung/Desktop/img/blog/20210808155448.png\" alt=\"image-20210808155446826\" /></p>\n<h3 id=\"cms搭建\"><a class=\"anchor\" href=\"#cms搭建\">#</a> CMS 搭建</h3>\n<p>此外还可以搭建 CMS 后台管理系统，可以下载开源软件 <span class=\"exturl\" data-url=\"aHR0cDovL2RlZGVjbXMuY29tLw==\">http://dedecms.com/</span></p>\n<pre><code class=\"language-sh\">[root@localhost default]# wget -c http://updatenew.dedecms.com/base-v57/package/DedeCMS-V5.7-UTF8-SP2.tar.gz\n[root@localhost default]# ls\nbbs  DedeCMS-V5.7-UTF8-SP2.tar.gz  index.html  phpinfo.php  phpMyAdmin  wordpress  xprober.php\n[root@localhost default]# tar -zxvf DedeCMS-V5.7-UTF8-SP2.tar.gz \n[root@localhost default]# ls\nbbs  DedeCMS-V5.7-UTF8-SP2.tar.gz  docs  index.html  phpinfo.php  phpMyAdmin  uploads  wordpress  xprober.php\n[root@localhost default]# mv uploads/ cms\n[root@localhost default]# chmod -R 777 cms/\n[root@localhost default]# ls\nbbs  cms  DedeCMS-V5.7-UTF8-SP2.tar.gz  docs  index.html  phpinfo.php  phpMyAdmin  wordpress  xprober.php\n\n</code></pre>\n<p>直接访问 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC9jbXM=\">http://192.168.137.128/cms</span></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808160558.png\" alt=\"image-20210808160556736\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808160811.png\" alt=\"image-20210808160809981\" /></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808160905.png\" alt=\"image-20210808160903614\" /></p>\n<p><img data-src=\"C:/Users/samsung/Desktop/img/blog/20210808160931.png\" alt=\"image-20210808160929461\" /></p>\n<h2 id=\"lua\"><a class=\"anchor\" href=\"#lua\">#</a> Lua</h2>\n<h3 id=\"openresty安装\"><a class=\"anchor\" href=\"#openresty安装\">#</a> openresty 安装</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9vcGVucmVzdHkub3JnL2NuLw==\">https://openresty.org/cn/</span></p>\n<p>你可以在你的 CentOS 系统中添加  <code>openresty</code>  仓库，这样就可以便于未来安装或更新我们的软件包（通过  <code>yum check-update</code>  命令）。 运行下面的命令就可以添加我们的仓库（对于 CentOS 8 或以上版本，应将下面的  <code>yum</code>  都替换成  <code>dnf</code> ）：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># add the yum repo:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> https://openresty.org/package/centos/openresty.repo</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mv</span> openresty.repo /etc/yum.repos.d/</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># update the yum index:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">sudo</span> yum check-update</pre></td></tr></table></figure><p>然后就可以像下面这样安装软件包，比如  <code>openresty</code> ：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y openresty</pre></td></tr></table></figure><p>默认被安装在 /usr/local/openresty</p>\n<pre><code class=\"language-sh\">[root@localhost openresty]# pwd\n/usr/local/openresty\n[root@localhost openresty]# ls\nbin  COPYRIGHT  luajit  lualib  nginx  openssl111  pcre  site  zlib\n</code></pre>\n<pre><code class=\"language-sh\">#启动openresty\n[root@localhost yum.repos.d]# systemctl start openresty.service \n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808182108.png\" alt=\"image-20210808182107175\" /></p>\n<h3 id=\"lua开发\"><a class=\"anchor\" href=\"#lua开发\">#</a> lua 开发</h3>\n<p>可以直接在 openresty 目录下的 nginx 中编写 lua 脚本</p>\n<pre><code>    server &#123; \n        listen       80; \n        server_name  localhost; \n \n        #charset koi8-r; \n \n        #access_log  logs/host.access.log  main; \n \n        location / &#123; \n            root   html; \n            index  index.html index.htm; \n        &#125; \n \n\t\tlocation /lua &#123; \n\t\t\tdefault_type text/html; \n        \tcontent_by_lua 'ngx.say(&quot;&lt;b&gt;hello world~&lt;/b&gt;&quot;)'; \n\t\t&#125; \n\n&#125;\n</code></pre>\n<pre><code class=\"language-sh\">#重新加载配置\n[root@localhost conf]# systemctl reload openresty.service \n</code></pre>\n<p>访问测试  <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC9sdWE=\">http://192.168.137.128/lua</span></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808183502.png\" alt=\"image-20210808183500784\" /></p>\n<p>可以在引入单独的 lua 文件</p>\n<pre><code class=\"language-sh\">[root@localhost conf]# vim 001.lua\nngx.say(&quot;&lt;b&gt;hello world~&lt;/b&gt;&quot;)\n</code></pre>\n<pre><code>location /lua1 &#123;  \n            default_type text/html;  \n            content_by_lua_file conf/001.lua;  \n        &#125;  \n</code></pre>\n<p>重新加载配置后访问测试</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808184712.png\" alt=\"image-20210808184710811\" /></p>\n<p>可以写一个 lua 配置，然后 nginx 引入该配置</p>\n<pre><code class=\"language-sh\">root@localhost conf]# vim lua.conf\ncontent_by_lua_file conf/001.lua;\n</code></pre>\n<pre><code>location /lua2 &#123;   \n            default_type text/html;   \n            include lua.conf;   \n        &#125; \n</code></pre>\n<p>访问测试</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808185335.png\" alt=\"image-20210808185334044\" /></p>\n<p>此外，还可以在 nginx 配置文件中写 lua 代码块</p>\n<pre><code>location /lua3 &#123;    \n            default_type text/html;    \n            content_by_lua_block &#123; \n                 ngx.say(&quot;hello world~&lt;br&gt;&quot;)     \n                 ngx.say(&quot;lua_block&quot;)\n                &#125;    \n        &#125;  \n</code></pre>\n<p>重新加载配置后测试</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808190044.png\" alt=\"+\" /></p>\n<p>include 可以不写在 location 中，nginx.conf</p>\n<pre><code>location /lua2 &#123;   \n            default_type text/html;   \n            include lua.conf;   \n        &#125; \n \n        include lua1.conf; \n\n</code></pre>\n<p>lua1.conf</p>\n<pre><code>location /lua4 &#123; \n        default_type text/html; \n        content_by_lua_file conf/001.lua;  \n&#125;\n</code></pre>\n<p>重新加载配置后访问</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808221211.png\" alt=\"image-20210808221210320\" /></p>\n<p>location 在匹配 uri 时 / 代表最大前缀匹配，所以以上 lua4 之后随意加上字符也可以访问到</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808221531.png\" alt=\"image-20210808221529823\" /></p>\n<p>如果在 location 后面加了 =，那么就是精准匹配</p>\n<pre><code>location =/lua4 &#123; \n        default_type text/html; \n        content_by_lua_file conf/001.lua;  \n&#125;\n</code></pre>\n<h3 id=\"获取nginx-uri中的单一变量\"><a class=\"anchor\" href=\"#获取nginx-uri中的单一变量\">#</a> 获取 nginx uri 中的单一变量</h3>\n<pre><code> location /lua5.php &#123;     \n            default_type text/html;     \n            content_by_lua_block &#123;  \n                 ngx.say(ngx.var.arg_a) \n                &#125;     \n        &#125;  \n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808222734.png\" alt=\"image-20210808222733371\" /></p>\n<h3 id=\"lua配置热加载\"><a class=\"anchor\" href=\"#lua配置热加载\">#</a> lua 配置热加载</h3>\n<pre><code>  server &#123; \n        listen       80; \n        server_name  localhost; \n \n # 将缓存关闭，使得每次更改都不用手动重新加载配置\n        lua_code_cache off;\n&#125;\n</code></pre>\n<p>重启 openresty</p>\n<pre><code class=\"language-sh\">[root@localhost conf]# systemctl restart openresty.service\n</code></pre>\n<p>此外，lua 热加载只对外部文件的更改有效，对于 nginx 配置文件的有关更改仍然需要重新加载配置文件</p>\n<pre><code>  location /lua6 &#123;   \n            default_type text/html;   \n            content_by_lua_file conf/002.lua;   \n        &#125;  \n</code></pre>\n<p>002.lua</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">.</span>arg_name<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808225447.png\" alt=\"image-20210808225442713\" /></p>\n<p>此时更改 002.lua，然后不重新加载配置，测试访问更改是否生效</p>\n<h3 id=\"获取nginx-uri中的所有变量\"><a class=\"anchor\" href=\"#获取nginx-uri中的所有变量\">#</a> 获取 nginx uri 中的所有变量</h3>\n<p>003.lua</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> uri_args <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_uri_args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>uri_args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">else</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token string\">\":\"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">end</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><p>nginx.conf</p>\n<pre><code> location /lua7 &#123;    \n            default_type text/html;    \n            content_by_lua_file conf/003.lua;    \n        &#125; \n</code></pre>\n<p>测试 <span class=\"exturl\" data-url=\"aHR0cDovLzE5Mi4xNjguMTM3LjEyOC9sdWE3P25hbWU9dG9tJmFtcDthZ2U9MjAmYW1wO2dlbmRlcj1tYW4=\">http://192.168.137.128/lua7?name=tom&amp;age=20&amp;gender=man</span></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210808234530.png\" alt=\"image-20210808234526657\" /></p>\n<h3 id=\"获取nginx请求头信息\"><a class=\"anchor\" href=\"#获取nginx请求头信息\">#</a> 获取 nginx 请求头信息</h3>\n<p>004.lua</p>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">local</span> headers <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_headers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>                         </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Host : \"</span><span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">[</span><span class=\"token string\">\"Host\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user-agent : \"</span><span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">[</span><span class=\"token string\">\"user-agent\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user-agent : \"</span><span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">.</span>user_agent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>headers<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token string\">\" : \"</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">else</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token string\">\" : \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">end</span>  </pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><pre><code>   location /lua8 &#123;     \n            default_type text/html;     \n            content_by_lua_file conf/004.lua;     \n        &#125;    \n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210809230045.png\" alt=\"image-20210809230043837\" /></p>\n<h3 id=\"获取post请求参数\"><a class=\"anchor\" href=\"#获取post请求参数\">#</a> 获取 post 请求参数</h3>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">read_body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"post args begin\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">local</span> post_args <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_post_args</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>post_args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>  </pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span>  </pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token string\">\" : \"</span><span class=\"token punctuation\">,</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> <span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">else</span>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> <span class=\"token string\">\": \"</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">end</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">end</span></pre></td></tr></table></figure><h3 id=\"http协议版本\"><a class=\"anchor\" href=\"#http协议版本\">#</a> http 协议版本</h3>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ngx.req.http_version : \"</span><span class=\"token punctuation\">,</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">http_version</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"请求方法\"><a class=\"anchor\" href=\"#请求方法\">#</a> 请求方法</h3>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ngx.req.get_method : \"</span><span class=\"token punctuation\">,</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"原始的请求头内容\"><a class=\"anchor\" href=\"#原始的请求头内容\">#</a> 原始的请求头内容</h3>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ngx.req.raw_header : \"</span><span class=\"token punctuation\">,</span>  ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">raw_header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"body内容体\"><a class=\"anchor\" href=\"#body内容体\">#</a> body 内容体</h3>\n<figure class=\"highlight lua\"><figcaption data-lang=\"lua\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ngx.req.get_body_data() : \"</span><span class=\"token punctuation\">,</span> ngx<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span><span class=\"token function\">get_body_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"&lt;br/>\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "Java",
                "Java",
                "Nginx"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/Netty",
            "url": "https://www.baiyezi.vip/Netty",
            "title": "Netty",
            "date_published": "2021-08-16T13:15:10.000Z",
            "content_html": "<h2 id=\"nettyapi简单使用\"><a class=\"anchor\" href=\"#nettyapi简单使用\">#</a> NettyAPI 简单使用</h2>\n<h3 id=\"客户端单独测试\"><a class=\"anchor\" href=\"#客户端单独测试\">#</a> 客户端单独测试</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 客户端</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * 1、主动发数据</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     * 2、等待别人发数据，需要从 selector 获取相应的事件，才能判断别人是否给自己发送数据</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     * 服务端开启 [root@localhost local]# nc -l 192.168.20.105 9090</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clientMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">NioEventLoopGroup</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 客户端模式</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">NioSocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioSocketChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">// 将客户端的 channel（中的事件）注册到 NioEventLoopGroup 中的 selector。epoll_ctl</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        thread<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">//netty 通过 pipeline 来处理 selector 中的事件（读写等）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 连接服务端</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> connect <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.20.105\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 等待连接成功后才往下执行代码</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> sync <span class=\"token operator\">=</span> connect<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">ByteBuf</span> byteBuf <span class=\"token operator\">=</span> <span class=\"token class-name\">Unpooled</span><span class=\"token punctuation\">.</span><span class=\"token function\">copiedBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello server\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> channelFuture <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>byteBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 等待消息发送成功</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        channelFuture<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 等待关闭</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        sync<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">closeFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client over...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    \t客户端事件</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    */</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client registed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client active...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelInactive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client inactive...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token class-name\">ByteBuf</span> buf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token comment\">//buf 的 read 会移动 buf 中的索引指针，指针走过的数据就不再存在</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">//            CharSequence charSequence = buf.readCharSequence(buf.readableBytes(), CharsetUtil.UTF_8);</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token class-name\">CharSequence</span> charSequence <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">getCharSequence</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">readableBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>charSequence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token comment\">// 接收到的再发送回去</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>先开启一个服务端</p>\n<pre><code class=\"language-sh\">[root@localhost ~]# nc -l 192.168.20.105 9090\nhello server\n</code></pre>\n<p>控制台打印</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210901142959046.png\" alt=\"image-20210901142959046\" /></p>\n<h3 id=\"服务端单独测试\"><a class=\"anchor\" href=\"#服务端单独测试\">#</a> 服务端单独测试</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 服务端</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * @throws InterruptedException</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     */</span>\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">serverMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">NioEventLoopGroup</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">NioServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioServerSocketChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 将 server 的 channel 注册在 NioEventLoopGroup 的 selector，此时 server 处于 listen 状态</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        thread<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 接收客户端，并且注册在 selector。响应式</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyAcceptHandler</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> channelFuture <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.20.154\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 等待端口绑定以及 channel 关闭</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        channelFuture<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">closeFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server closed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     * 服务端事件</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAcceptHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">EventLoopGroup</span> selector<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ChannelHandler</span> handler<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">MyAcceptHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventLoopGroup</span> thread<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ChannelHandler</span> myHandler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selector <span class=\"token operator\">=</span> thread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handler <span class=\"token operator\">=</span> myHandler<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server registed..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">//server 处于 listen 状态时首先 accept 的是客户端的 channel，而不是客户端发送的消息。此处 accept 由 netty 内部完成</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\">// 1、将接收到的客户端注册到服务端的 selector</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            selector<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token comment\">// 2、添加客户但的响应式的 handler，即客户端的事件处理</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>     *  客户端事件</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>   <span class=\"token comment\">// @ChannelHandler.Sharable// 代表该事件处理器可以被多个客户端连接共享</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client registed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client active...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelInactive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client inactive...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token class-name\">ByteBuf</span> buf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token comment\">//buf 的 read 会移动 buf 中的索引指针，指针走过的数据就不再存在</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">//            CharSequence charSequence = buf.readCharSequence(buf.readableBytes(), CharsetUtil.UTF_8);</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token class-name\">CharSequence</span> charSequence <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">getCharSequence</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">readableBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>charSequence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token comment\">// 接收到的再发送回去</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>连接以上服务端</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># nc 192.168.20.154 9090</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>svsvs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>svsvs</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>gulgul</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gulgul</pre></td></tr></table></figure><p>控制台打印</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210901142735605.png\" alt=\"image-20210901142735605\" /></p>\n<p>此时服务端只允许一个客户端连接，如果多连接一个客户端则报错：客户端的事件处理默认只能被一个客户端连接使用。为此可以在客户端的处理器加上注解 @ChannelHandler.Sharable ，此时可以解决多个客户端连接的问题。但是如果客户端处理器有其他要操作的属性，被多个客户端同时使用时不安全，所以加注解并不能解决根本的问题。</p>\n<pre><code class=\"language-cmd\">[nioEventLoopGroup-2-1] WARN io.netty.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.channel.ChannelPipelineException: com.fan.netty_1.MyNetty$MyHandler is not a @Sharable handler, so can't be added or removed multiple times.\n\tat io.netty.channel.DefaultChannelPipeline.checkMultiplicity(DefaultChannelPipeline.java:600)\n\tat io.netty.channel.DefaultChannelPipeline.addLast(DefaultChannelPipeline.java:202)\n\tat io.netty.channel.DefaultChannelPipeline.addLast(DefaultChannelPipeline.java:381)\n\tat io.netty.channel.DefaultChannelPipeline.addLast(DefaultChannelPipeline.java:370)\n\tat com.fan.netty_1.MyNetty$MyAcceptHandler.channelRead(MyNetty.java:165)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:93)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:748)\n</code></pre>\n<p>可以考虑将客户端事件单独拎出来，即有客户端连接就相应的创建一个客户端事件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>     * 服务端</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>     * @throws InterruptedException</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">serverMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">NioEventLoopGroup</span> thread <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">NioServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioServerSocketChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\">// 将 server 的 channel 注册在 NioEventLoopGroup 的 selector，此时 server 处于 listen 状态</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        thread<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 接收客户端，并且注册在 selector。响应式</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyAcceptHandler</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> channelFuture <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.20.154\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">// 等待端口绑定以及 channel 关闭</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        channelFuture<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">closeFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server closed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     * 服务端事件</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAcceptHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">EventLoopGroup</span> selector<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ChannelHandler</span> handler<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token class-name\">MyAcceptHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EventLoopGroup</span> thread<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ChannelHandler</span> myHandler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>selector <span class=\"token operator\">=</span> thread<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handler <span class=\"token operator\">=</span> myHandler<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server registed..\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token comment\">//server 处于 listen 状态时首先 accept 的是客户端的 channel，而不是客户端发送的消息。此处 accept 由 netty 内部完成</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token comment\">// 添加客户但的响应式的 handler，即客户端的事件处理</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token comment\">// 将接收到的客户端注册到服务端的 selector</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            selector<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>     * 每个客户端连接进来都会创建一个新的客户端的事件处理器。</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token annotation punctuation\">@ChannelHandler.Sharable</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChannelInit</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token class-name\">Channel</span> client <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token comment\">//pipeline 中添加客户端的事件处理器且注册在服务端的 selector 后就不再需要该事件处理器，可以直接移除，即只负责创建事件处理器，b</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>\t<span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>     *  客户端事件</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client registed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client active...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelInactive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client inactive...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token class-name\">ByteBuf</span> buf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token comment\">//buf 的 read 会移动 buf 中的索引指针，指针走过的数据就不再存在</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\">//            CharSequence charSequence = buf.readCharSequence(buf.readableBytes(), CharsetUtil.UTF_8);</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token class-name\">CharSequence</span> charSequence <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">getCharSequence</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">readableBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>charSequence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token comment\">// 接收到的再发送回去</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"netty简单使用\"><a class=\"anchor\" href=\"#netty简单使用\">#</a> Netty 简单使用</h2>\n<h3 id=\"客户端\"><a class=\"anchor\" href=\"#客户端\">#</a> 客户端</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>netty_2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>netty_1<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MyNetty</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bootstrap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Unpooled</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NioSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @Author fan</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @Date 2021-09-01 17:00</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NettyClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">nettyClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">NioEventLoopGroup</span> group <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">Bootstrap</span> bootstrap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Bootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> connect <span class=\"token operator\">=</span> bootstrap<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NioSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">//                .handler(new ChannelInit())</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelInitializer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initChannel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span> ch<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        ch<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.20.105\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token class-name\">Channel</span> client <span class=\"token operator\">=</span> connect<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token class-name\">ByteBuf</span> byteBuf <span class=\"token operator\">=</span> <span class=\"token class-name\">Unpooled</span><span class=\"token punctuation\">.</span><span class=\"token function\">copiedBuffer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello server\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> channelFuture <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>byteBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">// 等待消息发送成功</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        channelFuture<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 等待关闭</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        client<span class=\"token punctuation\">.</span><span class=\"token function\">closeFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     * 每个客户端连接进来都会创建一个新的客户端的事件处理器。</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token annotation punctuation\">@ChannelHandler.Sharable</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChannelInit</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token class-name\">Channel</span> client <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token comment\">//pipeline 中添加客户端的事件处理器后就不再被需要，可以直接移除</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>     *  客户端事件</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client registed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client active...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelInactive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client inactive...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token class-name\">ByteBuf</span> buf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token comment\">//buf 的 read 会移动 buf 中的索引指针，指针走过的数据就不再存在</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\">//            CharSequence charSequence = buf.readCharSequence(buf.readableBytes(), CharsetUtil.UTF_8);</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token class-name\">CharSequence</span> charSequence <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">getCharSequence</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">readableBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>charSequence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token comment\">// 接收到的再发送回去</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"服务端\"><a class=\"anchor\" href=\"#服务端\">#</a> 服务端</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>netty_2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerBootstrap</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NioServerSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>channel<span class=\"token punctuation\">.</span>socket<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NioSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">io<span class=\"token punctuation\">.</span>netty<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>junit<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Test</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @Author fan</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @Date 2021-09-01 17:23</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NettyServer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Test</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">nettyServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">NioEventLoopGroup</span> group <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NioEventLoopGroup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">ServerBootstrap</span> serverBootstrap <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerBootstrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">ChannelFuture</span> bind <span class=\"token operator\">=</span> serverBootstrap<span class=\"token punctuation\">.</span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">,</span> group<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NioServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">//                .childHandler(new ChannelInit())</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">childHandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ChannelInitializer</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">NioSocketChannel</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initChannel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NioSocketChannel</span> ch<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.20.154\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        bind<span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">closeFuture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     * 每个客户端连接进来都会创建一个新的客户端的事件处理器。</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token annotation punctuation\">@ChannelHandler.Sharable</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">ChannelInit</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token class-name\">Channel</span> client <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token class-name\">ChannelPipeline</span> pipeline <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">addLast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token comment\">//pipeline 中添加客户端的事件处理器后就不再被需要，可以直接移除</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">pipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"61\"></td><td><pre>     *  客户端事件</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyHandler</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ChannelInboundHandlerAdapter</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRegistered</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client registed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelActive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client active...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelInactive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client inactive...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">channelRead</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ChannelHandlerContext</span> ctx<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> msg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token class-name\">ByteBuf</span> buf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuf</span><span class=\"token punctuation\">)</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token comment\">//buf 的 read 会移动 buf 中的索引指针，指针走过的数据就不再存在</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">//            CharSequence charSequence = buf.readCharSequence(buf.readableBytes(), CharsetUtil.UTF_8);</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token class-name\">CharSequence</span> charSequence <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">getCharSequence</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">readableBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">CharsetUtil</span><span class=\"token punctuation\">.</span>UTF_8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>charSequence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token comment\">// 接收到的再发送回去</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            ctx<span class=\"token punctuation\">.</span><span class=\"token function\">writeAndFlush</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"rpc实现\"><a class=\"anchor\" href=\"#rpc实现\">#</a> RPC 实现</h2>\n",
            "tags": [
                "Java",
                "Java",
                "NIO",
                "Netty"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/Kafka-%E6%90%AD%E5%BB%BA",
            "url": "https://www.baiyezi.vip/Kafka-%E6%90%AD%E5%BB%BA",
            "title": "Kafka-搭建",
            "date_published": "2021-08-16T12:12:05.000Z",
            "content_html": "<h2 id=\"kafka集群搭建\"><a class=\"anchor\" href=\"#kafka集群搭建\">#</a> kafka 集群搭建</h2>\n<h3 id=\"kafka安装\"><a class=\"anchor\" href=\"#kafka安装\">#</a> kafka 安装</h3>\n<p>1、安装 Zookeeper</p>\n<p>2、安装 kafka</p>\n<p>kafka 配置</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827155941535.png\" alt=\"image-20210827155941535\" /></p>\n<p>启动 kafka</p>\n<p><img data-src=\"%E6%90%AD%E5%BB%BA.assets/image-20210827162017476.png\" alt=\"image-20210827162017476\" /></p>\n<h3 id=\"创建topic以及分区\"><a class=\"anchor\" href=\"#创建topic以及分区\">#</a> 创建 topic 以及分区</h3>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827155654819.png\" alt=\"image-20210827155654819\" /></p>\n<p>--zookeeper 节点 IP: 端口</p>\n<p>--topic 分区名字</p>\n<p>--partitions 分区个数</p>\n<p>--replication-factor 每个分区副本数</p>\n<p>查看创建的 topic</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827160300214.png\" alt=\"image-20210827160300214\" /></p>\n<p>查看某个 topic 具体的信息</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827161120903.png\" alt=\"image-20210827161120903\" /></p>\n<h3 id=\"consumer订阅topic\"><a class=\"anchor\" href=\"#consumer订阅topic\">#</a> consumer 订阅 topic</h3>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827161900979.png\" alt=\"image-20210827161900979\" /></p>\n<p>--bootstrap-server 订阅的 kafka 节点 (即 broker 节点)</p>\n<p>--group 定义该 consumer 所属的组</p>\n<p>同一个组的 consumer 会轮询接收到推送消息。当只有一个 consumer 时会接收到所有分区的推送消息，当有多个 consumer 时，每个 consumer 不会接收到同一个分区的同一条推送消息。</p>\n<h3 id=\"producer推送数据到topic\"><a class=\"anchor\" href=\"#producer推送数据到topic\">#</a> producer 推送数据到 topic</h3>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827162925107.png\" alt=\"image-20210827162925107\" /></p>\n<p>--broker-list 要推送到的 kafka 节点</p>\n<p>--topic 推送到指定的 topic</p>\n<p>推送消息 12345678</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827165443085.png\" alt=\"image-20210827165443085\" /></p>\n<p>第一个 consumer 拿到了 1357</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827165545646.png\" alt=\"image-20210827165545646\" /></p>\n<p>第二个 consumer 拿到了 2468</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827165605614.png\" alt=\"image-20210827165605614\" /></p>\n<p>从以上结果可以看到，消息推送给同一组的消费者时是轮询推送的</p>\n<h3 id=\"组操作\"><a class=\"anchor\" href=\"#组操作\">#</a> 组操作</h3>\n<p>查看指定节点的消费者组</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827170018141.png\" alt=\"image-20210827170018141\" /></p>\n<p>查看指定组的消费者信息</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827170300545.png\" alt=\"image-20210827170300545\" /></p>\n<p>其中，offset 维护在了 kafka 集群内部中的一个 topic，即_consumer_offsets</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827170701827.png\" alt=\"image-20210827170701827\" /></p>\n<p>一个 topic 默认有 50 个分区，50 个分区分布在指定的 kafka 节点中</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827171206181.png\" alt=\"image-20210827171206181\" /></p>\n<h2 id=\"消息\"><a class=\"anchor\" href=\"#消息\">#</a> 消息</h2>\n<p>如果消息种类较多，且消费者需要一类消息的有序性消费时就需要特别注意。</p>\n<p>比如，消息是 (K,V) 型的，可以让相同的 key 推送到同一个分区里且 broker 会保证推送的消息的顺序，但一个分区里可能有不同的 key，且不同的 key 是交叉的，这就会使得相同的 key 在一个分区里没有排列在一起</p>\n",
            "tags": [
                "Java",
                "Java",
                "消息中间件",
                "Kafka"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/%E7%BD%91%E7%BB%9CIO%E6%A8%A1%E5%9E%8B",
            "url": "https://www.baiyezi.vip/%E7%BD%91%E7%BB%9CIO%E6%A8%A1%E5%9E%8B",
            "title": "网络IO模型",
            "date_published": "2021-08-15T11:54:25.000Z",
            "content_html": "<h2 id=\"bio\"><a class=\"anchor\" href=\"#bio\">#</a> BIO</h2>\n<h3 id=\"tcp的一些参数\"><a class=\"anchor\" href=\"#tcp的一些参数\">#</a> TCP 的一些参数</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#查看指定进程的文件描述符</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">lsof</span> -p </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#查看连接状态</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">netstat</span> -natp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#抓取网络通讯包</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tcpdump</pre></td></tr></table></figure><p>socket 服务端（ip：192.168.137.131）</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Socket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * BIO  多线程的方式</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketIOPropertites</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token comment\">//server socket listen property:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> RECEIVE_BUFFER <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> SO_TIMEOUT <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> REUSE_ADDR <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> BACK_LOG <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">//client socket listen property on server endpoint:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\">// 是否是长连接</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_KEEPALIVE <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_OOB <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_REC_BUF <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_REUSE_ADDR <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_SEND_BUF <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_LINGER <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_LINGER_N <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_TIMEOUT <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_NO_DELAY <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    StandardSocketOptions.TCP_NODELAY</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    StandardSocketOptions.SO_KEEPALIVE</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    StandardSocketOptions.SO_LINGER</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    StandardSocketOptions.SO_RCVBUF</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    StandardSocketOptions.SO_SNDBUF</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    StandardSocketOptions.SO_REUSEADDR</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token class-name\">ServerSocket</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BACK_LOG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">setReceiveBufferSize</span><span class=\"token punctuation\">(</span>RECEIVE_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">setReuseAddress</span><span class=\"token punctuation\">(</span>REUSE_ADDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">setSoTimeout</span><span class=\"token punctuation\">(</span>SO_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server up use 9090!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>               <span class=\"token comment\">// 阻塞，等待输入，此时，客户端发过来的消息会被放入内核的缓存中，直到该服务端执行以下的 accept ()</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token comment\">// 时，此时内核缓存中的数据会发送给服务端</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token class-name\">Socket</span> client <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 阻塞的，没有 -1  一直卡着不动  accept (4,</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client port: \"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setKeepAlive</span><span class=\"token punctuation\">(</span>CLI_KEEPALIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setOOBInline</span><span class=\"token punctuation\">(</span>CLI_OOB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setReceiveBufferSize</span><span class=\"token punctuation\">(</span>CLI_REC_BUF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setReuseAddress</span><span class=\"token punctuation\">(</span>CLI_REUSE_ADDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setSendBufferSize</span><span class=\"token punctuation\">(</span>CLI_SEND_BUF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setSoLinger</span><span class=\"token punctuation\">(</span>CLI_LINGER<span class=\"token punctuation\">,</span> CLI_LINGER_N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setSoTimeout</span><span class=\"token punctuation\">(</span>CLI_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setTcpNoDelay</span><span class=\"token punctuation\">(</span>CLI_NO_DELAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token comment\">//client.read   // 阻塞   没有  -1 0</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                                <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                                <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                                <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                                    <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client read some data is :\"</span> <span class=\"token operator\">+</span> num <span class=\"token operator\">+</span> <span class=\"token string\">\" val :\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client readed nothing!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                                        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client readed -1...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                                        client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                server<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Socket 客户端（ip：192.168.137.128）</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Socket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketClient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token comment\">// 连接服务端</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token class-name\">Socket</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Socket</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.137.131\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">setSendBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">setTcpNoDelay</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token class-name\">OutputStream</span> out <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                <span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bb <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span> b <span class=\"token operator\">:</span> bb<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                        out<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#启动 Socket 服务端</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost testsocket<span class=\"token punctuation\">]</span><span class=\"token comment\"># java SocketIOPropertites </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server up use <span class=\"token number\">9090</span><span class=\"token operator\">!</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Active Internet connections <span class=\"token punctuation\">(</span>servers and established<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#可以看到端口 9090 处于监听状态</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9090                 :::*                    LISTEN      <span class=\"token number\">4626</span>/java           </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::111                  :::*                    LISTEN      <span class=\"token number\">1</span>/systemd</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># jps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">4626</span> SocketIOPropertites</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">4645</span> Jps</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#查看以上 Socket 服务端进程的文件描述符</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -p 4626</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>java    <span class=\"token number\">4626</span> root    7u  IPv6              <span class=\"token number\">71164</span>      0t0      TCP *:websm <span class=\"token punctuation\">(</span>LISTEN<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#监听指定网卡的端口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tcpdump -nn -i ens33 port 9090</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>tcpdump: verbose output suppressed, use -v or -vv <span class=\"token keyword\">for</span> full protocol decode</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>listening on ens33, link-type EN10MB <span class=\"token punctuation\">(</span>Ethernet<span class=\"token punctuation\">)</span>, capture size <span class=\"token number\">262144</span> bytes</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#启动客户端</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost testsocket<span class=\"token punctuation\">]</span><span class=\"token comment\"># java SocketClient</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Active Internet connections <span class=\"token punctuation\">(</span>servers and established<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name     </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tcp6       <span class=\"token number\">1</span>      <span class=\"token number\">0</span> :::9090                 :::*                    LISTEN      <span class=\"token number\">4626</span>/java           </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::111                  :::*                    LISTEN      <span class=\"token number\">1</span>/systemd    <span class=\"token comment\">#服务端 131 与客户端 128 建立了连接，但并没有 pid，因为服务端在阻塞等待输入</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">192.168</span>.137.131:9090    <span class=\"token number\">192.168</span>.137.128:55058   ESTABLISHED -</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#数据包查看</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tcpdump -nn -i ens33 port 9090</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>tcpdump: verbose output suppressed, use -v or -vv <span class=\"token keyword\">for</span> full protocol decode</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>listening on ens33, link-type EN10MB <span class=\"token punctuation\">(</span>Ethernet<span class=\"token punctuation\">)</span>, capture size <span class=\"token number\">262144</span> bytes</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#可以看到 131 与 128 有三次握手</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">17</span>:48:07.627589 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">377241970</span>, win <span class=\"token number\">29200</span>, options <span class=\"token punctuation\">[</span>mss <span class=\"token number\">1460</span>,sackOK,TS val <span class=\"token number\">202063491</span> ecr <span class=\"token number\">0</span>,nop,wscale <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token number\">17</span>:48:07.627992 IP <span class=\"token number\">192.168</span>.137.131.9090 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.128.55058: Flags <span class=\"token punctuation\">[</span>S.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">2901635676</span>, ack <span class=\"token number\">377241971</span>, win <span class=\"token number\">1152</span>, options <span class=\"token punctuation\">[</span>mss <span class=\"token number\">1460</span>,sackOK,TS val <span class=\"token number\">1965980806</span> ecr <span class=\"token number\">202063491</span>,nop,wscale <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">17</span>:48:07.628870 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>.<span class=\"token punctuation\">]</span>, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202063493</span> ecr <span class=\"token number\">1965980806</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#客户端发送消息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost testsocket<span class=\"token punctuation\">]</span><span class=\"token comment\"># java SocketClient </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">1111</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#服务端在阻塞等待输入，所以无法接收到客户端发送的消息</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost testsocket<span class=\"token punctuation\">]</span><span class=\"token comment\"># java SocketIOPropertites </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server up use <span class=\"token number\">9090</span><span class=\"token operator\">!</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># tcpdump -nn -i ens33 port 9090</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tcpdump: verbose output suppressed, use -v or -vv <span class=\"token keyword\">for</span> full protocol decode</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>listening on ens33, link-type EN10MB <span class=\"token punctuation\">(</span>Ethernet<span class=\"token punctuation\">)</span>, capture size <span class=\"token number\">262144</span> bytes</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">17</span>:48:07.627589 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>S<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">377241970</span>, win <span class=\"token number\">29200</span>, options <span class=\"token punctuation\">[</span>mss <span class=\"token number\">1460</span>,sackOK,TS val <span class=\"token number\">202063491</span> ecr <span class=\"token number\">0</span>,nop,wscale <span class=\"token number\">7</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">17</span>:48:07.627992 IP <span class=\"token number\">192.168</span>.137.131.9090 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.128.55058: Flags <span class=\"token punctuation\">[</span>S.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">2901635676</span>, ack <span class=\"token number\">377241971</span>, win <span class=\"token number\">1152</span>, options <span class=\"token punctuation\">[</span>mss <span class=\"token number\">1460</span>,sackOK,TS val <span class=\"token number\">1965980806</span> ecr <span class=\"token number\">202063491</span>,nop,wscale <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token number\">17</span>:48:07.628870 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>.<span class=\"token punctuation\">]</span>, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202063493</span> ecr <span class=\"token number\">1965980806</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#有数据包</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">17</span>:51:00.374704 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>P.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">1</span>:2, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202236239</span> ecr <span class=\"token number\">1965980806</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token number\">17</span>:51:00.374760 IP <span class=\"token number\">192.168</span>.137.131.9090 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.128.55058: Flags <span class=\"token punctuation\">[</span>.<span class=\"token punctuation\">]</span>, ack <span class=\"token number\">2</span>, win <span class=\"token number\">1151</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">1966153553</span> ecr <span class=\"token number\">202236239</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token number\">17</span>:51:00.374830 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>P.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">2</span>:3, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202236239</span> ecr <span class=\"token number\">1965980806</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token number\">17</span>:51:00.374875 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>P.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">3</span>:4, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202236239</span> ecr <span class=\"token number\">1965980806</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token number\">17</span>:51:00.375174 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>P.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">4</span>:5, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202236239</span> ecr <span class=\"token number\">1966153553</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token number\">17</span>:51:00.385449 IP <span class=\"token number\">192.168</span>.137.128.55058 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.131.9090: Flags <span class=\"token punctuation\">[</span>P.<span class=\"token punctuation\">]</span>, <span class=\"token function\">seq</span> <span class=\"token number\">4</span>:5, ack <span class=\"token number\">1</span>, win <span class=\"token number\">229</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">202236246</span> ecr <span class=\"token number\">1966153553</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token number\">17</span>:51:00.385932 IP <span class=\"token number\">192.168</span>.137.131.9090 <span class=\"token operator\">></span> <span class=\"token number\">192.168</span>.137.128.55058: Flags <span class=\"token punctuation\">[</span>.<span class=\"token punctuation\">]</span>, ack <span class=\"token number\">5</span>, win <span class=\"token number\">1148</span>, options <span class=\"token punctuation\">[</span>nop,nop,TS val <span class=\"token number\">1966153564</span> ecr <span class=\"token number\">202236239</span>,nop,nop,sack <span class=\"token number\">1</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span>:5<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>, length <span class=\"token number\">0</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Active Internet connections <span class=\"token punctuation\">(</span>servers and established<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tcp6       <span class=\"token number\">1</span>      <span class=\"token number\">0</span> :::9090                 :::*                    LISTEN      <span class=\"token number\">4626</span>/java           </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::111                  :::*                    LISTEN      <span class=\"token number\">1</span>/systemd    <span class=\"token comment\">#可以看到服务端无法接收消息时，内核会缓存客户端发送的消息，这里为 4 字节（1111）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>tcp6       <span class=\"token number\">4</span>      <span class=\"token number\">0</span> <span class=\"token number\">192.168</span>.137.131:9090    <span class=\"token number\">192.168</span>.137.128:55058   ESTABLISHED -</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># jps</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">4626</span> SocketIOPropertites</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">4734</span> Jps</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -p 4626</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>COMMAND  PID <span class=\"token environment constant\">USER</span>   FD   TYPE             DEVICE SIZE/OFF     NODE NAME</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#由于服务端阻塞，所以文件描述符仍然处于监听状态，而不是建立连接状态</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>java    <span class=\"token number\">4626</span> root    7u  IPv6              <span class=\"token number\">71164</span>      0t0      TCP *:websm <span class=\"token punctuation\">(</span>LISTEN<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#服务端回车，结束阻塞</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost testsocket<span class=\"token punctuation\">]</span><span class=\"token comment\"># java SocketIOPropertites </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>server up use <span class=\"token number\">9090</span><span class=\"token operator\">!</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#回车后，立即收到了客户端发送的消息</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>client port: <span class=\"token number\">55058</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>client <span class=\"token builtin class-name\">read</span> some data is :4 val :1111</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># netstat -natp</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Active Internet connections <span class=\"token punctuation\">(</span>servers and established<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::9090                 :::*                    LISTEN      <span class=\"token number\">4626</span>/java           </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> :::111                  :::*                    LISTEN      <span class=\"token number\">1</span>/systemd   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#服务端结束阻塞后，内核缓存的数据发送给了服务端，此时与客户端正式建立 socket 连接</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>tcp6       <span class=\"token number\">0</span>      <span class=\"token number\">0</span> <span class=\"token number\">192.168</span>.137.131:9090    <span class=\"token number\">192.168</span>.137.128:55058   ESTABLISHED <span class=\"token number\">4626</span>/java</pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>root@localhost ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -p 4626</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>COMMAND  PID <span class=\"token environment constant\">USER</span>   FD   TYPE             DEVICE SIZE/OFF     NODE NAME</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>java    <span class=\"token number\">4626</span> root    7u  IPv6              <span class=\"token number\">71164</span>      0t0      TCP *:websm <span class=\"token punctuation\">(</span>LISTEN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>java    <span class=\"token number\">4626</span> root    8u  IPv6              <span class=\"token number\">72314</span>      0t0      TCP localhost.localdomain:websm-<span class=\"token operator\">></span><span class=\"token number\">192.168</span>.137.128:55058 <span class=\"token punctuation\">(</span>ESTABLISHED<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>综上所述，TCP 是面向连接的、可靠的（ack 确认机制）网络传输协议。三次握手之后，客户端与服务端均在内核开辟资源分配文件描述符，该资源就代表连接。</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210428195054.png\" alt=\"image-20210428185837128\" /></p>\n<h3 id=\"socket\"><a class=\"anchor\" href=\"#socket\">#</a> Socket</h3>\n<p>socket 是一个唯一的四元组，即客户端 IP、客户端端口、服务端 IP、服务端端口，每一个四元组在内核中会分配一个文件描述符 FD。socket 是内核级别的，TCP 建立的连接过程中会在内核开辟资源，这个资源就包括了四元组。</p>\n<p>服务端与客户端在建立连接的过程中，先各自在内核中开辟资源分配文件描述符，随后快速完成三次握手建立双方的连接</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/20210505115111.png\" alt=\"image-20210505115108320\" /></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">strace</span> -ff -o out 命令 <span class=\"token comment\">#跟踪命令执行过程中的系统调用过程</span></pre></td></tr></table></figure><figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#使用 netstat -natp 查看连接状态时，其中 LISTEN 的状态需要在内核中完成以下系统调用过程</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>socket <span class=\"token operator\">=</span> fd3</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>bind<span class=\"token punctuation\">(</span>fd3,port<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>listen<span class=\"token punctuation\">(</span>fd3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>accept<span class=\"token punctuation\">(</span>fd3,<span class=\"token punctuation\">)</span><span class=\"token comment\">#阻塞等待客户端连接</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>recv<span class=\"token punctuation\">(</span>fd5<span class=\"token punctuation\">)</span><span class=\"token comment\">#阻塞读取客户端消息</span></pre></td></tr></table></figure><h3 id=\"socket底层调用函数查看\"><a class=\"anchor\" href=\"#socket底层调用函数查看\">#</a> socket 底层调用函数查看</h3>\n<pre><code>man 2 socket #返回文件描述符，如socket=fd3\n \t  bind #绑定文件描述符以及端口，bind(fd3, 8090)\n      listen #监听描述符，listen(fd3)，此时使用 netstat -natp 可以看到0.0.0.0:8090 0.0.0.0.* LISTEN\n\t  accept #阻塞等待客户端连接，accept(fd3,)，比如客户端以文件描述符fd5来连接fd3，两者通过文件描述符交换消息\n\t  recv #阻塞接收客户端的消息，比如从文件描述符fd5来接收客户端的消息recv(fd5,)\n</code></pre>\n<p>使用克隆来解决以上的阻塞，将 accept 与 recv 分开，accept 工作在主线程且只负责接收客户端连接，recv 工作在克隆线程且只负责接收客户端消息。也就是说只要 accept 了一个客户端，那么就会 clone 出一个对应的子线程去接收该客户端的消息，防止 recv 阻塞读取客户端消息时影响 accept 接收新的客户端连接。但 clone 的同时也会拖慢下个客户端连接的时间（只有本次 clone 完成后才会允许下一个客户端连接进来），这也是 BIO 慢的原因（即内核本身的原因），所以引进了 NIO。可以通过 socket 的参数 SOCK_NONBLOCK 来设置监听文件描述符以及客户端连接描述符为非阻塞。</p>\n<h3 id=\"c10k问题\"><a class=\"anchor\" href=\"#c10k问题\">#</a> c10k 问题</h3>\n<p>c10k 问题 <span class=\"exturl\" data-url=\"aHR0cDovL2tlZ2VsLmNvbS9jMTBrLmh0bWw=\">http://kegel.com/c10k.html</span></p>\n<p>NIO 的优势是可以使用一个线程来解决 N 个 IO 的连接，但是随着客户端连接数量的增多，服务端循环接收客户端消息时（recv (fd,)）的复杂度提高，为 O (n)，这其中有大量的无意义的循坏去进行系统调用 recv，即无意义的内核态与用户态之间的切换，造成资源的浪费，而多路复用器可以较好的解决这个问题。</p>\n<p>客户端</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">C10Kclient</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">></span></span> clients <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token class-name\">InetSocketAddress</span> serverAddr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.150.11\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 端口号的问题：65535</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">//  windows</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">65000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token class-name\">SocketChannel</span> client1 <span class=\"token operator\">=</span> <span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token class-name\">SocketChannel</span> client2 <span class=\"token operator\">=</span> <span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                linux 中你看到的连接就是：</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                client...port: 10508</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                client...port: 10508</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                 */</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                client1<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.150.1\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token comment\">//  192.168.150.1：10000   192.168.150.11：9090</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                client1<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>serverAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                clients<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>client1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                client2<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"192.168.110.100\"</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token comment\">//  192.168.110.100：10000  192.168.150.11：9090</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                client2<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>serverAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                clients<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>client2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clients \"</span><span class=\"token operator\">+</span> clients<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>服务端</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Socket</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketIOPropertites</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">//server socket listen property:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> RECEIVE_BUFFER <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> SO_TIMEOUT <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> REUSE_ADDR <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> BACK_LOG <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">//client socket listen property on server endpoint:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_KEEPALIVE <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_OOB <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_REC_BUF <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_REUSE_ADDR <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_SEND_BUF <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_LINGER <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_LINGER_N <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> CLI_TIMEOUT <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> CLI_NO_DELAY <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    StandardSocketOptions.TCP_NODELAY</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    StandardSocketOptions.SO_KEEPALIVE</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    StandardSocketOptions.SO_LINGER</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    StandardSocketOptions.SO_RCVBUF</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    StandardSocketOptions.SO_SNDBUF</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    StandardSocketOptions.SO_REUSEADDR</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token class-name\">ServerSocket</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServerSocket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> BACK_LOG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">setReceiveBufferSize</span><span class=\"token punctuation\">(</span>RECEIVE_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">setReuseAddress</span><span class=\"token punctuation\">(</span>REUSE_ADDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">setSoTimeout</span><span class=\"token punctuation\">(</span>SO_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"server up use 9090!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                <span class=\"token comment\">// System.in.read ();  // 分水岭：</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token class-name\">Socket</span> client <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 阻塞的，没有 -1  一直卡着不动  accept (4,</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client port: \"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setKeepAlive</span><span class=\"token punctuation\">(</span>CLI_KEEPALIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setOOBInline</span><span class=\"token punctuation\">(</span>CLI_OOB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setReceiveBufferSize</span><span class=\"token punctuation\">(</span>CLI_REC_BUF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setReuseAddress</span><span class=\"token punctuation\">(</span>CLI_REUSE_ADDR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setSendBufferSize</span><span class=\"token punctuation\">(</span>CLI_SEND_BUF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setSoLinger</span><span class=\"token punctuation\">(</span>CLI_LINGER<span class=\"token punctuation\">,</span> CLI_LINGER_N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setSoTimeout</span><span class=\"token punctuation\">(</span>CLI_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">setTcpNoDelay</span><span class=\"token punctuation\">(</span>CLI_NO_DELAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token comment\">//BIO 时需要额外的线程去读写客户端</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token comment\">//client.read   // 阻塞   没有  -1 0</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                                <span class=\"token class-name\">InputStream</span> in <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                                <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                                <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                                    <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client read some data is :\"</span> <span class=\"token operator\">+</span> num <span class=\"token operator\">+</span> <span class=\"token string\">\" val :\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client readed nothing!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                                        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client readed -1...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                                        client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                server<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>客户端 192.168.110.100、192.168.150.1 同时去连接服务端 192.168.150.11，当服务端给 192.168.110.100 回复时无法建立连接，因为和服务端的网关不同，此时可以在服务端加一条路由规则，使得客户端 192.168.110.100 的网关和服务端能建立连接</p>\n<pre><code>route add -host 192.168.110.100 gw 192.168.150.1\nroute -n\n</code></pre>\n<h2 id=\"nio\"><a class=\"anchor\" href=\"#nio\">#</a> NIO</h2>\n<p>NIO 中的 N 在 JDK 指的是 New IO，在 Linux 操作系统中指的是 NONBLOCKING，即非阻塞</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StandardSocketOptions</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketNIO</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">></span></span> clients <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">ServerSocketChannel</span> ss <span class=\"token operator\">=</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 服务端开启监听：接受客户端</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        ss<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span><span class=\"token number\">9090</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        ss<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 重点，将服务端设置为非阻塞，即 NIO，  OS  NONBLOCKING!!!  // 只让接受客户端  不阻塞。此处设置的是 listen 阶段的 socket 不阻塞。</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">//        ss.setOption(StandardSocketOptions.TCP_NODELAY, false);</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">//        StandardSocketOptions.TCP_NODELAY</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//        StandardSocketOptions.SO_KEEPALIVE</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//        StandardSocketOptions.SO_LINGER</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">//        StandardSocketOptions.SO_RCVBUF</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//        StandardSocketOptions.SO_SNDBUF</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">//        StandardSocketOptions.SO_REUSEADDR</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token comment\">// 接受客户端的连接</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> ss<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 由于以上设置了 ss.configureBlocking (false)，所以不会阻塞</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token comment\">//accept  调用内核了：没有客户端连接进来，返回值？在 BIO 的时候一直卡着，没有返回值，但是在 NIO ，不卡着，返回 - 1（操作系统层面），NULL（java 层面）</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\">// 如果来客户端的连接，accept 返回的是这个客户端的 fd（操作系统层面），client  object（java 层面）</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token comment\">//NONBLOCKING 就是代码能往下走了，只不过有不同的情况</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>client <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>             <span class=\"token comment\">//   System.out.println(\"null.....\");</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 为 false 时，接收已经连接的客户端的消息不会阻塞，每个客户端可以直接发送消息</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 重点，将客户端设置为非阻塞，即 NIO，  socket（服务端的 listen socket&lt; 连接请求三次握手后，往我这里扔，我去通过 accept 得到  连接的 socket>，连接 socket&lt; 连接后的数据读写使用的 > ）。此处是将已经连接的 socket 设置为不阻塞，使得读取消息时不阻塞。</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">socket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client..port: \"</span> <span class=\"token operator\">+</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                clients<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocateDirect</span><span class=\"token punctuation\">(</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 可以在堆里   堆外</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token comment\">// 遍历已经链接进来的客户端能不能读写数据？可以的</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token comment\">//BIO 时 accept 客户端连接后，需要用另外的线程去接收客户端的消息，现在 NIO 只需要一个线程既可以接收客户端的连接，又可以接收客户端的消息</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span> c <span class=\"token operator\">:</span> clients<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 串行化！！！！  多线程！！</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// >0  -1  0   // 不会阻塞</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> aaa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    <span class=\"token class-name\">String</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>aaa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">socket</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>执行以上 c10k 的客户端代码来连接该服务端，可以看到客户端的连接数量取决于每个 cpu 内核可打开的文件描述符数量（比如四核八进程可打开的文件描述符数量为 4x8x1024）</p>\n<pre><code class=\"language-sh\">[root@localhost ~]# ulimit -a\ncore file size          (blocks, -c) unlimited\ndata seg size           (kbytes, -d) unlimited\nscheduling priority             (-e) 0\nfile size               (blocks, -f) unlimited\npending signals                 (-i) 10995\nmax locked memory       (kbytes, -l) 16384\nmax memory size         (kbytes, -m) unlimited\nopen files                      (-n) 1024 #单个内核（进程）可打开的文件描述符数量，默认为1024\npipe size            (512 bytes, -p) 8\nPOSIX message queues     (bytes, -q) 819200\nreal-time priority              (-r) 0\nstack size              (kbytes, -s) 8192\ncpu time               (seconds, -t) unlimited\nmax user processes              (-u) 10995\nvirtual memory          (kbytes, -v) unlimited\nfile locks                      (-x) unlimited\n[root@localhost ~]# ulimit -SHn 500000 #设置单个内核可以打开五十万描述符，但其实无法达到这么多，受file-max限制\n[root@localhost ~]# ulimit -n\n500000\n\n#内核级别的文件描述符数量，随着内存的增大而增大，1GB大约10万描述符\n[root@localhost ~]# cat /proc/sys/fs/file-max\n279691\n\n</code></pre>\n<p>虽然单进程的默认文件描述符数量为 1024，但是 root 用户会突破该限制，普通用户则不会</p>\n<h3 id=\"单线程的多路复用器\"><a class=\"anchor\" href=\"#单线程的多路复用器\">#</a> 单线程的多路复用器</h3>\n<p>多路复用器的底层是 epoll，相对于原生的 NIO 来说性能会有所提高，而 Netty 是多线程的多路复用器。多路复用器是指多个 IO 连接复用一个系统调用来传递 IO 状态（然后程序自己对有状态的 IO 进行读写，也就是说多路复用器传递的是各个 IO 连接的状态），而不是一个连接占用一个系统调用，很大程度上减少了用户态与内核态之间的切换。这样，对于程序来说，IO 模型就是同步的（即 IO 连接是同步的，但对 IO 读取到的数据的处理可能是异步的）。之前在程序中需要循环查看是否由客户端发送信息（如果有，则会返回连接的文件描述符），现在变为了让多路复用器去询问连接的状态，即是否准备好了文件描述符来进行读写。</p>\n<p>同步：程序自己的读写</p>\n<p>异步：由 kernel 完成向 buffer 的读写，程序访问 buffer 获取数据</p>\n<p>阻塞：BLOCKING</p>\n<p>非阻塞：NONBLOCKING</p>\n<p>同步阻塞：程序自己读取，调用了方法一直等待有效返回结果</p>\n<p>同步非阻塞：程序自己读取，调用方法一瞬间，给出是否读到（自己要解决下一次啥时候再去读）</p>\n<p>异步阻塞：</p>\n<p>异步非阻塞：无意义</p>\n<p>多路复用器可以是 SELECT、POLL、EPOLL，都是同步非阻塞模型。Linux 目前没有内核级的异步解决方法。</p>\n<h3 id=\"selectpoll\"><a class=\"anchor\" href=\"#selectpoll\">#</a> SELECT/POLL</h3>\n<p>synchronous I/O multiplexing</p>\n<p>FD_SETSIZE 文件描述符数量最大为 1024，这也是 SELECT 被淘汰的原因之一，POLL 和 EPOLL 没有限制</p>\n<pre><code>  int select(int nfds, fd_set *readfds, fd_set *writefds,\n                  fd_set *exceptfds, struct timeval *timeout);\n\n\nselect()  and pselect() allow a program to monitor multiple file descriptors, waiting until one or more of the file descriptors become &quot;ready&quot; for some class of I/O operation (e.g., input possible).  A file descriptor  is considered  ready  if it is possible to perform a corresponding I/O operation (e.g., read(2) without blocking,or a sufficiently small write(2)).\n       select() can monitor only file descriptors numbers that are less than FD_SETSIZE; poll(2) does not  have  this limitation.  See BUGS.\n\n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210816191011452.png\" alt=\"image-20210816191011452\" /></p>\n<p>无论是 NIO 还是 SELECT、POLL 都是遍历所有的 IO，询问状态。只不过在 NIO 中遍历的成本是内核态与用户态间的频繁切换，而在 SELECT、POLL 中，遍历的过程只触发了一次系统调用，用户态内核态切换过程中，把 fds 传递给内核，内核重新根据用户本次调用传过来的 fds 来遍历修改状态。一个 IO 连接对应一个文件描述符。</p>\n<p>SELECT、POLL 的弊端：</p>\n<p>1、每次都要重新传递 fds</p>\n<p>2、每次内核被调用后，触发一个遍历 fds 全量的复杂度</p>\n<h4 id=\"程序调用内核过程\"><a class=\"anchor\" href=\"#程序调用内核过程\">#</a> 程序调用内核过程</h4>\n<p>软中断：当程序调用内核时，会由 CPU 触发一个中断指令，然后去查询中断向量表进行相应的回调</p>\n<p>硬中断：如时钟中断</p>\n<p>IO 中断：IO 设备（网卡、键盘、鼠标等）</p>\n<p>当中断来了后（对于程序来说，R/W 就是一次 IO 中断，那么就会触发 epoll_wait）会有相应的回调以及事件，在 EPOLL 之前，回调只是完成了将网卡发来的数据，走内核网络协议栈最终关联到 FD 的 buffer。所以，某一时间程序询问内核某些 FD 是否可读写时会有状态返回。如果，内核在回调处理中加入额外的处理（EPOLL 在内核中开辟了红黑树空间以及 list，红黑树用来存储 FD，如果 FD 可读写，那么就放在 list 中供程序直接调用，程序不用再遍历每个 FD 询问状态），那么就是 EPOLL。</p>\n<h3 id=\"epoll\"><a class=\"anchor\" href=\"#epoll\">#</a> EPOLL</h3>\n<h4 id=\"epoll组成\"><a class=\"anchor\" href=\"#epoll组成\">#</a> EPOLL 组成</h4>\n<pre><code class=\"language-sh\">[root@localhost ~]# man epoll\nNAME\n       epoll - I/O event notification facility\n\nSYNOPSIS\n       #include &lt;sys/epoll.h&gt;\n\nDESCRIPTION\n       The epoll API performs a similar task to poll(2): monitoring multiple file descriptors to see if I/O is possi‐\n       ble on any of them.  The epoll API can be used either as an edge-triggered or a level-triggered interface  and\n       scales  well  to large numbers of watched file descriptors.  The following system calls are provided to create\n       and manage an epoll instance:\n\n       *  epoll_create(2) creates a new epoll instance and returns a file  descriptor  referring  to  that  instance.\n          (The more recent epoll_create1(2) extends the functionality of epoll_create(2).)\n\n       *  Interest  in  particular file descriptors is then registered via epoll_ctl(2).  The set of file descriptors\n          currently registered on an epoll instance is sometimes called an epoll set.\n\n       *  epoll_wait(2) waits for I/O events, blocking the calling thread if no events are currently available.\n\n</code></pre>\n<p><strong>epoll_create</strong></p>\n<p>当服务端程序进行完 listen 后就调用 epoll_create，然后返回一个文件描述符。epoll_create 在内核中开辟了空间，用于存放红黑树，而红黑树存放的就是客户端连接的 FD。该过程在建立连接时只会调用一次。</p>\n<pre><code class=\"language-sh\">[root@localhost ~]# man 2 epoll_create\n\nNAME\n       epoll_create, epoll_create1 - open an epoll file descriptor\n\nSYNOPSIS\n       #include &lt;sys/epoll.h&gt;\n\n       int epoll_create(int size);\n       int epoll_create1(int flags);\n\nDESCRIPTION\n       epoll_create()  creates a new epoll(7) instance.  Since Linux 2.6.8, the size argument is ignored, but must be\n       greater than zero; see NOTES below.\n\n       epoll_create() returns a file descriptor referring to the new epoll instance.  This file  descriptor  is  used\n       for all the subsequent calls to the epoll interface.  When no longer required, the file descriptor returned by\n       epoll_create() should be closed by using close(2).  When all file descriptors referring to an  epoll  instance\n       have been closed, the kernel destroys the instance and releases the associated resources for reuse.\n\n   epoll_create1()\n       If  flags  is  0, then, other than the fact that the obsolete size argument is dropped, epoll_create1() is the\n       same as epoll_create().  The following value can be included in flags to obtain different behavior:\n\n       EPOLL_CLOEXEC\n              Set the close-on-exec (FD_CLOEXEC) flag on the  new  file  descriptor.   See  the  description  of  the\n              O_CLOEXEC flag in open(2) for reasons why this may be useful.\n\nRETURN VALUE\n       On  success,  these system calls return a nonnegative file descriptor.  On error, -1 is returned, and errno is\n       set to indicate the error.\n\n</code></pre>\n<p><strong>epoll_ctl</strong></p>\n<p>该过程会被频繁调用，用来在 epoll_create 创建的红黑树中添加或移除 FD，此外还会向 epoll 注册 fd 的读写等事件</p>\n<pre><code class=\"language-sh\">[root@localhost ~]# man 2 epoll_ctl\n\nNAME\n       epoll_ctl - control interface for an epoll file descriptor\n\nSYNOPSIS\n       #include &lt;sys/epoll.h&gt;\n\t\t# 客户端fd 操作类型（add、mod、del）服务端fd 事件（读写）\n       int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);\n\nDESCRIPTION\n       This system call performs control operations on the epoll(7) instance referred to by the file descriptor epfd.\n       It requests that the operation op be performed for the target file descriptor, fd.\n\n       Valid values for the op argument are:\n\n       EPOLL_CTL_ADD\n              Register the target file descriptor fd on the epoll instance referred to by the  file  descriptor  epfd\n              and associate the event event with the internal file linked to fd.\n\n       EPOLL_CTL_MOD\n              Change the event event associated with the target file descriptor fd.\n\n       EPOLL_CTL_DEL\n              Remove  (deregister)  the  target  file descriptor fd from the epoll instance referred to by epfd.  The\n              event is ignored and can be NULL (but see BUGS below).\n\n</code></pre>\n<p><strong>epoll_wait</strong></p>\n<p>当中断发生时，网卡将数据写入服务端 FD 的 buffer 中，同时调用 epoll_wait 由内核中的红黑树空间向另一个内核空间（链表）中迁移已经建立连接的服务端的 FD。这样做的好处是，客户端下次连接时直接从链表中获取服务端的 FD，规避了 SELECT 多路复用器对 FD 的全量遍历（包括已建立连接和未建立连接的 FD）。epoll_wait 调用之后，程序仍然需要自己调用 accept、recv</p>\n<pre><code class=\"language-sh\">[root@localhost ~]# man 2 epoll_wait\nNAME\n       epoll_wait, epoll_pwait - wait for an I/O event on an epoll file descriptor\n\nSYNOPSIS\n       #include &lt;sys/epoll.h&gt;\n\n       int epoll_wait(int epfd, struct epoll_event *events,\n                      int maxevents, int timeout);\n       int epoll_pwait(int epfd, struct epoll_event *events,\n                      int maxevents, int timeout,\n                      const sigset_t *sigmask);\n\nDESCRIPTION\n       The  epoll_wait()  system  call  waits  for events on the epoll(7) instance referred to by the file descriptor\n       epfd.  The memory area pointed to by events will contain the events that will be available for the caller.  Up\n       to maxevents are returned by epoll_wait().  The maxevents argument must be greater than zero.\n\n       The  timeout  argument  specifies  the  number of milliseconds that epoll_wait() will block.  Time is measured\n       against the CLOCK_MONOTONIC clock.  The call will block until either:\n\n       *  a file descriptor delivers an event;\n\n       *  the call is interrupted by a signal handler; or\n\n       *  the timeout expires.\n\n       Note that the timeout interval will be rounded up to the  system  clock  granularity,  and  kernel  scheduling\n       delays  mean  that  the  blocking  interval  may overrun by a small amount.  Specifying a timeout of -1 causes\n       epoll_wait() to block indefinitely, while specifying a timeout equal to  zero  cause  epoll_wait()  to  return\n       immediately, even if no events are available.\n\n</code></pre>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210817173527782.png\" alt=\"image-20210817173527782\" /></p>\n<pre><code># 一个用户允许的fd连接数\ncat proc/sys/epoll/max_user_watches\n</code></pre>\n<h3 id=\"java对于epoll的抽象\"><a class=\"anchor\" href=\"#java对于epoll的抽象\">#</a> Java 对于 EPOLL 的抽象</h3>\n<p>Java 中对于 EPOLL 的实现是 java.nio.channels.Selector，但是该实现并未实现像如 epoll_ctl 中所有的事件，因为 Java 要考虑到跨平台的移植性问题。</p>\n<h4 id=\"单线程\"><a class=\"anchor\" href=\"#单线程\">#</a> 单线程</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketMultiplexingSingleThreadv1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">ServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token comment\">//linux 中的多路复用器（select、poll、epoll）</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token keyword\">private</span> <span class=\"token class-name\">Selector</span> selector <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     * 服务端初始化</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>           server <span class=\"token operator\">=</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>           <span class=\"token comment\">// 非阻塞，NIO</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>           server<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>           server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>           <span class=\"token comment\">//select、poll、epoll，linux 优先选择 epoll，可以通过启动参数 - D 指定</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>           <span class=\"token comment\">// 如果是在 epoll 模型下，此处相当于 epoll_create，如 epoll_create (fd4</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>           selector <span class=\"token operator\">=</span> <span class=\"token class-name\">Selector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>           <span class=\"token comment\">// 此时 server 处于 listen (fd) 状态，将 server 注册在多路复用器，并使多路复用器开启 accept 事件</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>           <span class=\"token comment\">// 如果是 select、poll 模型，则在 jvm 里开辟一个数组，将接收到的客户端的 fd 放进去，如 fd3</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>           <span class=\"token comment\">// 如果是 epoll 模型，相当于 epoll_ctl (fd3,ADD,fd4,EPOLL_IN)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>           server<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_ACCEPT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>           e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>     * 启动服务</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>       <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>       <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务启动了...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>       <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>           <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>               <span class=\"token comment\">//1、调用多路复用器</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>               <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>               <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"keys=\"</span> <span class=\"token operator\">+</span> keys<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>               <span class=\"token comment\">// 如果是 select、poll 模型，那么 selector.select () 调用的是内核的 select (fd) 或 poll (fd)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>               <span class=\"token comment\">// 如果是 epoll 模型，那么 selector.select ()（如果大于 0，代表有 IO 时间，则触发 IO 中断）代表触发了中断，调用的是 epoll_wait，大于 0 代表有客户端 fd 回调了事件，如读写事件</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>               <span class=\"token comment\">// 本质上，是注册在多路复用器的 fd（客户端 fd）触发了回调事件，如读写事件</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>               <span class=\"token comment\">// 参数：超时时间默认 500ms，如果为 0，则代表阻塞；selector.wakeup () 唤醒阻塞</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>               <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//fd 是否有事件触发</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                   <span class=\"token comment\">// 返回有状态的 fd 集合</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                   <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> selectionKeys <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">.</span><span class=\"token function\">selectedKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                   <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> iterator <span class=\"token operator\">=</span> selectionKeys<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                   <span class=\"token comment\">// 无论是哪种多路复用器，这里只能获取到 fd 的状态，程序需要自己处理 fd 的 R/W</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                   <span class=\"token comment\">//socket 的状态分为两种：一是处于 listen 状态等待客户端连接（accept），二是处于 R/W 状态</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                   <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iterator<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                       <span class=\"token class-name\">SelectionKey</span> key <span class=\"token operator\">=</span> iterator<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                       <span class=\"token comment\">// 处理过的 fd 后就从集合移除，避免重复处理（并不是移除内核中的 fd）</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                       iterator<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isAcceptable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                           <span class=\"token comment\">// 可以 accept 一个新的 fd 连接，那么如何处理新的 fd 连接呢？</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                           <span class=\"token comment\">// 对于 select、poll 模型，由于他们在内核中没有空间，所以就将新的 fd 放在 listen 时期 jvm 开辟的数组中</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                           <span class=\"token comment\">// 对于 epoll 模型，会由 epoll_ctl (fd3,ADD,fd4,EPOLL_IN) 将新的 fd 注册在内核开辟的红黑树空间中</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                           <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isReadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                           <span class=\"token comment\">// 多个 fd 可读时，该方法可能会阻塞，导致无法处理新的 fd 连接</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                           <span class=\"token comment\">// 为此，提出了 IO threads 去专注处理读写，而此处只负责将可读的 fd 交给 IO threads。</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                           <span class=\"token comment\">// 将 IO 和处理解耦，提高并发性</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                           <span class=\"token function\">readWriteHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>               <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>           <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>     * 新的客户端连接处理</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>     * @param key</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token class-name\">ServerSocketChannel</span> ssc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token comment\">//  接收新的 fd 注册</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> ssc<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token comment\">//fd 用来在 channel 中读写的 buffer</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">8192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token comment\">// 和服务端一样，客户端也只与多路复用器打交道，在多路复用器中注册自己的 fd 状态</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token comment\">// 如果是 select、poll 模型，则在 jvm 里开辟一个数组，将接收到的客户端端的 fd 放进去，如 fd3</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token comment\">// 如果是 epoll 模型，相当于 epoll_ctl (fd3,ADD,fd4,EPOLL_IN)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token comment\">// 同时注册写事件</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_READ<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新客户端连接：\"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>     * 读写客户端</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>     * @param key</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readWriteHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>        buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>        <span class=\"token keyword\">int</span> read <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                <span class=\"token comment\">// 读</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                read <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                    <span class=\"token comment\">// 反转，服务端将客户端发送的内容写回去给客户端</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">hasRemaining</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                        <span class=\"token comment\">// 写</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                    <span class=\"token comment\">//-1 代表客户端连接断开，此时服务端如果没有响应客户端的连接断开，那么四次挥手将不完全</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                    client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        <span class=\"token class-name\">SocketMultiplexingSingleThreadv1</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SocketMultiplexingSingleThreadv1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>        service<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre><code class=\"language-sh\">#使用poll多路复用器\n#演示客户端主动断开连接，且服务端不做处理\n[root@localhost socket-test]# javac SocketMultiplexingSingleThreadv1.java &amp;&amp; strace -ff -o poll java -Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.PollSelectorProvider SocketMultiplexingSingleThreadv1\n\n\n[root@localhost socket-test]# nc localhost 9090\nsgsfgsdg\nsgsfgsdg\n^C\n[root@localhost socket-test]# \n\n[root@localhost socket-test]# netstat -natp\n#由于缺少两次握手，所以客户端处于FIN_WAIT2 ，服务端处于CLOSE_WAIT \nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name  \ntcp6       0      0 ::1:40288               ::1:9090                FIN_WAIT2   -                   \ntcp6       0      0 ::1:9090                ::1:40288               CLOSE_WAIT  3859/java \n\n\n\n#使用epoll多路复用器（默认使用epoll）\n#客户端断开，服务端主动处理\n[root@localhost socket-test]# javac SocketMultiplexingSingleThreadv1.java &amp;&amp; strace -ff -o epoll java SocketMultiplexingSingleThreadv1\n[root@localhost ~]# nc localhost 9090\nsggdg\n[root@localhost socket-test]# netstat -natp\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name \ntcp6       0      0 ::1:40292               ::1:9090                ESTABLISHED 5460/nc             \ntcp6       0      0 ::1:9090                ::1:40292               ESTABLISHED 5441/java  \n[root@localhost ~]# lsof -p 5441\nCOMMAND  PID USER   FD      TYPE             DEVICE SIZE/OFF     NODE NAME\njava    5441 root   10u     IPv6              82376      0t0      TCP localhost:websm-&gt;localhost:40294 (ESTABLISHED)\n\n#断开客户端连接\n[root@localhost ~]# nc localhost 9090\nsggdg^C\n[root@localhost ~]# \n[root@localhost socket-test]# netstat -natp\n#客户端断开后，由于服务端程序做了主动关闭处理，服务端处于CLOSED瞬时状态后又继续处于LISTEN状态。客户端处于TIME_WAIT 状态，2MSL后，客户端将彻底断开。在TIME_WAIT没有结束前，内核中的socket四元组资源仍然被占用，其他连接无法使用相同的四元组资源，所以TIME_WAIT会消耗四元组规则。\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name \ntcp6       0      0 :::9090                 :::*                    LISTEN      5441/java                 \ntcp6       0      0 ::1:40292               ::1:9090                TIME_WAIT   - \n\n\n[root@localhost ~]# sysctl -a | grep reuse\nnet.ipv4.tcp_tw_reuse = 2 #将该值设置为1可以快速重复使用已经断开连接的客户端端口\n\n</code></pre>\n<p>以上通过 strace 追踪执行过程的日志中可以对应到 java 代码</p>\n<pre><code class=\"language-sh\">OS:POLL  jdk  用户空间保存了fd\nsocket(PF_INET, SOCK_STREAM, IPPROTO_IP) = 4 #server = ServerSocketChannel.open();服务端socket获得文件描述符fd4\nfcntl(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0  #server.configureBlocking(false);设置服务端accept为非阻塞\nbind(4, &#123;sa_family=AF_INET, sin_port=htons(9090) #将9090端口绑定到fd4\nlisten(4, 50)\npoll([&#123;fd=5, events=POLLIN&#125;, &#123;fd=4, events=POLLIN&#125;], 2, -1) = 1 #server.register(selector, SelectionKey.OP_ACCEPT);此处发生了系统调用poll；将服务端的文件描述符fd4放在jvm开辟的数组（fd5）中\naccept(4,    = 7  #SocketChannel client = ssc.accept();接收新的客户端fd7\nfcntl(7, F_SETFL, O_RDWR|O_NONBLOCK) #client.configureBlocking(false);设置接收客户端消息recv为非阻塞\npoll([&#123;fd=5, events=POLLIN&#125;, &#123;fd=4, events=POLLIN&#125;, &#123;fd=7, events=POLLIN&#125;], 3, -1)  = 1 #client.register(selector, SelectionKey.OP_ACCEPT);将新连接的fd继续放在jvm开辟的数组中\n#while (selector.select() &gt; 0);也会触发系统调用poll，因为其触发了系统调用poll中的事件（读写、添加、删除）\n</code></pre>\n<pre><code class=\"language-sh\">OS:EPOLL 内核开辟空间，保存fd\nsocket(PF_INET, SOCK_STREAM, IPPROTO_IP) = 4\nfcntl(4, F_SETFL, O_RDWR|O_NONBLOCK)    = 0\nbind(4, &#123;sa_family=AF_INET, sin_port=htons(9090)\nlisten(4, 50)\n\nepoll_create(256) = 7 #selector = Selector.open();epoll开辟内核空间，对应的文件描述符为fd7\nepoll_ctl(7, EPOLL_CTL_ADD, 4) #server.register(selector, SelectionKey.OP_ACCEPT);将服务端的文件描述符fd4添加到epoll开辟的内核空间fd7\nepoll_wait(7, &#123;&#123;EPOLLIN, &#123;u32=4, u64=2216749036554158084&#125;&#125;&#125;, 4096, -1) = 1 # while (selector.select() &gt; 0) \naccept(4  =8 #新连接的client的fd8\nfcntl(8, F_SETFL, O_RDWR|O_NONBLOCK)#client.configureBlocking(false);设置接收客户端消息recv为非阻塞\nepoll_ctl(7, EPOLL_CTL_ADD, 8, &#123;EPOLLIN, #client.register(selector, SelectionKey.OP_ACCEPT);将新连接的fd8添加到epoll开辟的内核空间fd7\nepoll_wait(7, &#123;&#123;EPOLLIN,&#123;u32=8,u64=2302962838504734728&#125;&#125;&#125;,4096,-1)=1 # while (selector.select() &gt; 0);客户端fd8有数据进来，服务端产生中断去调用相应的read事件读取数据，读取完之后再回到中断现场从内核空间拿出中断时迁移（红黑树-&gt;链表）的服务端的fd，继续等到客户端连接\n</code></pre>\n<p>单独注册写事件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Selector</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketMultiplexingSingleThreadv1_1</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Selector</span> selector <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//linux 多路复用器（select poll epoll）</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            server <span class=\"token operator\">=</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            selector <span class=\"token operator\">=</span> <span class=\"token class-name\">Selector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  select  poll  *epoll</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_ACCEPT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务器启动了。。。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//                Set&lt;SelectionKey> keys = selector.keys();</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">//                System.out.println(keys.size()+\"   size\");</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token comment\">// 由于读事件时注册了写事件，那么第二次循环进来时会发现 selector 中写事件返回大于 0，所以可以执行 writeHandler (key);</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> selectionKeys <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">.</span><span class=\"token function\">selectedKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> iter <span class=\"token operator\">=</span> selectionKeys<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                        <span class=\"token class-name\">SelectionKey</span> key <span class=\"token operator\">=</span> iter<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                        iter<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isAcceptable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                            <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isReadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                            <span class=\"token function\">readHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 处理了 read 事件并注册这个 key 的 write 事件</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isWritable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                            <span class=\"token comment\">// 写事件，send-queue 只要是空的（有空间），就一定会给你返回可以写的事件，就会重复调起以下的 writeHandler (key);</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                            <span class=\"token comment\">// 什么时候写？多路复用器能不能写是参考 send-queue 有没有空间</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                            <span class=\"token comment\">//1，准备好要写什么</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                            <span class=\"token comment\">//2，关心 send-queue 是否有空间</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                            <span class=\"token comment\">//3，所以，读 read 客户端一开始就要注册，但是 write 依赖以上关系，什么时候用什么时候注册</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                            <span class=\"token comment\">//4，如果一开始就注册了 write 的事件，进入死循环，一直调起！！！</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                            <span class=\"token function\">writeHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>     * 服务端写处理</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>     * @param key</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"write handler...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">hasRemaining</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                    client<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            key<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token class-name\">ServerSocketChannel</span> ssc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> ssc<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">8192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_READ<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新客户端：\"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>     * 服务端读处理</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>     * @param key</pre></td></tr><tr><td data-num=\"115\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read handler.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token keyword\">int</span> read <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                    read <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                    <span class=\"token comment\">// 如果客户端可读，那么客户端才注册写事件到多路复用器</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                        <span class=\"token comment\">// 注册写事件，可以在 while (selector.select () > 0) 中读到</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>                        <span class=\"token comment\">//OP_WRITE 关心 send-queue 是不是有空间，只要有空间就可以触发 OP_WRITE 写事件</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">selector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_WRITE<span class=\"token punctuation\">,</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token class-name\">SocketMultiplexingSingleThreadv1_1</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SocketMultiplexingSingleThreadv1_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>        service<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"多线程\"><a class=\"anchor\" href=\"#多线程\">#</a> 多线程</h4>\n<p>以上单线程对于读写的 fd 是一个接一个线性处理的，只要有一个 fd 处理的较慢，那么就会影响到其他 fd 的处理。为此，可以将读写事件各自放在单独的线程去处理</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Selector</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SocketMultiplexingSingleThreadv2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Selector</span> selector <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//linux 多路复用器（select poll epoll） nginx  event &#123;&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">9090</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            server <span class=\"token operator\">=</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            selector <span class=\"token operator\">=</span> <span class=\"token class-name\">Selector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  select  poll  *epoll</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_ACCEPT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token function\">initServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"服务器启动了。。。。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">//                Set&lt;SelectionKey> keys = selector.keys();</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">//                System.out.println(keys.size()+\"   size\");</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token comment\">// 注册在多路复用器的 fd（客户端 fd）触发了回调事件，如读写事件</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                    <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> selectionKeys <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">.</span><span class=\"token function\">selectedKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> iter <span class=\"token operator\">=</span> selectionKeys<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                        <span class=\"token class-name\">SelectionKey</span> key <span class=\"token operator\">=</span> iter<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                        iter<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isAcceptable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                            <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isReadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                            key<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 先在多路复用器里把 key  cancel 了（在内核中将 fd 剔除，而在操作系统中仍然存在）</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                            <span class=\"token function\">readHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 没有把 key cancel 之前，即便已抛出了线程去读取，但是在时差里，这个 key 的 read 事件会被重复触发</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isWritable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                            key<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 没有把 key cancel 之前，即便 y 抛出了线程去读取，但是在时差里，这个 key 的 write 事件会被重复触发</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                            <span class=\"token function\">writeHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"write handler...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">hasRemaining</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                    client<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">shutdownOutput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>            <span class=\"token class-name\">ServerSocketChannel</span> ssc <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> ssc<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">8192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_READ<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"新客户端：\"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"read handler.....\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>            <span class=\"token keyword\">int</span> read <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                    read <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">selector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_WRITE<span class=\"token punctuation\">,</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token class-name\">SocketMultiplexingSingleThreadv2</span> service <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SocketMultiplexingSingleThreadv2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>        service<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上程序虽然读写的 fd 不再阻塞，但是频繁调用 key.cancel () 意味着频繁调用 epoll/poll 的 DEL 事件（如果是 epoll，则调用 epoll (fd,DEL,fd)），也就意味着程序和内核之间频繁的进行用户态与内核态之间的转换，性能不是很高。</p>\n<p>无论是以上单线程还是多线程的代码，本质上就是不断去轮询多路复用器中的 fd 是否有可读可写的状态（读：内核可以判断客户端是否有消息到达，如果有那么对应的 fd 就是可读状态；写：只要内核中的 send_queue 队列为空就可以往里写，即 fd 是可写状态），如果有则进一步回调 fd 的回调事件（触发回调事件后可以自定义处理触发后的动作，如对读写的处理），只不过多线程是并行去处理回调事件被触发后的操作（如读写操作）。</p>\n<p>当有 N 个 fd 需要 R/W 处理时，可以将 N 个 fd 分组，每一组 fd 使用一个 selector，且一个 selector 单独占用一个线程，所以 selector 个数取决于线程个数（最佳线程个数是 cpu 核数或 cpu 核数 * 2）。这样每个 selector 中的 fd 是线性处理的，而多个 selector 是并行处理的，所以总体上 fd 是被并行处理的，此时就不需要再频繁调用 key.cancel () 来清理内核中的 fd，避免了内核态与用户态之间的频繁切换，大大的提高了性能，当然也可以单独拿出其中的一个 selector 专门负责接收客户端的 accept，并将接收到的 fd 分配给其他的 selector，以上做法采用了分而治之的思想。</p>\n<p><strong>代码实现</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>reactor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @Author fan</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @Date 2021-08-23 10:39</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainThread</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 不参与 IO 和业务</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">//1、创建 IO Thread (一个或多个)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\">//server 线程组</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">SelectorThreadGroup</span> boss <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectorThreadGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">//client 线程组</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">SelectorThreadGroup</span> worker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectorThreadGroup</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 混杂模式，其中一个线程既负责 accept，又负责 R/W</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//        SelectorThreadGroup stg = new SelectorThreadGroup(3);</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 使得 server 线程组 boss 持有 client 线程组 worker 的引用</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        boss<span class=\"token punctuation\">.</span><span class=\"token function\">setWorker</span><span class=\"token punctuation\">(</span>worker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">//2、将监听的 server 注册到某一个 selector，以便和客户端交互</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">//boss 中选一个线程注册 listen 后，这个被选中的线程需要持有 worker 的引用，因为该线程一旦 accept 得到</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">//client 后，需要去 worker 中获取一个线程分配给 client</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        boss<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        boss<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        boss<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token number\">7777</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        boss<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token number\">6666</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>reactor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>net<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span>atomic<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * @Author fan</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * @Date 2021-08-23 11:27</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SelectorThreadGroup</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token class-name\">SelectorThread</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> sts<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token class-name\">ServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token class-name\">AtomicInteger</span> xid <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AtomicInteger</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token class-name\">SelectorThreadGroup</span> stg <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectorThreadGroup</span> stg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stg <span class=\"token operator\">=</span> stg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token class-name\">SelectorThreadGroup</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> threadNum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        sts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectorThread</span><span class=\"token punctuation\">[</span>threadNum<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> threadNum<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            sts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SelectorThread</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">(</span>sts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> port<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            server <span class=\"token operator\">=</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            server<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token comment\">// 将 server 注册到哪个 selector？</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token function\">nextSelectorV3</span><span class=\"token punctuation\">(</span>server<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">nextSelector</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Channel</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token class-name\">SelectorThread</span> st <span class=\"token operator\">=</span> <span class=\"token function\">getSelectorThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">// 1、通过队列传递数据 消息</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        st<span class=\"token punctuation\">.</span>lbq<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">// 2、打断 SelectorThread 中的 selector.select () 阻塞，让对应的线程在唤醒 selector 后取出队列中的 server 或 client 完成在 selector 中的注册</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        st<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">//        //c 可能是 server 或 client</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">//        ServerSocketChannel s = (ServerSocketChannel) c;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">//        try &#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">//            // 由于 SelectorThread 中的 selector.select (); 是阻塞的，所以以下的 register 中的 selector 是阻塞的，可以使用 wakeup 唤醒阻塞</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">//            s.register(st.selector, SelectionKey.OP_ACCEPT);</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">//            st.selector.wakeup();</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">//        &#125; catch (ClosedChannelException e) &#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">//            e.printStackTrace();</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">//        &#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">nextSelectorV3</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Channel</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token comment\">// 将 server 注册在当前线程组 (boss 线程组) 中的一个线程中</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                <span class=\"token class-name\">SelectorThread</span> st <span class=\"token operator\">=</span> <span class=\"token function\">getSelectorThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token comment\">// 1、通过队列传递数据 消息</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                st<span class=\"token punctuation\">.</span>lbq<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token comment\">//server 线程开启后， 更新该线程的线程组</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                st<span class=\"token punctuation\">.</span><span class=\"token function\">setWorker</span><span class=\"token punctuation\">(</span>stg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token comment\">// 2、打断 SelectorThread 中的 selector.select () 阻塞，让对应的线程在唤醒 selector 后取出队列中的 server 或 client 完成在 selector 中的注册</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                st<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token comment\">// 将 client 注册在 worker 线程组中的线程</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                <span class=\"token class-name\">SelectorThread</span> st <span class=\"token operator\">=</span> <span class=\"token function\">getSelectorThreadV3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                <span class=\"token comment\">// 1、通过队列传递数据 消息</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                st<span class=\"token punctuation\">.</span>lbq<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                <span class=\"token comment\">// 2、打断 SelectorThread 中的 selector.select () 阻塞，让对应的线程在唤醒 selector 后取出队列中的 server 或 client 完成在 selector 中的注册</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                st<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">.</span><span class=\"token function\">wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token comment\">//server 、client 都需要选择一个 selector</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SelectorThread</span> <span class=\"token function\">getSelectorThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token comment\">// 取出一个 selector，每次新的 server、client 来都会轮询分配到不同的 selector</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> xid<span class=\"token punctuation\">.</span><span class=\"token function\">incrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> sts<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">return</span> sts<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>    <span class=\"token comment\">//worker 线程组中线程</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">SelectorThread</span> <span class=\"token function\">getSelectorThreadV3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token comment\">// 取出一个 selector，每次新的 server、client 来都会轮询分配到不同的 selector</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">int</span> index <span class=\"token operator\">=</span> xid<span class=\"token punctuation\">.</span><span class=\"token function\">incrementAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> stg<span class=\"token punctuation\">.</span>sts<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">return</span> stg<span class=\"token punctuation\">.</span>sts<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>reactor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>nio<span class=\"token punctuation\">.</span>channels<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Iterator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Set</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedBlockingDeque</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>concurrent<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Description</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Author fan</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Date 2021-08-23 10:40</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @Version 1.0</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SelectorThread</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ThreadLocal</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Runnable</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\">// 每个线程对应一个 selector</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\">// 每个客户端只绑定到其中一个 selector</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token class-name\">Selector</span> selector <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">//    LinkedBlockingQueue&lt;Channel> lbq = new LinkedBlockingQueue&lt;>();</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Channel</span><span class=\"token punctuation\">></span></span> lbq <span class=\"token operator\">=</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token class-name\">SelectorThreadGroup</span> stg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Channel</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">initialValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedBlockingQueue</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token class-name\">SelectorThread</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectorThreadGroup</span> stg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stg <span class=\"token operator\">=</span> stg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            selector <span class=\"token operator\">=</span> <span class=\"token class-name\">Selector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token comment\">// 1、select ();select 没有设置超时时间会阻塞，直到有文件描述符注册在多路复用器</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">//                System.out.println(Thread.currentThread().getName() + \" : before select...\" + selector.keys().size());</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">int</span> select <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">//                Thread.sleep (1000); // 非正确的解决方案</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">//                System.out.println(Thread.currentThread().getName() + \" : after select...\" + selector.keys().size());</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                <span class=\"token comment\">// 2、处理 selectkeys ();</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>select <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    <span class=\"token comment\">// 有事件</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> keys <span class=\"token operator\">=</span> selector<span class=\"token punctuation\">.</span><span class=\"token function\">selectedKeys</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">></span></span> iter <span class=\"token operator\">=</span> keys<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                        <span class=\"token class-name\">SelectionKey</span> key <span class=\"token operator\">=</span> iter<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                        iter<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isAcceptable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                            <span class=\"token comment\">// 接收客户端，要注册在哪里？如何注册？</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                            <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isReadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                            <span class=\"token function\">readHandler</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span><span class=\"token function\">isWritable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token comment\">//3、处理一些 task</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lbq<span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                    <span class=\"token comment\">// 队列是堆里的对象，堆是共享的，只有方法的逻辑、本地变量是线程隔离的，线程的栈是独立的</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    <span class=\"token class-name\">Channel</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>                    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                        c <span class=\"token operator\">=</span> lbq<span class=\"token punctuation\">.</span><span class=\"token function\">take</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"queue\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" : \"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                        <span class=\"token class-name\">ServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                        server<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_ACCEPT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" register listen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                        <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                        <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token function\">allocateDirect</span><span class=\"token punctuation\">(</span><span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                        <span class=\"token comment\">// 将 client 注册到 selector，并将 buffer 绑定到 selector</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectionKey</span><span class=\"token punctuation\">.</span>OP_READ<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" register client \"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" : readHandler...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token class-name\">ByteBuffer</span> buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">attachment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">SocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                <span class=\"token keyword\">int</span> read <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                    <span class=\"token comment\">// 将读到的内容翻转，然后直接写出</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">hasRemaining</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                        client<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                    buffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                    <span class=\"token comment\">// 客户端断开了</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"client：\"</span> <span class=\"token operator\">+</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">getRemoteAddress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" closed...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    <span class=\"token comment\">// 从多路复用器中将 fd 移除</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>                    key<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">acceptHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectionKey</span> key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" : acceptHandler...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token class-name\">ServerSocketChannel</span> server <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ServerSocketChannel</span><span class=\"token punctuation\">)</span> key<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>            <span class=\"token class-name\">SocketChannel</span> client <span class=\"token operator\">=</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>            client<span class=\"token punctuation\">.</span><span class=\"token function\">configureBlocking</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>            <span class=\"token comment\">// 将连接的客户端注册到多路复用器中去处理</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token comment\">//            stg.nextSelector(client);</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>            stg<span class=\"token punctuation\">.</span><span class=\"token function\">nextSelectorV3</span><span class=\"token punctuation\">(</span>client<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWorker</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SelectorThreadGroup</span> stgWorker<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stg <span class=\"token operator\">=</span> stgWorker<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"三次握手四次挥手\"><a class=\"anchor\" href=\"#三次握手四次挥手\">#</a> 三次握手四次挥手</h3>\n<p>以上的状态是四次挥手过程中的状态：</p>\n<p>1、客户端向服务端发送 FIN 想要断开连接，客户端处于 FIN WAIT1 状态，此时服务端处于 CLOSE_WAIT1 状态</p>\n<p>2、服务端向客户端回复第一条消息 FIN_ACK，请稍等（服务端要确认把业务数据全部传完给客户端），此时客户端处于 FIN WAIT2</p>\n<p>3、服务端向客户端回复第二条消息 FIN，服务端已做好断开准备（确保业务数据已经发送完毕），服务端处于 LAST_ACK 状态</p>\n<p>4、客户端向服务端回复消息 ACK，客户端进入 TIME_WAIT 状态，等待 2MSL（报文活动时长的 2 倍，一般为 30s），确保 ACK 到达服务端，如果在 2MSL 后，服务端没有响应，那么就证明服务端收到了客户端的 ACK，且服务端关闭了，服务端进入瞬时状态 CLOSED 后又继续处于 LISTEN 状态。如果 2MSL 内，服务端没有收到客户端的 ACK，那么服务端会再次发送 FIN 给客户端，告诉客户端服务端已做好断开准备。</p>\n<p>此外，服务端也可以主动发起断开请求，那么在四次挥手的最后一步，服务端也会进入 2MSL 的等待状态，确保客户端收到自己的消息后才可以最终关闭连接。</p>\n<p>以下概念参考自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYmotbXItbGkvcC8xMTEwNjM5MC5odG1s\">https://www.cnblogs.com/bj-mr-li/p/11106390.html</span></p>\n<table>\n<thead>\n<tr>\n<th>标志位</th>\n<th>全拼写</th>\n<th>释义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SYN</td>\n<td>synchronous</td>\n<td>请求建立连接</td>\n</tr>\n<tr>\n<td>ACK</td>\n<td>acknowledgement</td>\n<td>判定确认号 ack 是否有效，ACK=1 时有效</td>\n</tr>\n<tr>\n<td>FIN</td>\n<td>finish</td>\n<td>FIN=1 时表示发送方数据已经发送完毕，请求断开连接</td>\n</tr>\n<tr>\n<td>PSH</td>\n<td>push</td>\n<td>提示接收方立即从缓冲区把数据读走</td>\n</tr>\n<tr>\n<td>RST</td>\n<td>reset</td>\n<td>对方要求重新建立连接</td>\n</tr>\n<tr>\n<td>URG</td>\n<td>urgent</td>\n<td>紧急指针。URG=1 时，表示数据要被优先处理</td>\n</tr>\n</tbody>\n</table>\n<p>标志位的值为 1 或为 0，ack、seq 表示数据的序号，且 ack=seq+1。</p>\n<p>序列号 seq：占 4 个字节，用来标记数据段的顺序，TCP 把连接中发送的所有数据字节都编上一个序号，第一个字节的编号由本地随机产生；给字节编上序号后，就给每一个报文段指派一个序号；序列号 seq 就是这个报文段中的第一个字节的数据编号。</p>\n<p>确认号 ack：占 4 个字节，期待收到对方下一个报文段的第一个数据字节的序号；序列号表示报文段携带数据的第一个字节的编号；而确认号指的是期望接收到下一个字节的编号；因此当前报文段最后一个字节的编号 + 1 即为确认号。</p>\n<p>确认 ACK：占 1 位，仅当 ACK=1 时，确认号字段才有效。ACK=0 时，确认号无效。</p>\n<p>同步 SYN：连接建立时用于同步序号。当 SYN=1，ACK=0 时表示：这是一个连接请求报文段。若同意连接，则在响应报文段中使得 SYN=1，ACK=1。因此，SYN=1 表示这是一个连接请求，或连接接受报文。SYN 这个标志位只有在 TCP 建产连接时才会被置 1，握手完成后 SYN 标志位被置 0。</p>\n<p>终止 FIN：用来释放一个连接。FIN=1 表示：此报文段的发送方的数据已经发送完毕，并要求释放运输连接。</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210818161102760.png\" alt=\"image-20210818161102760\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vYmZhbmZhbmZhbi9pbWcvcmF3L21hc3Rlci9kb2NzaWZ5LyVFNCVCOCU4OSVFNiVBQyVBMSVFNiU4RiVBMSVFNiU4OSU4QiVFNSU5QiU5QiVFNiVBQyVBMSVFNiU4QyVBNSVFNiU4OSU4QiUyMCgxKS5wbmc=\">https://gitee.com/bfanfanfan/img/raw/master/docsify/ 三次握手四次挥手 (1).png</span>&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>以下概念参考自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUIlOUIlRTYlQUMlQTElRTYlOEMlQTUlRTYlODklOEIvNzc5NDI4Nz9mcj1hbGFkZGlu\">https://baike.baidu.com/item/ 四次挥手 / 7794287?fr=aladdin</span></p>\n<p>连接终止协议（四次挥手）</p>\n<p>由于 TCP 连接是全双工的，因此每个方向都必须单独进行关闭。这原则是当一方完成它的数据发送任务后就能发送一个 FIN 来终止这个方向的连接。收到一个 FIN 只意味着这一方向上没有数据流动，一个 TCP 连接在收到一个 FIN 后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。</p>\n<p>（1） TCP 客户端发送一个 FIN，用来关闭客户到服务器的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTYlOEQlQUUlRTQlQkMlQTAlRTklODAlODE=\">数据传送</span>。</p>\n<p>（2） 服务器收到这个 FIN，它发回一个 ACK，确认序号为收到的序号加 1。和 SYN 一样，一个 FIN 将占用一个序号。</p>\n<p>（3） 服务器关闭客户端的连接，发送一个 FIN 给客户端。</p>\n<p>（4） 客户端发回 ACK<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>确认，并将确认序号设置为收到序号加 1。</p>\n<p><strong>CLOSED</strong></p>\n<p>表示初始状态。</p>\n<p><strong>LISTEN</strong></p>\n<p>这个也是非常容易理解的一个状态，表示服务器端的某个 SOCKET 处于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclOUIlOTElRTUlOTAlQUMlRTclOEElQjYlRTYlODAlODE=\">监听状态</span>，可以接受连接了。</p>\n<p><strong>SYN_RCVD</strong></p>\n<p>这个状态表示接受到了 SYN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>，在正常情况下，这个状态是服务器端的 SOCKET 在建立 TCP 连接时的<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglODklRTYlQUMlQTElRTYlOEYlQTElRTYlODklOEI=\">三次握手</span>会话过程中的一个中间状态，很短暂，基本上用 netstat 你是很难看到这种状态的，除非你特意写了一个客户端<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlQjUlOEIlRTglQUYlOTUlRTclQTglOEIlRTUlQkElOEY=\">测试程序</span>，故意将三次 TCP 握手过程中最后一个 ACK 报文不予发送。因此这种状态时，当收到客户端的 ACK 报文后，它会进入到 ESTABLISHED 状态。</p>\n<p><strong>SYN_SENT</strong></p>\n<p>这个状态与 SYN_RCVD 遥相呼应，当客户端 SOCKET 执行 CONNECT 连接时，它首先发送 SYN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>，因此也随即它会进入到了 SYN_SENT 状态，并等待服务端的发送<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQjglODklRTYlQUMlQTElRTYlOEYlQTElRTYlODklOEI=\">三次握手</span>中的第 2 个报文。SYN_SENT 状态表示客户端已发送 SYN 报文。</p>\n<p><strong>ESTABLISHED</strong></p>\n<p>表示连接已经建立了。</p>\n<p><strong>FIN_WAIT_1</strong></p>\n<p>这个状态要好好解释一下，其实 FIN_WAIT_1 和 FIN_WAIT_2 状态的真正含义都是表示等待对方的 FIN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>。而这两种状态的区别是：FIN_WAIT_1 状态实际上是当 SOCKET 在 ESTABLISHED 状态时，它想主动关闭连接，向对方发送了 FIN 报文，此时该 SOCKET 即进入到 FIN_WAIT_1 状态。而当对方回应 ACK 报文后，则进入到 FIN_WAIT_2 状态，当然在实际的正常情况下，无论对方何种情况下，都应该马上回应 ACK 报文，所以 FIN_WAIT_1 状态一般是比较难见到的，而 FIN_WAIT_2 状态还有时常常可以用 netstat 看到。</p>\n<p><strong>FIN_WAIT_2</strong></p>\n<p>上面已经详细解释了这种状态，实际上 FIN_WAIT_2 状态下的 SOCKET，表示半连接，也即有一方要求 close 连接，但另外还告诉对方，我暂时还有点数据需要传送给你，稍后再关闭连接。</p>\n<p><strong>TIME_WAIT</strong></p>\n<p>表示收到了对方的 FIN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>，并发送出了 ACK 报文，就等 2MSL 后即可回到 CLOSED 可用状态了。如果 FIN_WAIT_1 状态下，收到了对方同时带 FIN 标志和 ACK 标志的报文时，可以直接进入到 TIME_WAIT 状态，而无须经过 FIN_WAIT_2 状态。</p>\n<p><strong>CLOSING</strong></p>\n<p>这种状态比较特殊，实际情况中应该是很少见，属于一种比较罕见的例外状态。正常情况下，当你发送 FIN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>后，按理来说是应该先收到（或同时收到）对方的 ACK 报文，再收到对方的 FIN 报文。但是 CLOSING 状态表示你发送 FIN 报文后，并没有收到对方的 ACK 报文，反而却收到了对方的 FIN 报文。什么情况下会出现此种情况呢？其实细想一下，也不难得出结论：那就是如果双方几乎在同时 close 一个 SOCKET 的话，那么就出现了双方同时发送 FIN 报文的情况，也就会出现 CLOSING 状态，表示双方都正在关闭 SOCKET 连接。</p>\n<p><strong>CLOSE_WAIT</strong></p>\n<p>这种状态的含义其实是表示在等待关闭。怎么理解呢？当对方 close 一个 SOCKET 后发送 FIN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>给自己，你系统毫无疑问地会回应一个 ACK 报文给对方，此时则进入到 CLOSE_WAIT 状态。接下来呢，实际上你真正需要考虑的事情是查看你是否还有数据发送给对方，如果没有的话，那么你也就可以 close 这个 SOCKET，发送 FIN 报文给对方，也即关闭连接。所以你在 CLOSE_WAIT 状态下，需要完成的事情是等待你去关闭连接。</p>\n<p><strong>LAST_ACK</strong></p>\n<p>这个状态还是比较容易好理解的，它是被动关闭一方在发送 FIN<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOEElQTUlRTYlOTYlODc=\"> 报文</span>后，最后等待对方的 ACK 报文。当收到 ACK 报文后，也即可以进入到 CLOSED 可用状态了。</p>\n<h2 id=\"长连接-短链接-长轮询-短轮询\"><a class=\"anchor\" href=\"#长连接-短链接-长轮询-短轮询\">#</a> 长连接、短链接、长轮询、短轮询</h2>\n<p>长连接：长连接与短连接指的是 TCP 连接，具体实现是在 HTTP 中，HTTP1.1 默认是长连接，即 Connection 的值为 keep-alive。长连接的好处是多个客户端请求（多个 HTTP 请求）可以复用同一个 TCP 连接，再次有 HTTP 请求就不会重复进行三次握手，节省了网络资源、提高了请求资源的响应速度。长连接并不是永久的连接，如果在指定超时时间内没有 HTTP 请求，那么连接会被断开进入<strong> TIME_WAIT</strong> 状态。超时时间在服务端中可以在 header 中设置。</p>\n<p>短连接：适用于 HTTP 请求不频繁的场景，无论请求是否有结果都会自动断开连接。</p>\n<p>长轮询、短轮询：场轮询与短轮询是通过服务端的变成来控制的。长轮询是指客户端去服务端请求数据，如果服务端没有数据那么就会阻塞等待直到有客户端需要的数据返回给客户端后断开。短轮询是指客户端去服务端请求数据，无论请求是否有结果都将立即返回。</p>\n",
            "tags": [
                "Java",
                "Java",
                "NIO",
                "IO",
                "socket",
                "BIO"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84",
            "url": "https://www.baiyezi.vip/Kafka-%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84",
            "title": "Kafka-整体架构",
            "date_published": "2021-08-15T10:05:22.000Z",
            "content_html": "<h2 id=\"kafka组成\"><a class=\"anchor\" href=\"#kafka组成\">#</a> kafka 组成</h2>\n<p>官网 <span class=\"exturl\" data-url=\"aHR0cDovL2thZmthLmFwYWNoZS5vcmcv\">http://kafka.apache.org/</span></p>\n<p>kafka 是一个高可用、高性能、高扩展的消息中间件，消息中间件还有 RabbitMQ、ActiveMQ 等常用中间件。</p>\n<p>由于读写分离容易出现一致性问题，所以 kafka 设计上只能在主上进行读写，从只负责备份。</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827113140000.png\" alt=\"image-20210827113140000\" /></p>\n<h3 id=\"topic与分区\"><a class=\"anchor\" href=\"#topic与分区\">#</a> topic 与分区</h3>\n<p>kafka 无法干涉消息进入 kafka 的顺序，消费者消费消息时通过偏移量 offset 来记录消费消息的进度。topic 时逻辑存在的，与业务相关，分区是物理存在的，与业务数据相关，所以一个 topic 可以被分为若干分区。</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827113404059.png\" alt=\"image-20210827113404059\" /></p>\n<h3 id=\"broker\"><a class=\"anchor\" href=\"#broker\">#</a> broker</h3>\n<p>zookeeper 负责分布式的协调，在 kafka 中负责 broker 之间的协调（主从选择）。kafka 中可以有多个 broker，一个 broker 相当于一个 jvm 进程，多个 broker 共享一个 topic，topic 中的若干分区分别被不同的 broker 所管理。所有 topic 以及分区的划分最后落地时需要一套 admin-api 来划分，admin-api 通过访问 zookeeper 来获得主从关系，从而进行划分。</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827135427726.png\" alt=\"image-20210827135427726\" /></p>\n<h3 id=\"producer-consumer\"><a class=\"anchor\" href=\"#producer-consumer\">#</a> producer、consumer</h3>\n<p>producer 负责把数据打散到不同的分区，旧版的 kafka 中，producer 从 zookeeper 中获取 broker 的信息，当数据量较大时就增加了 zookeeper 的压力，所以新版中需要手动给出 broker 的信息，producer 再通过 broker 将数据打散到 broker 中的分区。</p>\n<p>分区和 consumer 可以是 1：1，也可以是 N：1，但不允许 1：N（无法保证数据消费的有序性）</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827141326041.png\" alt=\"image-20210827141326041\" /></p>\n<h3 id=\"分组\"><a class=\"anchor\" href=\"#分组\">#</a> 分组</h3>\n<p>不同的 consumer 可以被分为不同的组，组之间的 consumer 是隔离的，producer 的数据可以被不同的组重复利用，但是一个分区的数据不能被一个组内的多个 consumer 消费</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210827142236903.png\" alt=\"image-20210827142236903\" /></p>\n<h3 id=\"offset\"><a class=\"anchor\" href=\"#offset\">#</a> offset</h3>\n<p>在 consumer 消费数据时，拿到数据可能还没有消费 offset 就丢失了，此时会导致数据的丢失；或者数据消费后 offset 没有更新，导致下次拿到相同的数据，即数据重复。这些可能的错误源于 offset 的准确性，即数据消费进度的准确性。</p>\n<p>kafka 在运行时内存中维护了自己的 offset（数据消费进度），由于是在内存中，所以断电容易丢失，因此需要持久化 offset 来维护 offset。就版本的 kafka 中将 offset 维护到了 zookeeper，但是 zookeeper 不应该参与具体业务，否则会影响分布式协调的速度，所以新版本的 kafka 自己维护了 offset（在 topic 的 metadata 中维护，topic 中的数据最终会落到磁盘），当然也可以维护在第三方如 redis、mysql，但是不建议。offset 维护的时间节点取决于业务，consumer 拉取到数据后就立即更新 offset 或者数据消费后再更新 offset，不同的时间节点决定了发生故障修复后数据是丢失或重复消费。</p>\n",
            "tags": [
                "Java",
                "Java",
                "消息中间件",
                "Kafka"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1",
            "url": "https://www.baiyezi.vip/RocketMQ-%E6%B6%88%E6%81%AF%E3%80%81%E4%BA%8B%E5%8A%A1",
            "title": "RocketMQ-消息、事务",
            "date_published": "2021-08-11T13:56:12.000Z",
            "content_html": "<h2 id=\"消息\"><a class=\"anchor\" href=\"#消息\">#</a> 消息</h2>\n<h3 id=\"消息消费模式\"><a class=\"anchor\" href=\"#消息消费模式\">#</a> 消息消费模式</h3>\n<p>消息消费模式由消费者来决定，可以由消费者设置 MessageModel 来决定消息模式。</p>\n<p>消息模式默认为集群消费模式</p>\n<pre><code> consumer.setMessageModel(MessageModel.BROADCASTING);\n consumer.setMessageModel(MessageModel.CLUSTERING);\n</code></pre>\n<h4 id=\"集群消息\"><a class=\"anchor\" href=\"#集群消息\">#</a> 集群消息</h4>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/160707_kSpS_1469576.png\" alt=\"img\" /></p>\n<p>集群消息是指<strong>集群化部署消费者</strong>，当使用集群消费模式时，MQ 认为任意一条消息只需要被集群内的任意一个消费者处理即可。</p>\n<p><strong>特点</strong></p>\n<ul>\n<li>每条消息只需要被处理一次，broker 只会把消息发送给消费集群中的一个消费者</li>\n<li>在消息重投时，不能保证路由到同一台机器上</li>\n<li>消费状态由 broker 维护</li>\n</ul>\n<h4 id=\"广播消息\"><a class=\"anchor\" href=\"#广播消息\">#</a> 广播消息</h4>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/160902_4AOI_1469576.png\" alt=\"img\" /></p>\n<p>当使用广播消费模式时，MQ 会将每条消息推送给集群内所有注册过的客户端，保证消息至少被每台机器消费一次。</p>\n<p><strong>特点</strong></p>\n<ul>\n<li>消费进度由 consumer 维护</li>\n<li>保证每个消费者消费一次消息</li>\n<li>消费失败的消息不会重投</li>\n</ul>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyContext</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">.</span>heartbeat<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageModel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumer2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">DefaultMQPushConsumer</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 过滤器: * 表示不过滤</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">registerMessageListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span> <span class=\"token function\">consumeMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">></span></span> msgs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> msg <span class=\"token operator\">:</span> msgs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token comment\">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token comment\">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token comment\">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">.</span>CONSUME_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 广播消息，其他 consumer 也可以收到消息。默认是集群模式，只可以消费一次消息</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// 集群：一组 consumer，消息只能被其中一个 consumer 消费，即消息只能被消费一次</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">// 广播：同一个 topic 内的 consumer 均可以消费，消息可以被每一个 consumer 消费</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setMessageModel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageModel</span><span class=\"token punctuation\">.</span>BROADCASTING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Consumer start...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"发送方式\"><a class=\"anchor\" href=\"#发送方式\">#</a> 发送方式</h3>\n<h4 id=\"同步消息\"><a class=\"anchor\" href=\"#同步消息\">#</a> 同步消息</h4>\n<p>消息发送中进入同步等待状态，可以保证消息投递一定到达</p>\n<p>启动 mqnamesrv</p>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\System32&gt;mqnamesrv\nJava HotSpot(TM) 64-Bit Server VM warning: Using the DefNew young collector with the CMS collector is deprecated and will likely be removed in a future release\nJava HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.\nThe Name Server boot success. serializeType=JSON\n</code></pre>\n<p>启动 mqbroker</p>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\System32&gt;mqbroker -n localhost:9876 autoCreateTopicEnable=true\nThe broker[Fan, 172.20.10.3:10911] boot success. serializeType=JSON and name server is localhost:9876\n</code></pre>\n<p>启动 admin 管理界面</p>\n<pre><code class=\"language-cmd\">D:\\RocketMQ&gt;java -jar rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr=127.0.0.1:9876\n</code></pre>\n<p>创建一个 maven 项目，引入依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.rocketmq<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>rocketmq-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.6.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>消息提供方</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SendResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">//new Message (topic,body)：topic 消息将要发送到的地址，如果没有就自动创建；body 具体数据</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token class-name\">Message</span> msg <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 发送消息后阻塞等待 broker 返回，即同步消息</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">SendResult</span> sendResult <span class=\"token operator\">=</span> producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sendResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>消息消费方</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyContext</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">DefaultMQPushConsumer</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 过滤器: * 表示不过滤</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">registerMessageListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span> <span class=\"token function\">consumeMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">></span></span> msgs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> msg <span class=\"token operator\">:</span> msgs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token comment\">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token comment\">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">.</span>CONSUME_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Consumer start...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"异步消息\"><a class=\"anchor\" href=\"#异步消息\">#</a> 异步消息</h4>\n<p>想要快速发送消息，又不想丢失的时候可以使用异步消息</p>\n<p>回调方式</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SendCallback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SendResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ArrayList</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">//new Message (topic,body)：topic 消息将要发送到的地址，如果没有就自动创建；body 具体数据</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">/*Message msg = new Message (\"myTopic001\", \"hello\".getBytes ());</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        Message msg2 = new Message (\"myTopic001\", \"hello2\".getBytes ());</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        Message msg3 = new Message (\"myTopic001\", \"hello3\".getBytes ());</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        List&lt;Message> msgList = new ArrayList&lt;>();</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        msgList.add (msg);</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        msgList.add (msg2);</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        msgList.add (msg3);</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        // 发送消息后阻塞等待 broker 返回</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        SendResult sendResult = producer.send (msgList);</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        System.out.println (sendResult);*/</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">// 异步可靠消息，发送消息之后不会阻塞等待 broker 返回，而是采用事件监听的方式接收 broker 返回的确认</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello callback\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SendCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onSuccess</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SendResult</span> sendResult<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sendResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> throwable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"消息发送异常：\"</span> <span class=\"token operator\">+</span> throwable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">//        producer.shutdown();</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h4 id=\"单向消息\"><a class=\"anchor\" href=\"#单向消息\">#</a> 单向消息</h4>\n<p>只发送消息，不等待服务器响应，只发送请求不等待应答。此方式发送消息的过程耗时非常短，一般在微秒级别。</p>\n<pre><code> producer.sendOneway(message);\n</code></pre>\n<p>无需 broker 响应，发送速度最快</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic001\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 不需要 broker 响应</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">sendOneway</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"批量消息发送\"><a class=\"anchor\" href=\"#批量消息发送\">#</a> 批量消息发送</h3>\n<p>可以多条消息打包一起发送，减少网络传输次数提高效率。</p>\n<p><code>producer.send(Collection c) </code> 方法可以接受一个集合 实现批量发送</p>\n<pre><code> public SendResult send(\n        Collection&lt;Message&gt; msgs) throws MQClientException, RemotingException, MQBrokerException, InterruptedException &#123;\n        return this.defaultMQProducerImpl.send(batch(msgs));\n    &#125;\n</code></pre>\n<ul>\n<li>批量消息要求必要具有同一 topic、相同消息配置</li>\n<li>不支持延时消息</li>\n<li>建议一个批量消息最好不要超过 1MB 大小</li>\n<li>如果不确定是否超过限制，可以手动计算大小分批发送</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2NrZXRtcS5hcGFjaGUub3JnL2RvY3MvYmF0Y2gtZXhhbXBsZS8=\">参考官网</span></p>\n<h3 id=\"tag\"><a class=\"anchor\" href=\"#tag\">#</a> TAG</h3>\n<p>可以使用 tag 来过滤消费</p>\n<p>在 Producer 中使用 Tag：</p>\n<pre><code>Message msg = new Message(&quot;TopicTest&quot;,&quot;TagA&quot; ,(&quot;Hello RocketMQ &quot; ).getBytes(RemotingHelper.DEFAULT_CHARSET));\n</code></pre>\n<p>在 Consumer 中订阅 Tag：</p>\n<pre><code>consumer.subscribe(&quot;TopicTest&quot;, &quot;TagA||TagB&quot;);// * 代表订阅Topic下的所有消息\n</code></pre>\n<p>消息提供方使用 tag 分类消息</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer3</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">//tag 用来过滤消息，消息分类</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic002\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TAG-B\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"KEY-xx\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"hello-tag\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// 不需要 broker 响应</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">sendOneway</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>消息消费方进行消息过滤</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyContext</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">.</span>heartbeat<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageModel</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumer3</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">DefaultMQPushConsumer</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 只接收 TAG-A 的消息，其他消息会被过滤掉</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic002\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TAG-A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">registerMessageListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span> <span class=\"token function\">consumeMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">></span></span> msgs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> msg <span class=\"token operator\">:</span> msgs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token comment\">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token comment\">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                <span class=\"token comment\">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">.</span>CONSUME_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Consumer start...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210601172031824.png\" alt=\"image-20210601172031824\" /></p>\n<h3 id=\"sql表达式过滤\"><a class=\"anchor\" href=\"#sql表达式过滤\">#</a> SQL 表达式过滤</h3>\n<p>消费者将收到包含 TAGA 或 TAGB 或 TAGB 的消息。但限制是一条消息只能有一个标签，而这对于复杂的情况可能无效。 在这种情况下，您可以使用 SQL 表达式筛选出消息.</p>\n<h4 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h4>\n<p>在 <code>broker.conf </code> 中添加配置</p>\n<pre><code>enablePropertyFilter=true\n</code></pre>\n<p>启动 broker 加载指定配置文件</p>\n<pre><code>../bin/mqbroker -n 192.168.150.113:9876 -c broker.conf \n</code></pre>\n<p>随后在集群配置中可以看到</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20200219174859476.png\" alt=\"image-20200219174859476\" /></p>\n<h4 id=\"实例\"><a class=\"anchor\" href=\"#实例\">#</a> <strong>实例</strong></h4>\n<pre><code>        MessageSelector selector = MessageSelector.bySql(&quot;order &gt; 5&quot;);\n        consumer.subscribe(&quot;xxoo3&quot;, selector);\n</code></pre>\n<h4 id=\"语法\"><a class=\"anchor\" href=\"#语法\">#</a> 语法</h4>\n<p>RocketMQ 只定义了一些基本的语法来支持这个功能。 你也可以很容易地扩展它.</p>\n<ol>\n<li>数字比较，像  <code>&gt;</code> ,  <code>&gt;=</code> ,  <code>&lt;</code> ,  <code>&lt;=</code> ,  <code>BETWEEN</code> ,  <code>=</code> ;</li>\n<li>字符比较，像  <code>=</code> ,  <code>&lt;&gt;</code> ,  <code>IN</code> ;</li>\n<li><code>IS NULL</code>  或者  <code>IS NOT NULL</code> ;</li>\n<li>逻辑运算 <code>AND</code> ,  <code>OR</code> ,  <code>NOT</code> ;</li>\n</ol>\n<p>常量类型是:</p>\n<ol>\n<li>数字，像 123, 3.1415;</li>\n<li>字符串，像‘abc’, 必须使用单引号；</li>\n<li><code>NULL</code> , 特殊常数；</li>\n<li>布尔常量， <code>TRUE</code>  或 <code>FALSE</code> ;</li>\n</ol>\n<h4 id=\"demo\"><a class=\"anchor\" href=\"#demo\">#</a> demo</h4>\n<p>需要在 RocketMQ 安装目录下的 broker.conf 配置文件中加入 enablePropertyFilter=true</p>\n<p>之后重启 broker</p>\n<pre><code class=\"language-cmd\">#启动时需要指定加载broker.conf\nmqbroker -n localhost:9876 -c D:\\rocketmq\\conf\\broker.conf autoCreateTopicEnable=true\n</code></pre>\n<p>消息提供方</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"10\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer3</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token comment\">//tag 用来过滤消息，消息分类</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic002\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TAG-B\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"KEY-xx\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello-tag：\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            message<span class=\"token punctuation\">.</span><span class=\"token function\">putUserProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">shutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>消息消费方</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageSelector</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyContext</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumer4</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">DefaultMQPushConsumer</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxooxx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">MessageSelector</span> messageSelector <span class=\"token operator\">=</span> <span class=\"token class-name\">MessageSelector</span><span class=\"token punctuation\">.</span><span class=\"token function\">bySql</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"age >= 18 and age &lt;=28\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myTopic002\"</span><span class=\"token punctuation\">,</span> messageSelector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">registerMessageListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageListenerConcurrently</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span> <span class=\"token function\">consumeMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">></span></span> msgs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConsumeConcurrentlyContext</span> consumeConcurrentlyContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> msg <span class=\"token operator\">:</span> msgs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token comment\">// 默认情况下，这条消息只会被一个 consumer 消费</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token comment\">// 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token comment\">// 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConsumeConcurrentlyStatus</span><span class=\"token punctuation\">.</span>CONSUME_SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Consumer start...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>输出</p>\n<pre><code class=\"language-cmd\">Consumer start...\nhello-tag：19\nhello-tag：18\nhello-tag：20\nhello-tag：21\nhello-tag：22\nhello-tag：23\nhello-tag：24\nhello-tag：25\nhello-tag：26\nhello-tag：27\nhello-tag：28\n</code></pre>\n<h3 id=\"延迟消息\"><a class=\"anchor\" href=\"#延迟消息\">#</a> 延迟消息</h3>\n<p>RocketMQ 使用<strong> messageDelayLevel</strong> 可以设置延迟投递</p>\n<p><strong>默认配置为</strong></p>\n<pre><code>messageDelayLevel\t1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h\n</code></pre>\n<h4 id=\"配置-2\"><a class=\"anchor\" href=\"#配置-2\">#</a> 配置</h4>\n<p>在 <code>broker.conf </code> 中添加配置</p>\n<pre><code>messageDelayLevel=1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h\n</code></pre>\n<p>这个配置项配置了从 1 级开始，各级延时的时间，可以修改这个指定级别的延时时间；</p>\n<p>时间单位支持：s、m、h、d，分别表示秒、分、时、天；</p>\n<h4 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h4>\n<p>发送消息时设置</p>\n<pre><code>message.setDelayTimeLevel(1); \n</code></pre>\n<h3 id=\"顺序消费\"><a class=\"anchor\" href=\"#顺序消费\">#</a> 顺序消费</h3>\n<p>队列先天支持 FIFO 模型，单一生产和消费者下只要保证使用 <code>MessageListenerOrderly</code>  监听器即可</p>\n<p>顺序消费表示消息消费的顺序同生产者为每个消息队列发送的顺序一致，所以如果正在处理全局顺序是强制性的场景，需要确保使用的主题只有一个消息队列。</p>\n<p>并行消费不再保证消息顺序，消费的最大并行数量受每个消费者客户端指定的线程池限制。</p>\n<p>那么只要顺序的发送，再保证一个线程只去消费一个队列上的消息，那么他就是有序的。</p>\n<p>跟普通消息相比，顺序消息的使用需要在 producer 的 send () 方法中添加 MessageQueueSelector 接口的实现类，并重写 select 选择使用的队列，因为顺序消息局部顺序，需要将所有消息指定发送到同一队列中。</p>\n<p><strong>保证有序参与因素</strong></p>\n<ul>\n<li>FIFO</li>\n<li>队列内保证有序</li>\n<li>消费线程</li>\n</ul>\n<p>一个 topic 默认由四个 queue 组成，而发送消息时可能会被存进不同的 queue 中，这就导致了接收的消息与发送的消息顺序不一致。所以，要想保证有序，首先发送时需要有序发送（使用同一个线程发送消息），其次要设置消息存进同一个 topic 的同一个 queue 中，消费消息时需要一个线程消费一个 queue 里的消息。当有多个 queue 时，只能保证消费每个 queue 里的消息是有序的。</p>\n<h4 id=\"demo-2\"><a class=\"anchor\" href=\"#demo-2\">#</a> demo</h4>\n<p>服务提供方</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>transaction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageQueueSelector</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SendResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageQueue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"17\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer2</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">DefaultMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pro02\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo06\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"hello:\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token class-name\">SendResult</span> sendResult <span class=\"token operator\">=</span> producer<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token comment\">// 指定向 topic 的哪个 queue 中写消息</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageQueueSelector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                        <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                        <span class=\"token keyword\">public</span> <span class=\"token class-name\">MessageQueue</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                                <span class=\"token comment\">// 当前 topic 中所有 queue</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                                <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageQueue</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                                <span class=\"token comment\">// 要写入 queue 的消息</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                                <span class=\"token class-name\">Message</span> message<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                                <span class=\"token comment\">// 对应 send () 的第三个参数 arg，即要选择的第几个 queue</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                                <span class=\"token class-name\">Object</span> arg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                            <span class=\"token comment\">// 返回选择的 queue</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                            <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                    <span class=\"token comment\">// 选择第几个 queue</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                    <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">//        producer.shutdown();</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>服务消费方</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>transaction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>listener<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * 消息消费者</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> * @DateTime: 2021-06-01 14:41</pre></td></tr><tr><td data-num=\"16\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Consumer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token class-name\">DefaultMQPushConsumer</span> consumer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultMQPushConsumer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"group02\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\">// 每一个 consumer 关注一个 topic</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">//topic: 关注的消息的地址</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 过滤器: * 表示不过滤</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo06\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>         * MessageListenerConcurrently 开启多个线程并发消费消息。一个 queue 可能对应多个线程</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">/*consumer.registerMessageListener (new MessageListenerConcurrently () &#123;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            @Override</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            public ConsumeConcurrentlyStatus consumeMessage (List&lt;MessageExt> msgs, ConsumeConcurrentlyContext consumeConcurrentlyContext) &#123;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                for (MessageExt msg : msgs) &#123;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                    System.out.println (new String (msg.getBody ()));</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                &#125;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                // 默认情况下，这条消息只会被一个 consumer 消费</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                // 如果消息被消费，则消息状态将修改并返回给消息提供者，告诉消息提供者消息已经消费</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                // 如果暂时不消费消息，则需要返回 ConsumeConcurrentlyStatus.RECONSUME_LATER，告诉消息提供者过一会再次提供消息</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            &#125;</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        &#125;);*/</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">// 最大开启消费线程数</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">//        consumer.setConsumeThreadMax(5);</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">// 最小消费线程数</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">//        consumer.setConsumeThreadMin();</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>         * MessageListenerOrderly 一个 queue 对应一个线程</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>         */</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">registerMessageListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageListenerOrderly</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">ConsumeOrderlyStatus</span> <span class=\"token function\">consumeMessage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">></span></span> msgs<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConsumeOrderlyContext</span> consumeOrderlyContext<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> msg <span class=\"token operator\">:</span> msgs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" Thread-\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">ConsumeOrderlyStatus</span><span class=\"token punctuation\">.</span>SUCCESS<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token comment\">// 消费消息时可以阻塞的时间</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">//        consumer.setConsumeTimeout();</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        consumer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Consumer start...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"重试机制\"><a class=\"anchor\" href=\"#重试机制\">#</a> 重试机制</h3>\n<h4 id=\"producer\"><a class=\"anchor\" href=\"#producer\">#</a> producer</h4>\n<p><strong>默认超时时间</strong></p>\n<pre><code>    /**\n     * Timeout for sending messages.\n     */\n    private int sendMsgTimeout = 3000;\n</code></pre>\n<pre><code>\t// 异步发送时 重试次数，默认 2\n\tproducer.setRetryTimesWhenSendAsyncFailed(1);\n\t// 同步发送时 重试次数，默认 2\n\tproducer.setRetryTimesWhenSendFailed(1);\t\n\t\n\t// 是否向其他broker发送请求 默认false\n\tproducer.setRetryAnotherBrokerWhenNotStoreOK(true);\n</code></pre>\n<h4 id=\"consumer\"><a class=\"anchor\" href=\"#consumer\">#</a> Consumer</h4>\n<p>消费超时，单位分钟</p>\n<p><code>consumer.setConsumeTimeout()</code></p>\n<p>发送 ack，消费失败</p>\n<p><code>RECONSUME_LATER</code></p>\n<h4 id=\"broker投递\"><a class=\"anchor\" href=\"#broker投递\">#</a> broker 投递</h4>\n<p>只有在消息模式为 MessageModel.CLUSTERING 集群模式时，Broker 才会自动进行重试，广播消息不重试</p>\n<p>重投使用 <code>messageDelayLevel</code></p>\n<p>默认值</p>\n<pre><code>messageDelayLevel\t1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h\n</code></pre>\n<h3 id=\"事务消息\"><a class=\"anchor\" href=\"#事务消息\">#</a> 事务消息</h3>\n<p>分布式系统中的事务可以使用 TCC（Try、Confirm、Cancel）、2pc 来解决分布式系统中的消息原子性</p>\n<p>RocketMQ 4.3 + 提供分布事务功能，通过 RocketMQ 事务消息能达到分布式事务的最终一致</p>\n<h4 id=\"rocketmq实现方式\"><a class=\"anchor\" href=\"#rocketmq实现方式\">#</a> RocketMQ 实现方式</h4>\n<p>**Half Message：** 预处理消息，当 broker 收到此类消息后，会存储到 RMQ_SYS_TRANS_HALF_TOPIC 的消息消费队列中</p>\n<p>** 检查事务状态：**Broker 会开启一个定时任务，消费 RMQ_SYS_TRANS_HALF_TOPIC 队列中的消息，每次执行任务会向消息发送者确认事务执行状态（提交、回滚、未知），如果是未知，等待下一次回调。</p>\n<p>** 超时：** 如果超过回查次数，默认回滚消息</p>\n<h4 id=\"transactionlistener的两个方法\"><a class=\"anchor\" href=\"#transactionlistener的两个方法\">#</a> TransactionListener 的两个方法</h4>\n<h5 id=\"executelocaltransaction\"><a class=\"anchor\" href=\"#executelocaltransaction\">#</a> executeLocalTransaction</h5>\n<p>半消息发送成功触发此方法来执行本地事务</p>\n<h5 id=\"checklocaltransaction\"><a class=\"anchor\" href=\"#checklocaltransaction\">#</a> checkLocalTransaction</h5>\n<p>broker 将发送检查消息来检查事务状态，并将调用此方法来获取本地事务状态</p>\n<h5 id=\"本地事务执行状态\"><a class=\"anchor\" href=\"#本地事务执行状态\">#</a> 本地事务执行状态</h5>\n<p><strong>LocalTransactionState.COMMIT_MESSAGE</strong></p>\n<p>执行事务成功，确认提交</p>\n<p><strong>LocalTransactionState.ROLLBACK_MESSAGE</strong></p>\n<p>回滚消息，broker 端会删除半消息</p>\n<p><strong>LocalTransactionState.UNKNOW</strong></p>\n<p>暂时为未知状态，等待 broker 回查</p>\n<h4 id=\"demo-3\"><a class=\"anchor\" href=\"#demo-3\">#</a> demo</h4>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>fan<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>transaction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>producer<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Message</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MessageExt</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>rocketmq<span class=\"token punctuation\">.</span>remoting<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"11\"></td><td><pre> * 消息发送者</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> * @Author: fan</pre></td></tr><tr><td data-num=\"14\"></td><td><pre> * @DateTime: 2021-06-01 14:04</pre></td></tr><tr><td data-num=\"15\"></td><td><pre> **/</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Producer</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">MQClientException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MQBrokerException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemotingException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">TransactionMQProducer</span> producer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TransactionMQProducer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token comment\">// 设置 nameserver 地址</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setNamesrvAddr</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1:9876\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\">// 回调</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">setTransactionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">TransactionListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">LocalTransactionState</span> <span class=\"token function\">executeLocalTransaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Message</span> msg<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token comment\">// 执行本地事务</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==========executeLocalTransaction\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg:\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transactionId:\"</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">getTransactionId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token comment\">// 出错回滚</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    <span class=\"token keyword\">return</span> <span class=\"token class-name\">LocalTransactionState</span><span class=\"token punctuation\">.</span>ROLLBACK_MESSAGE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                <span class=\"token comment\">// 模拟未知，之后会进入 checkLocalTransaction ()</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">LocalTransactionState</span><span class=\"token punctuation\">.</span>UNKNOW<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>            <span class=\"token keyword\">public</span> <span class=\"token class-name\">LocalTransactionState</span> <span class=\"token function\">checkLocalTransaction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageExt</span> messageExt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token comment\">//broker 端回调，检查事务</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token comment\">// 如果没有被 consumer 消费，那么就会在该方法中重投消息</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=============checkLocalTransaction\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"msg:\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>messageExt<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transactionId:\"</span> <span class=\"token operator\">+</span> messageExt<span class=\"token punctuation\">.</span><span class=\"token function\">getTransactionId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token comment\">// 代表事务执行成功</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token class-name\">LocalTransactionState</span><span class=\"token punctuation\">.</span>COMMIT_MESSAGE<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        producer<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token class-name\">Message</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Message</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xxoo01\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hello transactions\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token class-name\">SendResult</span> sendResult <span class=\"token operator\">=</span> producer<span class=\"token punctuation\">.</span><span class=\"token function\">sendMessageInTransaction</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sendResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">//        producer.shutdown();</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "Java",
                "Java",
                "消息中间件",
                "RocketMQ"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5",
            "url": "https://www.baiyezi.vip/RocketMQ-%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5",
            "title": "RocketMQ-基础概念",
            "date_published": "2021-08-10T10:24:58.000Z",
            "content_html": "<p>主流的 MQ 有很多，比如 ActiveMQ、RabbitMQ、RocketMQ、Kafka、ZeroMQ 等。</p>\n<p>之前阿里巴巴也是使用 ActiveMQ，随着业务发展，ActiveMQ IO 模块出现瓶颈，后来阿里巴巴 通过一系列优化但是还是不能很好的解决，之后阿里巴巴把注意力放到了主流消息中间件 kafka 上面，但是 kafka 并不能满足他们的要求，尤其是低延迟和高可靠性。</p>\n<p>所以 RocketMQ 是站在巨人的肩膀上（kafka）MetaQ 的内核，又对其进行了优化让其更满足互联网公司的特点。它是纯 Java 开发，具有高吞吐量、高可用性、适合大规模分布式系统应用的特点。 RocketMQ 目前在阿里集团被广泛应用于交易、充值、流计算、消息推送、日志流式处理、binglog 分发等场景。</p>\n<h2 id=\"windows上安装\"><a class=\"anchor\" href=\"#windows上安装\">#</a> Windows 上安装</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9yb2NrZXRtcS5hcGFjaGUub3JnL2RvY3MvcXVpY2stc3RhcnQv\">官网</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9keW4vY2xvc2VyLmNnaT9wYXRoPXJvY2tldG1xLzQuOC4wL3JvY2tldG1xLWFsbC00LjguMC1iaW4tcmVsZWFzZS56aXA=\">下载地址</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS90cmVlL21hc3Rlci9kb2NzL2Nu\">中文文档</span></p>\n<p>配置环境变量</p>\n<pre><code class=\"language-cmd\">ROCKETMQ_HOME=&quot;D:\\rocketmq&quot;\n%ROCKETMQ_HOME%\\bin\nNAMESRV_ADDR=&quot;localhost:9876&quot;\n</code></pre>\n<p>测试，以管理员身份打开 cmd</p>\n<p>开启 rocketmq 服务</p>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\system32&gt;mqnamesrv\nJava HotSpot(TM) 64-Bit Server VM warning: Using the DefNew young collector with the CMS collector is deprecated and will likely be removed in a future release\nJava HotSpot(TM) 64-Bit Server VM warning: UseCMSCompactAtFullCollection is deprecated and will likely be removed in a future release.\nThe Name Server boot success. serializeType=JSON\n</code></pre>\n<p>开启 broker</p>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\system32&gt;mqbroker -n localhost:9876 autoCreateTopicEnable=true\nThe broker[Fan, 172.20.10.3:10911] boot success. serializeType=JSON and name server is localhost:9876\n</code></pre>\n<p>发送消息</p>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\system32&gt;tools org.apache.rocketmq.example.quickstart.Producer\n14:20:11.211 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework\nRocketMQLog:WARN No appenders could be found for logger (io.netty.util.internal.PlatformDependent0).\nRocketMQLog:WARN Please initialize the logger system properly.\nSendResult [sendStatus=SEND_OK, msgId=7F00000134C40D7163619D926ADF0000, offsetMsgId=AC140A0300002A9F0000000000000000, messageQueue=MessageQueue [topic=TopicTest, brokerName=Fan, queueId=2], queueOffset=0]\n</code></pre>\n<p>接收消息</p>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\system32&gt;tools org.apache.rocketmq.example.quickstart.Consumer\n14:20:11.292 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework\nConsumer Started.\nConsumeMessageThread_14 Receive New Messages: [MessageExt [brokerName=Fan, queueId=2, storeSize=202, queueOffset=5, sysFlag=0, bornTimestamp=1622442018931, bornHost=/172.20.10.3:10521, storeTimestamp=1622442018939, storeHost=/172.20.10.3:10911, msgId=AC140A0300002A9F0000000000000FBE, commitLogOffset=4030, bodyCRC=548040149, reconsumeTimes=0, preparedTransactionOffset=0, toString()=Message&#123;topic='TopicTest', flag=0, properties=&#123;MIN_OFFSET=0, MAX_OFFSET=250, CONSUME_START_TIME=1622442057391, UNIQ_KEY=7F00000134C40D7163619D926C730014, CLUSTER=DefaultCluster, WAIT=true, TAGS=TagA&#125;, body=[72, 101, 108, 108, 111, 32, 82, 111, 99, 107, 101, 116, 77, 81, 32, 50, 48], transactionId='null'&#125;]]\n</code></pre>\n<h3 id=\"命令帮助\"><a class=\"anchor\" href=\"#命令帮助\">#</a> 命令帮助</h3>\n<pre><code class=\"language-cmd\">C:\\WINDOWS\\system32&gt;mqadmin\nThe most commonly used mqadmin commands are:\n   updateTopic          Update or create topic\n   deleteTopic          Delete topic from broker and NameServer.\n   updateSubGroup       Update or create subscription group\n   deleteSubGroup       Delete subscription group from broker.\n   updateBrokerConfig   Update broker's config\n   updateTopicPerm      Update topic perm\n   topicRoute           Examine topic route info\n   topicStatus          Examine topic Status info\n   topicClusterList     get cluster info for topic\n   brokerStatus         Fetch broker runtime status data\n   queryMsgById         Query Message by Id\n   queryMsgByKey        Query Message by Key\n   queryMsgByUniqueKey  Query Message by Unique key\n   queryMsgByOffset     Query Message by offset\n   QueryMsgTraceById    query a message trace\n   printMsg             Print Message Detail\n   printMsgByQueue      Print Message Detail\n   sendMsgStatus        send msg to broker.\n   brokerConsumeStats   Fetch broker consume stats data\n   producerConnection   Query producer's socket connection and client version\n   consumerConnection   Query consumer's socket connection, client version and subscription\n   consumerProgress     Query consumers's progress, speed\n   consumerStatus       Query consumer's internal data structure\n   cloneGroupOffset     clone offset from other group.\n   clusterList          List all of clusters\n   topicList            Fetch all topic list from name server\n   updateKvConfig       Create or update KV config.\n   deleteKvConfig       Delete KV config.\n   wipeWritePerm        Wipe write perm of broker in all name server\n   resetOffsetByTime    Reset consumer offset by timestamp(without client restart).\n   updateOrderConf      Create or update or delete order conf\n   cleanExpiredCQ       Clean expired ConsumeQueue on broker.\n   cleanUnusedTopic     Clean unused topic on broker.\n   startMonitoring      Start Monitoring\n   statsAll             Topic and Consumer tps stats\n   allocateMQ           Allocate MQ\n   checkMsgSendRT       check message send response time\n   clusterRT            List All clusters Message Send RT\n   getNamesrvConfig     Get configs of name server.\n   updateNamesrvConfig  Update configs of name server.\n   getBrokerConfig      Get broker config by cluster or special broker!\n   queryCq              Query cq command.\n   sendMessage          Send a message\n   consumeMessage       Consume message\n   updateAclConfig      Update acl config yaml file in broker\n   deleteAccessConfig   Delete Acl Config Account in broker\n   clusterAclConfigVersion List all of acl config version information in cluster\n   updateGlobalWhiteAddr Update global white address for acl Config File in broker\n   getAccessConfigSubCommand List all of acl config information in cluster\n\nSee 'mqadmin help &lt;command&gt;' for more information on a specific command.\n\n# 查看具体命令使用方式\nC:\\WINDOWS\\system32&gt;mqadmin help topicList\nusage: mqadmin topicList [-c] [-h] [-n &lt;arg&gt;]\n -c,--clusterModel        clusterModel\n -h,--help                Print help\n -n,--namesrvAddr &lt;arg&gt;   Name server address list, eg: 192.168.0.1:9876;192.168.0.2:9876\n</code></pre>\n<h2 id=\"linux上安装\"><a class=\"anchor\" href=\"#linux上安装\">#</a> Linux 上安装</h2>\n<h4 id=\"1下载源码并上传到linux\"><a class=\"anchor\" href=\"#1下载源码并上传到linux\">#</a> 1. 下载源码并上传到 Linux</h4>\n<p><a href=\"https://mirrors.bfsu.edu.cn/apache/rocketmq/4.8.0/rocketmq-all-4.8.0-source-release.zip\"><strong>https://mirrors.bfsu.edu.cn/apache/rocketmq/4.8.0/rocketmq-all-4.8.0-source-release.zip</strong></a></p>\n<h4 id=\"2在linux上安装maven\"><a class=\"anchor\" href=\"#2在linux上安装maven\">#</a> 2. 在 Linux 上安装 Maven</h4>\n<p><strong>下载 Maven</strong></p>\n<pre><code>wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\n</code></pre>\n<p><strong>添加阿里云镜像</strong></p>\n<p>修改 <code>maven/conf</code>  目录下的 <code>settings.xml</code></p>\n<p>在 <code>mirrors</code>  节点下添加</p>\n<pre><code>&lt;mirror&gt; \n    &lt;id&gt;aliyun-maven&lt;/id&gt; \n    &lt;mirrorOf&gt;*&lt;/mirrorOf&gt; \n    &lt;name&gt;aliyun maven&lt;/name&gt; \n    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; \n&lt;/mirror&gt;\n</code></pre>\n<p><strong>配置 maven 环境变量</strong></p>\n<p>修改 <code>/etc/profile</code></p>\n<pre><code>export M2_HOME=/usr/local/maven\nexport PATH=$PATH:$M2_HOME/bin\n</code></pre>\n<p><strong>配置 java 环境变量</strong></p>\n<pre><code>export JAVA_HOME=&quot;/usr/java/jdk1.8.0_181-amd64&quot;\nexport CLASS_PATH=&quot;$JAVA_HOME/lib&quot;\nexport PATH=&quot;.$PATH:$JAVA_HOME/bin&quot;\n</code></pre>\n<p>环境变量修完执行 <code>source /etc/profile</code>  立即生效</p>\n<p><strong>进入 rocketmq 主目录编译项目</strong></p>\n<pre><code>mvn -Prelease-all -DskipTests clean install -U\n</code></pre>\n<h4 id=\"3启动nameserver\"><a class=\"anchor\" href=\"#3启动nameserver\">#</a> 3. 启动 nameserver</h4>\n<p><code>bin</code>  目录下执行</p>\n<pre><code>./mqnamesrv\n</code></pre>\n<p>正常提示</p>\n<p><img data-src=\"RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200218150050167.png\" alt=\"image-20200218150050167\" /></p>\n<h4 id=\"4启动broker\"><a class=\"anchor\" href=\"#4启动broker\">#</a> 4. 启动 Broker</h4>\n<pre><code>./mqbroker -n localhost:9876\n</code></pre>\n<p>正常提示</p>\n<p><img data-src=\"RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200218150114714.png\" alt=\"image-20200218150114714\" /></p>\n<h4 id=\"5测试消息发送\"><a class=\"anchor\" href=\"#5测试消息发送\">#</a> 5. 测试消息发送</h4>\n<p>使用 <code>tool.sh</code>  脚本执行测试程序</p>\n<p>在 <code>bin</code>  目录下执行</p>\n<pre><code>./tools.sh org.apache.rocketmq.example.quickstart.Producer\n</code></pre>\n<p>提示如下表示成功</p>\n<p><img data-src=\"RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200218145049603.png\" alt=\"image-20200218145049603\" /></p>\n<p><strong>6. 接受消息</strong></p>\n<pre><code>./tools.sh org.apache.rocketmq.example.quickstart.Consumer\n</code></pre>\n<h3 id=\"控制台rocketmq-console编译安装\"><a class=\"anchor\" href=\"#控制台rocketmq-console编译安装\">#</a> 控制台 rocketmq-console 编译安装</h3>\n<h4 id=\"下载\"><a class=\"anchor\" href=\"#下载\">#</a> 下载</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS1leHRlcm5hbHM=\">https://github.com/apache/rocketmq-externals</span></p>\n<p><strong>中文指南</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FwYWNoZS9yb2NrZXRtcS1leHRlcm5hbHMvYmxvYi9tYXN0ZXIvcm9ja2V0bXEtY29uc29sZS9kb2MvMV8wXzAvVXNlckd1aWRlX0NOLm1k\">https://github.com/apache/rocketmq-externals/blob/master/rocketmq-console/doc/1_0_0/UserGuide_CN.md</span></p>\n<h4 id=\"上传到服务器并解压缩\"><a class=\"anchor\" href=\"#上传到服务器并解压缩\">#</a> 上传到服务器并解压缩</h4>\n<h4 id=\"编译\"><a class=\"anchor\" href=\"#编译\">#</a> 编译</h4>\n<p>进入 <code>rocketmq-console</code>  目录</p>\n<p>执行编译</p>\n<pre><code>mvn clean package -Dmaven.test.skip=true\n</code></pre>\n<h4 id=\"启动\"><a class=\"anchor\" href=\"#启动\">#</a> 启动</h4>\n<p>编译成功后在 <code>rocketmq-console/target</code>  目录下执行 <code>rocketmq-console-ng-1.0.1.jar</code></p>\n<p>启动时，直接动态添加 <code>nameserver</code>  地址或编辑 <code>application.properties</code>  添加属性</p>\n<pre><code>java -jar rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr=127.0.0.1:9876\n\n</code></pre>\n<p>启动成功后访问 http://localhost:8080</p>\n<p><img data-src=\"RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89.assets/image-20200218155021928.png\" alt=\"image-20200218155021928\" /></p>\n<h4 id=\"pomxml依赖\"><a class=\"anchor\" href=\"#pomxml依赖\">#</a> pom.xml 依赖</h4>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.rocketmq<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>rocketmq-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.6.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"安装启动常见错误\"><a class=\"anchor\" href=\"#安装启动常见错误\">#</a> 安装启动常见错误</h3>\n<h4 id=\"编译时包无法在mirror上找到-提示502错误\"><a class=\"anchor\" href=\"#编译时包无法在mirror上找到-提示502错误\">#</a> 编译时包无法在 mirror 上找到 提示 502 错误</h4>\n<p>** 原因：** 网络不好或 maven 仓库服务器出错</p>\n<p>重试即可，或者欢迎镜像仓库</p>\n<h4 id=\"发送失败提示connect-to-null-failed\"><a class=\"anchor\" href=\"#发送失败提示connect-to-null-failed\">#</a> <strong>发送失败提示 connect to null failed</strong></h4>\n<pre><code> ./tools.sh org.apache.rocketmq.example.quickstart.Producer\n22:49:02.470 [main] DEBUG i.n.u.i.l.InternalLoggerFactory - Using SLF4J as the default logging framework\nRocketMQLog:WARN No appenders could be found for logger (io.netty.util.internal.PlatformDependent0).\nRocketMQLog:WARN Please initialize the logger system properly.\njava.lang.IllegalStateException: org.apache.rocketmq.remoting.exception.RemotingConnectException: connect to\n null failed\n</code></pre>\n<p>** 原因：** 不知道 <code>nameserver</code>  在哪儿</p>\n<p>在 <code>tools</code>  脚本中添加</p>\n<pre><code>export NAMESRV_ADDR=localhost:9876\n</code></pre>\n<h4 id=\"启动broker失败-cannot-allocate-memory\"><a class=\"anchor\" href=\"#启动broker失败-cannot-allocate-memory\">#</a> 启动 broker 失败 Cannot allocate memory</h4>\n<p>** 原因：**jvm 启动初始化内存分配大于物理内存</p>\n<pre><code>[root@node-113b bin]# ./mqbroker -n localhost:9876\nJava HotSpot(TM) 64-Bit Server VM warning: INFO: os::commit_memory(0x00000005c0000000, 8589934592, 0) failed\n; error='Cannot allocate memory' (errno=12)#\n# There is insufficient memory for the Java Runtime Environment to continue.\n# Native memory allocation (mmap) failed to map 8589934592 bytes for committing reserved memory.\n# An error report file with more information is saved as:\n# /usr/local/rocketmq/bin/hs_err_pid1997.log\n\n</code></pre>\n<p>修改启动脚本中的 jvm 参数</p>\n<p><code>runbroker.sh</code>  broker</p>\n<p><code>runserver.sh</code>  nameserver</p>\n<p>默认数值给的都很大，改小即可</p>\n<pre><code>JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=100m&quot;\n</code></pre>\n<h4 id=\"启动broker成功但提示failed-to-obtain-the-host-name\"><a class=\"anchor\" href=\"#启动broker成功但提示failed-to-obtain-the-host-name\">#</a> 启动 broker 成功但提示：Failed to obtain the host name</h4>\n<pre><code>[root@node-113b bin]# ./mqbroker -n localhost:9876\n22:30:42.307 [main] ERROR RocketmqCommon - Failed to obtain the host name\njava.net.UnknownHostException: node-113b: node-113b: No address associated with hostname\n\tat java.net.InetAddress.getLocalHost(InetAddress.java:1505) ~[na:1.8.0_181]\n\tat org.apache.rocketmq.common.BrokerConfig.localHostName(BrokerConfig.java:189) [rocketmq-common-4.6\n.1.jar:4.6.1]\tat org.apache.rocketmq.common.BrokerConfig.&lt;init&gt;(BrokerConfig.java:38) [rocketmq-common-4.6.1.jar:4\n.6.1]\tat org.apache.rocketmq.broker.BrokerStartup.createBrokerController(BrokerStartup.java:110) [rocketmq\n-broker-4.6.1.jar:4.6.1]\tat org.apache.rocketmq.broker.BrokerStartup.main(BrokerStartup.java:58) [rocketmq-broker-4.6.1.jar:4\n.6.1]Caused by: java.net.UnknownHostException: node-113b: No address associated with hostname\n\tat java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method) ~[na:1.8.0_181]\n\tat java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928) ~[na:1.8.0_181]\n\tat java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323) ~[na:1.8.0_181]\n\tat java.net.InetAddress.getLocalHost(InetAddress.java:1500) ~[na:1.8.0_181]\n\t... 4 common frames omitted\nThe broker[DEFAULT_BROKER, 192.168.150.213:10911] boot success. serializeType=JSON and name server is localh\nost:9876\n</code></pre>\n<p>** 原因：** 无法解析当前的主机名</p>\n<p>hosts 里添加映射即可</p>\n<pre><code>192.168.150.213 node-113b\n</code></pre>\n<h4 id=\"linux日期校准\"><a class=\"anchor\" href=\"#linux日期校准\">#</a> linux 日期校准</h4>\n<p><strong>安装 ntpdate</strong></p>\n<pre><code>yum install ntpdate\n\nntpdate ntp1.aliyun.com\n</code></pre>\n<h2 id=\"rocketmq-功能-大纲\"><a class=\"anchor\" href=\"#rocketmq-功能-大纲\">#</a> RocketMQ 功能 大纲</h2>\n<h3 id=\"rocketmq介绍\"><a class=\"anchor\" href=\"#rocketmq介绍\">#</a> RocketMQ 介绍</h3>\n<ul>\n<li>消息队列应用场景</li>\n<li>rocketmq 中的角色\n<ul>\n<li>nameserver</li>\n</ul>\n</li>\n<li>官网解读</li>\n</ul>\n<h3 id=\"消息发送\"><a class=\"anchor\" href=\"#消息发送\">#</a> 消息发送</h3>\n<ul>\n<li>\n<p>同步发送</p>\n</li>\n<li>\n<p>异步发送</p>\n</li>\n<li>\n<p>单向发送</p>\n</li>\n<li>\n<p>消息批量发送</p>\n</li>\n<li>\n<p>消息结构</p>\n</li>\n<li>\n<p>消息发送流程</p>\n</li>\n</ul>\n<h3 id=\"消息存储\"><a class=\"anchor\" href=\"#消息存储\">#</a> 消息存储</h3>\n<ul>\n<li>存储方式</li>\n<li>发送消息时存储流程</li>\n<li>存储文件与内存映射</li>\n<li>刷盘机制</li>\n<li>文件恢复与过期删除机制</li>\n<li>索引</li>\n</ul>\n<h3 id=\"消息消费\"><a class=\"anchor\" href=\"#消息消费\">#</a> 消息消费</h3>\n<ul>\n<li>消息订阅</li>\n<li>消息拉取和推送</li>\n<li>消息处理队列</li>\n<li>顺序消费</li>\n<li>定时消息机制</li>\n<li>消息过滤 TAG 与 sql92</li>\n<li>FilterServer 过滤机制</li>\n<li>并发消息消费</li>\n<li>消费负载与算法</li>\n<li>消费者动态添加</li>\n<li>消息消费过程</li>\n<li>ACK</li>\n<li>消费进度与 offset</li>\n</ul>\n<h3 id=\"rocketmq集群-ha\"><a class=\"anchor\" href=\"#rocketmq集群-ha\">#</a> Rocketmq 集群 HA</h3>\n<ul>\n<li>集群搭建</li>\n<li>主从同步复制原理</li>\n<li>读写分离机制</li>\n</ul>\n<h3 id=\"整合\"><a class=\"anchor\" href=\"#整合\">#</a> 整合</h3>\n<ul>\n<li>使用 spring</li>\n<li>SpringCloud 整合</li>\n</ul>\n<h3 id=\"监控与运维\"><a class=\"anchor\" href=\"#监控与运维\">#</a> 监控与运维</h3>\n<ul>\n<li>rocketmq-console 监控平台</li>\n<li>命令行运维 MQAdmin</li>\n<li>自定义日志</li>\n</ul>\n<h2 id=\"消息队列介绍\"><a class=\"anchor\" href=\"#消息队列介绍\">#</a> 消息队列介绍</h2>\n<p>消息队列是《数据结构》中先进先出的一种数据结构，在当前的架构中，作为中间件提供服务。</p>\n<h3 id=\"消息中间件功能\"><a class=\"anchor\" href=\"#消息中间件功能\">#</a> 消息中间件功能</h3>\n<h4 id=\"应用解耦\"><a class=\"anchor\" href=\"#应用解耦\">#</a> 应用解耦</h4>\n<p>AB 应用不在互相依赖</p>\n<h4 id=\"流量削峰\"><a class=\"anchor\" href=\"#流量削峰\">#</a> 流量削峰</h4>\n<p>流量达到高峰的时候，通常使用限流算法来控制流量涌入系统，避免系统被击瘫，但是这种方式损失了一部分请求</p>\n<p>此时可以使用消息中间件来缓冲大量的请求，匀速消费，当消息队列中堆积消息过多时，我们可以动态上线增加消费端，来保证不丢失重要请求。</p>\n<h4 id=\"大数据处理\"><a class=\"anchor\" href=\"#大数据处理\">#</a> 大数据处理</h4>\n<p>消息中间件可以把各个模块中产生的管理员操作日志、用户行为、系统状态等数据文件作为消息收集到主题中</p>\n<p>数据使用方可以订阅自己感兴趣的数据内容互不影响，进行消费</p>\n<h4 id=\"异构系统\"><a class=\"anchor\" href=\"#异构系统\">#</a> 异构系统</h4>\n<p>跨语言</p>\n<h3 id=\"rocketmq-角色\"><a class=\"anchor\" href=\"#rocketmq-角色\">#</a> RocketMQ 角色</h3>\n<p><img data-src=\"RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89.assets/webp\" alt=\"img\" /></p>\n<h4 id=\"broker\"><a class=\"anchor\" href=\"#broker\">#</a> broker</h4>\n<ul>\n<li>Broker 面向 producer 和 consumer 接受和发送消息</li>\n<li>向 nameserver 提交自己的信息</li>\n<li>是消息中间件的消息存储、转发服务器。</li>\n<li>每个 Broker 节点，在启动时，都会遍历 NameServer 列表，与每个 NameServer 建立长连接，注册自己的信息，之后定时上报。</li>\n</ul>\n<h5 id=\"broker集群\"><a class=\"anchor\" href=\"#broker集群\">#</a> broker 集群</h5>\n<ul>\n<li>Broker 高可用，可以配成 Master/Slave 结构，Master 可写可读，Slave 只可以读，Master 将写入的数据同步给 Slave。\n<ul>\n<li>一个 Master 可以对应多个 Slave，但是一个 Slave 只能对应一个 Master</li>\n<li>Master 与 Slave 的对应关系通过指定相同的 BrokerName，不同的 BrokerId 来定义 BrokerId 为 0 表示 Master，非 0 表示 Slave</li>\n</ul>\n</li>\n<li>Master 多机负载，可以部署多个 broker\n<ul>\n<li>每个 Broker 与 nameserver 集群中的所有节点建立长连接，定时注册 Topic 信息到所有 nameserver。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"producer\"><a class=\"anchor\" href=\"#producer\">#</a> producer</h4>\n<ul>\n<li>消息的生产者</li>\n<li>通过集群中的其中一个节点（随机选择）建立长连接，获得 Topic 的路由信息，包括 Topic 下面有哪些 Queue，这些 Queue 分布在哪些 Broker 上等</li>\n<li>接下来向提供 Topic 服务的 Master 建立长连接，且定时向 Master 发送心跳</li>\n</ul>\n<h4 id=\"consumer\"><a class=\"anchor\" href=\"#consumer\">#</a> consumer</h4>\n<p>消息的消费者，通过 NameServer 集群获得 Topic 的路由信息，连接到对应的 Broker 上消费消息。</p>\n<p>注意，由于 Master 和 Slave 都可以读取消息，因此 Consumer 会与 Master 和 Slave 都建立连接。</p>\n<h4 id=\"nameserver\"><a class=\"anchor\" href=\"#nameserver\">#</a> nameserver</h4>\n<p>底层由 netty 实现，提供了路由管理、服务注册、服务发现的功能，是一个无状态节点</p>\n<p><strong>nameserver 是服务发现者</strong>，集群中各个角色（producer、broker、consumer 等）都需要定时想 nameserver 上报自己的状态，以便互相发现彼此，超时不上报的话，nameserver 会把它从列表中剔除</p>\n<p><strong>nameserver 可以部署多个</strong>，当多个 nameserver 存在的时候，其他角色同时向他们上报信息，以保证高可用，</p>\n<p><strong>NameServer 集群间互不通信</strong>，没有主备的概念</p>\n<p><strong>nameserver 内存式存储</strong>，nameserver 中的 broker、topic 等信息默认不会持久化</p>\n<p><strong>为什么不用 zookeeper？</strong>：rocketmq 希望为了提高性能，CAP 定理，客户端负载均衡</p>\n<h3 id=\"对比jsm中的topic和queue\"><a class=\"anchor\" href=\"#对比jsm中的topic和queue\">#</a> 对比 JSM 中的 Topic 和 Queue</h3>\n<p>Topic 是一个逻辑上的概念，实际上 Message 是在每个 Broker 上以 Queue 的形式记录。</p>\n<p><img data-src=\"RocketMQ%EF%BC%88%E4%B8%80%EF%BC%89.assets/1090617-20190626173042073-147043337.jpg\" alt=\"img\" /></p>\n<p>对应到 JMS 中的 topic 实现是由客户端来完成的</p>\n<pre><code>        consumer.setMessageModel(MessageModel.BROADCASTING);\n</code></pre>\n",
            "tags": [
                "Java",
                "Java",
                "消息中间件",
                "RocketMQ"
            ]
        },
        {
            "id": "https://www.baiyezi.vip/HTTPS",
            "url": "https://www.baiyezi.vip/HTTPS",
            "title": "HTTPS",
            "date_published": "2021-08-04T09:55:16.000Z",
            "content_html": "<h2 id=\"ssltls\"><a class=\"anchor\" href=\"#ssltls\">#</a> SSL/TLS</h2>\n<p>TLS (Transport Layer Security) 是 SSL (Secure Socket Layer) 的后续版本</p>\n<h2 id=\"加密算法\"><a class=\"anchor\" href=\"#加密算法\">#</a> 加密算法</h2>\n<h3 id=\"对称加密\"><a class=\"anchor\" href=\"#对称加密\">#</a> 对称加密</h3>\n<p>如 AES、DES、3DES 等，密钥只有一个为私钥</p>\n<h3 id=\"非对称加密\"><a class=\"anchor\" href=\"#非对称加密\">#</a> 非对称加密</h3>\n<p>密钥分为公钥和私钥：</p>\n<p>明文通过公钥加密后得到密文，该密文可以通过私钥解密后得到明文；</p>\n<p>明文通过私钥加密后得到密文，该密文可以通过公钥解密后得到明文；</p>\n<p>公钥由服务端的私钥生成并发送给客户端。公钥存放于客户端，用于加密发送给服务端的数据以及解密接收到的服务端的数据；私钥存放于服务端，用于解密接收到的客户的数据以及加密发送给客户端的数据。</p>\n<p>如果客户端与服务端之间存在代理服务器，那么公私密钥都可以被代理服务器篡改。</p>\n<h3 id=\"摘要算法\"><a class=\"anchor\" href=\"#摘要算法\">#</a> 摘要算法</h3>\n<p>Hash 算法</p>\n<h2 id=\"数字签名\"><a class=\"anchor\" href=\"#数字签名\">#</a> 数字签名</h2>\n<p>其原理是对公钥进行 Hash 算法得到对应的签名 / 摘要，为了防止被代理服务器篡改，还需要在客户端以及服务端上各自存放一份证书，该证书是由第三方对已有的公私钥进行二次加密最后加上签名得到的，且第三方是值得被信任的，这样就能很好的防止公私钥被篡改。具体做法是：使用第三方的私钥（第三方的私钥存放于服务端，公钥存放于客户端，且不在客户端与服务端之间传输）对服务端私钥生成的公钥进行加密得到密文，其次对服务端私钥生成的公钥进行 Hash 算法得到签名，这样公钥的密文加上公钥的签名就得到了证书，然后将证书下发给客户端，客户端收到证书后使用第三方的公钥解密证书得到服务端的公钥以及签名，然后通过和服务端一样的签名算法对解密得到的公钥进行运算后得到签名，使用该签名与解密得到的签名进行比对，如果相同，那么下发的证书就是有效的，即公钥没有被篡改。</p>\n<p>这里的第三方指 CA 机构，客户端如浏览器一般都内嵌了信赖的 CA 机构的公钥（或者从操作系统内嵌的证书中获取），只有这些公钥才可解开证书。</p>\n<p>浏览器向服务器（默认是 80 端口）请求信息的四次握手的过程：</p>\n<p>浏览器首先通过 443 端口告知服务器，浏览器自身支持的对称加密算法，如果服务器不支持这些加密算法，那么就不会下发 CA 证书；</p>\n<p>服务器向浏览器下发 CA 证书；</p>\n<p>浏览器核对证书信息，从操作系统内置的 CA 结构解密 CA 证书，如果没有找到能解密证书的 CA 机构，那么浏览器会提示证书不安全；</p>\n<p>浏览器对证书校验成功后就会生成一个随机的字符串（即对称加密的盐）并使用服务端发送来的公钥对该字符串进行加密得到密文，该密文只有服务端的私钥能解开，服务端接收到密文后进行解密得到字符串，服务端通过该字符串以及对称加密算法就可以进一步反推出来密钥，与服务端自身密钥比对后如果正确，那么接下来就可以与浏览器在 80 端口上安全地传输信息。所以，中间过程的非对称加解密以及证书的颁发都是为了保护浏览器生成的随机字符串不被截取破解。</p>\n<h2 id=\"证书生成以及自签名证书\"><a class=\"anchor\" href=\"#证书生成以及自签名证书\">#</a> 证书生成以及自签名证书</h2>\n<p>查看系统已存证书：certmgr.msc</p>\n<h3 id=\"证书组成\"><a class=\"anchor\" href=\"#证书组成\">#</a> 证书组成</h3>\n<p><strong>CSR</strong>：证书签名请求文件</p>\n<p><strong>CRT</strong>：证书</p>\n<p><strong>KEY</strong>：私钥</p>\n<p>通过私钥生成待签名的 CSR 签名请求文件，签名之后便得到了证书 CRT</p>\n<h3 id=\"服务器端证书生成\"><a class=\"anchor\" href=\"#服务器端证书生成\">#</a> 服务器端证书生成</h3>\n<p>以下使用 OpenSSL 生成证书</p>\n<h4 id=\"下载\"><a class=\"anchor\" href=\"#下载\">#</a> 下载</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3NscHJvd2ViLmNvbS9wcm9kdWN0cy9XaW4zMk9wZW5TU0wuaHRtbA==\">http://slproweb.com/products/Win32OpenSSL.html</span></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210528093939441.png\" alt=\"image-20210528093939441\" /></p>\n<h4 id=\"生成私钥\"><a class=\"anchor\" href=\"#生成私钥\">#</a> 生成私钥</h4>\n<p>安装完成之后，进入安装目录下的 bin 目录，通过 openssl.exe 生成私钥</p>\n<pre><code class=\"language-cmd\">#des3代表对称加密算法\nD:\\ins\\OpenSSL-Win64\\bin&gt;openssl.exe genrsa -des3 -out d:/ins/server.key\nGenerating RSA private key, 2048 bit long modulus (2 primes)\n.......................................................................................+++++\n............................................................................................................................................................................................+++++\ne is 65537 (0x010001)\nEnter pass phrase for d:/ins/server.key: #输入要生成的私钥的盐，盐只参与加密算法的运算，并不在生成的私钥中。要破解生成的私钥，盐就是关键\nVerifying - Enter pass phrase for d:/ins/server.key: #再次输入\n</code></pre>\n<p>这样就在指定目录下生成了私钥</p>\n<pre><code class=\"language-cmd\">-----BEGIN RSA PRIVATE KEY-----\nProc-Type: 4,ENCRYPTED\nDEK-Info: DES-EDE3-CBC,33238A7C3FCEA4CE\n\nmoShb15bLGOO1BMTf96oA/G8FSyCYgwKokEak3R6/Z+RNGBIMbmRdk/UK9KdFdhC\nlkyNAwDaKkJ/tC0rC4Jnr/ghP91wfe9EU5ghqxGRCGfLNKt8ZJYjWpNHSTogXiVS\ndB9gGv6cBMjZ6O+Sy/l+v3XNY7FvMMtfXTFIGXCun0cpu77Kvdauw3jsY5bcetSb\n1S4yvO1vtw5+M55xhE0scrzP8kP1OCfzsrj6a001EB6PWHY1gqK4QZkrqFOoyApT\n6KIu+jOwlBq/3czOEgsxK9k6nGv5pDwjriLA3RLcMDbfAu/jd5FUauea/wEouzT1\nkexK9MV0BsyintPz08gWwFZxIilFwASYMian8Do3OHUe5Hb2BuZnxx95ers9PH5e\ndata3xs7DDa0bAVNkSchAaZBtgKREukWbZTdfHcKZNgNPdj2DJ3oRBioDraRfiwu\n2edcdATtuJSNa9cYB63LB5hENTCuwONUMRzvTUVgJJnb9G1Iap5N1AQ0mBbo5R6F\nhmBLIATlnaV5nDkGFaz+IYUR7MdA0Aup77XSIsf8l6gyRRN2UPqcG1cI5x2t/IOv\nWDgLIse5FcdykhlUN8nh6/0wsaUi653lnhYLx3ZcWUgCczYzKENLu5XP6GY2bVEj\nXQ0nj6uCAsMCF4RYPZNRFS0EFFr24ngBy2Gx5WJ2aVPq5MvxxcYcQTWeZWJ7JEWW\nAGBXX6b9/EwUHWQed5yArf8JTuxKXleH0fnlpz2IJ2gZ7s2o/WmSwk1UXqpiKWwX\nMiaCaEI734oISjEAVyp9lk9OGDSt/3LijMjTLP2G0VuVmekcisECZWRS7+1hj4VP\nrHp/MBuVk+R8VHPm5QNUygpygXXU8FVNne128ScrmA94hw8iijhJJX129N0JVVTa\nRVC+4b73R0RbagSfNXuhm9toJ20aTZL3WUxVJdn0e0EvkStSioZOCIDWu6jKhWUJ\nuPl8KednvpjUcT64KnpwJ6HrzdWiYwhtwBhYEOAOX48P7tDmoroXbueaWfA5Upis\n4csy+GwqEtr4ZYvixC73aDhpI5dhTYCTgyP5R8nyqBSJylR2iJCPvVsq0vBb6Mu5\nRB8v36Sj+Hr7r8OS1eobMwLwzS7xwDpsv7t1dWNU3W+gaZJO8F6OFRrnnsls+muW\n+lpGmpaKFomLY8bG3hWkbPbxNevkt/pZd7M7lN/gCo4k8l4ZlGEokXwwzInm/CSJ\nQBSXciPDAETWBnOgzQcmhhX0RzYo8wPQN6aoS/TYUEtkDFXqBte1kD0lMPf46ciR\nZGUiLqo5gBAsdhKbfZB8lZeL0S/7krAqVBEBG5xKZ/xbyphpRrMDq+TAWsnU9qRf\ntJwLI1O44CBjk8L1pJQHFyl6jhkL5PMJ5ScXlqznZx15GaggfBHXWdZi6W0ffURR\nVHtK3rPS+VQzJN7LRHYdGMBQXp06+/b8EWRBriSc1gwisXpniPYWCQlAazHPDDQf\nb+TwPlRr8YzBhex0+Rcwtkmc5ihgT4489Uxq0oQ6Kupv+W7b+vtQayPfCLlDI+eh\n65nz/zU+DQVpPP8rVBtT+e5QjZre7cWwPBOMaK1YElRZ1mpdiX4cQW5wq/tud7Ud\n-----END RSA PRIVATE KEY-----\n</code></pre>\n<h4 id=\"生成csr\"><a class=\"anchor\" href=\"#生成csr\">#</a> 生成 CSR</h4>\n<pre><code class=\"language-cmd\">#key代表上一步生成的私钥\nD:\\ins\\OpenSSL-Win64\\bin&gt;openssl.exe req -new -key d:/ins/server.key -out d:/ins/server.csr\nEnter pass phrase for d:/ins/server.key: #输入私钥的盐，最少4为，最多1023位\n7536:error:2406F079:random number generator:RAND_load_file:Cannot open file:crypto\\rand\\randfile.c:98:Filename=./.rnd\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:CN #国家\nState or Province Name (full name) [Some-State]:Shanghai #省份\nLocality Name (eg, city) []:Shanghai #城市\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:test #公司\nOrganizational Unit Name (eg, section) []:test #部门\nCommon Name (e.g. server FQDN or YOUR name) []:test #可以写自己的名字或者域名，如果要支持https，Common Name应该与域名保持一致，否则会引起浏览器警告。\nEmail Address []:test@qq.com #邮箱\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:000000 #这里可以随意填写\nAn optional company name []:test\n\n#查看生成的CSR\nD:\\ins\\OpenSSL-Win64\\bin&gt;openssl.exe req -text -in d:/ins/server.csr -noout\nCertificate Request:\n    Data:\n        Version: 1 (0x0)\n        Subject: C = CN, ST = Shanghai, L = Shanghai, O = test, OU = test, CN = test, emailAddress = test@qq.com\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                RSA Public-Key: (2048 bit)\n                Modulus:\n                    00:96:a3:b4:c0:06:b5:6b:15:fc:fe:77:7e:1f:0c:\n                    b5:7b:f7:d9:47:b7:c3:f2:3c:e9:b9:9e:ec:40:54:\n                    71:ea:48:68:b7:e9:cd:b7:4a:0d:e0:23:1c:5e:68:\n                    8d:dc:e8:90:4b:9d:64:24:54:9b:7b:d5:4c:24:0c:\n                    95:52:94:7a:94:81:78:00:60:5b:0a:e9:93:b5:f2:\n                    b9:06:08:28:66:11:66:9f:18:9e:5e:14:61:f5:a0:\n                    f9:43:93:fd:45:9f:82:d6:25:81:1f:20:76:63:ff:\n                    ae:f1:93:f9:72:7f:5c:3f:c8:85:0c:ae:99:6e:68:\n                    f7:72:e3:78:7e:44:e7:9b:71:a1:b2:23:f0:90:0e:\n                    2d:e9:52:29:83:cf:cc:58:63:a9:ff:0a:a8:d7:ed:\n                    f0:46:75:a5:c6:a8:31:fe:92:49:26:b2:9c:65:29:\n                    64:03:24:21:24:84:91:a0:12:c1:88:a9:2f:78:f1:\n                    f0:59:0f:c1:cc:88:2f:b4:44:23:86:4b:9f:cb:71:\n                    0a:1e:e1:85:f9:41:e5:e6:aa:78:6c:cc:56:03:40:\n                    14:69:b7:72:0f:a9:a8:d0:54:ea:67:43:61:35:a5:\n                    a0:8c:eb:fd:ca:86:12:cc:ec:18:e4:39:34:c9:9a:\n                    d0:d9:36:34:02:c3:13:f1:83:4a:a6:b9:14:91:79:\n                    6e:19\n                Exponent: 65537 (0x10001)\n        Attributes:\n            unstructuredName         :test\n            challengePassword        :000000\n    Signature Algorithm: sha256WithRSAEncryption\n         3d:d4:e8:5b:4f:85:bb:39:4e:8c:9f:a5:ec:5c:34:4b:a5:74:\n         b1:88:89:9e:d1:11:d5:a8:45:66:6a:f3:66:9d:91:11:98:40:\n         17:28:dc:d5:7a:75:1d:89:95:3b:e3:c5:49:2c:af:7d:45:ac:\n         2a:bf:aa:67:f3:39:4c:e2:4d:9c:cf:db:2d:59:7a:a9:cd:71:\n         d3:9c:2d:66:f9:ea:b2:f0:0f:22:b6:a0:53:f8:1a:d8:c2:aa:\n         c8:08:34:81:6b:c1:6e:9b:e6:3a:96:a6:58:db:0b:08:8a:6a:\n         99:92:68:da:2f:6b:c7:6b:92:f5:c2:b5:36:52:72:e4:fa:5a:\n         3a:68:5a:2e:06:db:e6:6f:7a:7f:b1:f5:bc:80:4e:be:21:cd:\n         1b:a9:c7:e8:d0:22:0c:26:67:90:cc:ec:c5:a9:f6:38:a9:29:\n         eb:54:be:0c:38:9c:f9:38:1e:63:04:2f:26:a3:71:4b:ec:c6:\n         d9:ac:c5:a3:f8:03:21:29:c5:c9:73:52:b0:ca:f0:80:12:cc:\n         a1:d4:bb:17:c8:f9:a5:20:6d:a4:f3:d6:bf:67:d6:53:cd:1a:\n         f0:38:b4:29:0f:96:21:41:83:8c:94:35:0c:1f:d9:c4:a7:a1:\n         00:2f:bf:a4:3d:b4:da:32:8c:c8:8d:d5:ae:c6:4f:67:4d:5d:\n         23:0b:b7:a1\n</code></pre>\n<ul>\n<li>Country Name (2 letter code) [XX]:CN   #请求签署人的国家信息</li>\n<li>State or Province Name (full name) []: #请求签署人的省份名字</li>\n<li>Locality Name (eg, city) [Default City]:# 请求签署人的城市名字</li>\n<li>Organization Name (eg, company) [Default Company Ltd]:# 请求签署人的公司名字</li>\n<li>Organizational Unit Name (eg, section) []:# 请求签署人的部门名字</li>\n<li>Common Name (eg, your name or your server's hostname) []:# 这里一般填写请求人的的服务器域名，</li>\n</ul>\n<p>接下来需要 CA 机构对以上生成的待签名的 CSR 文件进行签名认证，生成浏览器或操作系统认可的证书，这样网站就不会被浏览器提示不安全。为此，可以通过 OpenSSL 生成一个 CA，通过自己生成的 CA 对服务器端的 CSR 文件进行签名认证。</p>\n<h3 id=\"自建ca\"><a class=\"anchor\" href=\"#自建ca\">#</a> 自建 CA</h3>\n<p>我们用的操作系统（windows, linux, unix ,android, ios 等）都预置了很多信任的根证书，比如我的 windows 中就包含 VeriSign 的根证书，那么浏览器访问服务器比如支付宝 www.alipay.com 时，SSL 协议握手时服务器就会把它的服务器证书发给用户浏览器，而这本服务器证书又是比如 VeriSign 颁发的，自然就验证通过了。</p>\n<p>生成 CA 根证书，内嵌在浏览器或操作系统中，取得其信任</p>\n<pre><code class=\"language-cmd\">#创建CA私钥\nD:\\ins\\OpenSSL-Win64\\bin&gt;openssl.exe genrsa -out d:/ins/myca.key 2048\nGenerating RSA private key, 2048 bit long modulus (2 primes)\n......+++++\n.............+++++\ne is 65537 (0x010001)\n\n#生成CA待签名证书\nD:\\ins\\OpenSSL-Win64\\bin&gt;openssl.exe req -new -key d:/ins/myca.key -out d:/ins/myca.csr\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:CN\nState or Province Name (full name) [Some-State]:Shanghai\nLocality Name (eg, city) []:Shanghai\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:test\nOrganizational Unit Name (eg, section) []:test\nCommon Name (e.g. server FQDN or YOUR name) []:test\nEmail Address []:test@qq.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:000000\nAn optional company name []:test\n\n#生成CA根证书\nD:\\ins\\OpenSSL-Win64\\bin&gt;openssl.exe x509 -req -in d:/ins/myca.csr -extensions v3_ca -signkey d:/ins/myca.key -out myca.crt\nSignature ok\nsubject=C = CN, ST = Shanghai, L = Shanghai, O = test, OU = test, CN = test, emailAddress = test@qq.com\nGetting Private key\n\n#通过生成的CA对服务器端的CSR文件签名\nD:\\ins\\OpenSSL-Win64_1\\bin&gt;openssl x509 -days 365 -req -in d:/ins/server.csr -extensions v3_req -CAkey d:/ins/myca.key -CA d:/ins/myca.crt -CAcreateserial -out d:/ins/server.crt\nSignature ok\nsubject=C = CN, ST = Shanghai, L = Shanghai, O = fan, OU = fan, CN = fan, emailAddress = fan@qq.com\nGetting CA Private Key\n</code></pre>\n<p>双击 CA 证书 myca.crt，将该证书安装在操作系统中</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210528141125857.png\" alt=\"image-20210528141125857\" /></p>\n<h3 id=\"nginx配置\"><a class=\"anchor\" href=\"#nginx配置\">#</a> Nginx 配置</h3>\n<pre><code>server &#123;\n\t\tlisten 443 ssl;\n\t\tserver_name fan.com;\n\t\tssl_certificate D:\\ins\\server.crt;\n\t\tssl_certificate_key D:\\ins\\server.key;\n\t&#125;\n</code></pre>\n<p>重新加载 nginx 配置</p>\n<pre><code class=\"language-cmd\">D:\\ins\\nginx-1.18.0\\nginx-1.18.0&gt;nginx.exe -s reload\nEnter PEM pass phrase: #盐\n</code></pre>\n<p>此时，启动 nginx，需要输入密码，回车后查看日志，报错：</p>\n<pre><code class=\"language-cmd\">the event &quot;ngx_master_8208&quot; was not signaled for 5s\n</code></pre>\n<p>原因：windows 下 nginx 配置 ssl 的 key 是不能存储密码的，否则启动时会提示输入密码 ，输入后也无法启动 nginx</p>\n<p>解决：将服务端的私钥 key 剔除密码，之后再通过 CA 为服务端的 CSR 文件签名</p>\n<pre><code class=\"language-cmd\">D:\\ins\\OpenSSL-Win64_1\\bin&gt;openssl rsa -in d:/ins/server.key -out d:/ins/server_nopass.key\nEnter pass phrase for d:/ins/server.key:\nwriting RSA key\n</code></pre>\n<p>同时修改之前的 nginx 配置</p>\n<pre><code class=\"language-conf\"># HTTPS server\n    #\n    server &#123;\n        listen       443 ssl; #443端口用于CA证书鉴权\n        server_name  fan.com;\n\n        ssl_certificate      D:\\ins\\server.crt;\n        ssl_certificate_key  D:\\ins\\server_nopass.key; #该key不可以有密码\n\n        ssl_session_cache    shared:SSL:1m;\n        ssl_session_timeout  5m;\n\n        ssl_ciphers  HIGH:!aNULL:!MD5;\n        ssl_prefer_server_ciphers  on;\n\n        location / &#123;\n            root   html;\n            index  login.html login.htm; #随便写一个html作为登录后跳转的页面\n        &#125;\n    &#125;\n</code></pre>\n<p>此时可以访问 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sb2NhbGhvc3Q=\">https://localhost</span></p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210528151253183.png\" alt=\"image-20210528151253183\" /></p>\n<p>可以看到访问 https 后，提示不安全，这是因为我们在操作系统虽然配置了 CA 证书，但浏览器并不认识该 CA 证书，需要花钱去指定机构认证</p>\n<p><img data-src=\"https://gitee.com/bfanfanfan/img/raw/master/docsify/image-20210528151918101.png\" alt=\"image-20210528151918101\" /></p>\n<h3 id=\"图形化工具\"><a class=\"anchor\" href=\"#图形化工具\">#</a> 图形化工具</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcHJvamVjdHMveGNhLw==\">https://sourceforge.net/projects/xca/</span></p>\n<p>xca 在 GitHub 上以开源</p>\n<h2 id=\"服务器搭建\"><a class=\"anchor\" href=\"#服务器搭建\">#</a> 服务器搭建</h2>\n<p>服务器搭建首选 CN2、GIA</p>\n<h3 id=\"服务器购买\"><a class=\"anchor\" href=\"#服务器购买\">#</a> 服务器购买</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2dpZ3NnaWdzY2xvdWQuY29t\">gigsgigscloud.com</span></p>\n<h3 id=\"域名购买\"><a class=\"anchor\" href=\"#域名购买\">#</a> 域名购买</h3>\n<p>dns.mba</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2p1bWluZy5jb20=\">juming.com</span></p>\n<h3 id=\"证书生成\"><a class=\"anchor\" href=\"#证书生成\">#</a> 证书生成</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mcmVlc3NsLmNu\">https://freessl.cn</span>  免费签名</p>\n<p>该站点可以对已有的 CSR 文件进行签名后生成一个可信赖的证书，该证书可以被浏览器信任</p>\n",
            "tags": [
                "Java",
                "Java",
                "HTTPS",
                "CA证书",
                "OpenSSL",
                "数字签名"
            ]
        }
    ]
}